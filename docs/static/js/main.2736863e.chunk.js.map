{"version":3,"sources":["app/utils/react_utils.tsx","app/components/UiRow.tsx","app/types.ts","app/utils/fn_utils.ts","app/components/HelperComponents.tsx","app/repo.ts","app/utils/date_utils.ts","app/io.ts","app/utils/path_utils.ts","app/filemap.ts","app/utils/markdown_utils.ts","app/utils/label_utils.ts","app/utils/entry_utils.ts","app/settings.ts","app/git_ops.ts","app/octokit.tsx","app/utils/web_utils.ts","app/components/ColorTag.tsx","app/components/LabelTree.tsx","app/views/List.tsx","app/views/EntryView.tsx","app/views/NoteEditor.tsx","app/views/PrepareCommit.tsx","app/components/RepoSelect.tsx","app/views/AddEntry.tsx","app/views/SettingsView.tsx","app/App.tsx","app/LoginForm.tsx","app/AppLifecycle.tsx","reportWebVitals.ts","index.tsx"],"names":["useEffectOnce","func","useEffect","useDebouncedEffect","delay","deps","callback","useCallback","timeout","setTimeout","clearTimeout","mq","RowContainer","styled","div","ColL","ColC","ColR","UiRow","className","left","center","right","style","EntryKind","VerticalContainer","StretchedUiRow","assertUnreachable","x","Error","mapEntries","obj","f","result","Array","key","value","push","mapUndefinedToNull","computeSelectedIndex","listLength","current","delta","newValue","clone","Date","constructor","hasOwnProperty","NoEntrySelected","image","Empty","PRESENTED_IMAGE_SIMPLE","description","WrapperOuter","WrapperInner","ScrollContent","children","UploadOutlinedWithStatus","status","UploadOutlined","fontSize","position","top","display","height","width","backgroundColor","borderRadius","transition","opacity","EntryKindSymbol","entryKind","Link","GlobalOutlined","NoteMarkdown","EditOutlined","Document","LinkOutlined","fn","VerificationStatus","createDefaultInitializedRepo","isFirst","uuidv4","name","userOrOrgName","repoName","enabled","default","verified","unknown","getRepoId","repo","filterActiveRepos","repos","filter","getDefaultRepo","defaultRepo","find","length","undefined","getRepoCommitPage","commitHash","MultiRepoData","mapData","Object","keys","this","repoId","data","values","dateToString","d","leftPadTwo","n","z","s","leftPad","getFullYear","toString","getMonth","getDate","getHours","getMinutes","getSeconds","formatDateHuman","pad","getDateNow","date","setMilliseconds","serializeMetaData","yaml","labels","timeCreated","date_utils","timeUpdated","parseStoredLinks","content","e","err","ok","links","isArray","extractArray","link","title","extractString","target","extractBool","extractArrayOfString","extractDate","splitDateTime","split","timeWithMillis","splitDate","map","parseInt","year","month","day","isNaN","splitTimeMillis","time","millis","splitTime","hour","minute","second","millisNumber","every","FileKind","NOTEMARKS_FOLDER","NOTEMARKS_LINK_DB_PATH","getFileKind","path","pop","toLowerCase","getAssociatedMetaPath","splitLocationTitleExtension","idxLastSlash","lastIndexOf","substring","splitLocationFilename","location","filename","idxLastDot","unescapeTitle","splitTitleExtension","escaped","i","char","getBasename","entry","replace","escapeTitle","extension","getPath","trim","getPaths","metaPath","isFileInGit","file","sha","rawUrl","isFileFetched","FileMap","MultiRepoFileMap","convertFilesToFileMap","files","fileMap","setFile","processMarkdownText","text","html","markdown","htmlRaw","showdown","Converter","ghCodeBlocks","extensions","simplifiedAutoLink","strikethrough","tables","tasklists","openLinksInNewWindow","makeHtml","DOMPurify","sanitize","ADD_ATTR","convertMarkdown","htmlLinks","DOMParser","parseFromString","querySelectorAll","forEach","htmlLink","href","getAttribute","startsWith","extractLinks","normalizeLabels","resultLabels","existing","labelSanizized","sort","extractLabelsFromString","labelsString","isSameLabels","labelsA","labelsB","doesLabelMatchLabels","queryLabel","some","referenceLabel","queryComponents","referenceComponents","matchesOrIsSublabel","iterateSubLabels","label","components","slice","join","extractStatsMap","entries","statsMap","baseName","fullName","parents","currentStatsMap","count","convertStatsMapToLabelArray","priorityMap","stats","allComponents","priority","a","b","localeCompare","extractLabels","replacement","_wholeMatch","match","highlightjs","type","_converter","_options","helper","replaceRecursiveRegExp","entryKindNumericValues","recomputeKey","kind","path_utils","isDoc","isNote","isLink","getText","extractFileEntriesAndUpdateFileMap","allFileMapsOrig","fileEntries","allFileMapsEdit","console","log","associatedMetaPath","associatedMetaFile","get","createMetaDataFromScratch","metaData","io","isOk","constructFileEntry","error","newMetaData","newMetaDataContent","setContent","fileKind","markdown_utils","extractLinkEntriesFromLinkDB","allFileMaps","allLinkEntriesWithoutRefsResolved","fileLinkDB","linkEntriesWithoutRefsResolvedResult","storedLinks","storedLink","ownLabels","referencedBy","standaloneRepo","standalone","refRepos","refLocations","deserializeLinkEntries","stageLinkDBUpdate","linkEntries","serializedLinkEntries","JSON","stringify","linkEntry","refRepo","serializeLinkEntries","timeEnd","extractMetaData","mergeRepos","existingRepos","incomingRepo","existingRepo","mergeLocations","existingLocations","incomingLocation","existingLocation","recomputeEntries","existingLinkEntries","linkMap","linkInserted","existingLabels","incomingLabels","linkTarget","label_utils","recomputeLinkEntries","idx","sortAndIndexEntries","getDefaultSettings","auth","editor","theme","wordWrap","wordWrapColumn","settingsReducer","state","action","GitOpKind","StorageSession","settings","storeAuth","settingsClone","window","localStorage","setItem","resetAuth","deserializationFailed","validationFailed","loadAuthFailed","settingsWithoutAuth","loadNormalSettings","loadAuthSettings","authSettings","settingsSerialized","getItem","parse","loadAuth","authLoaded","clearAllStorage","localforage","generateSalt","salt","Uint8Array","crypto","getRandomValues","getSalt","stringToByteArray","TextEncoder","encode","arrayBufferToString","TextDecoder","decode","generateKey","password","iterations","subtle","importKey","keyOrig","deriveKey","hash","generateKeyFromStoredSalt","encrypt","dataArray","nonce","alg","iv","dataArrayEncrypted","decrypt","dataEncryptedArray","authSerialized","authData","authNonce","isAnyAuthStored","MultiRepoGitOps","diffMultiFileMaps","multiFileMapOld","multiFileMapNew","multiRepoGitOps","allRepos","getFromRepoId","oldRepoFileMap","newRepoFileMap","set","diffFileMaps","fileMapOld","fileMapNew","gitOps","oldContentMap","contentMap","convertFileMapToFileContentMap","movedFiles","newFile","oldFile","needsToBeWritten","otherOldFile","Move","pathSrc","pathDst","Write","Remove","expect","promise","ResultAsync","fromPromise","wrapPromise","msg","originalError","verifyRepo","octokit","Octokit","tokenGitHub","getContent","owner","base64DecodeUnicode","decodeURIComponent","atob","c","charCodeAt","cachedFetch","andThen","cached","okAsync","response","encoding","plainContent","listFilesRecursive","allErrors","responseData","download_url","listFiles","downloadFiles","fileFetches","mapErr","Promise","all","allResults","loadEntries","filemap","entry_utils","downloadDocument","decodeBase64","commit","ops","commitMsg","oldCommitSHA","newCommitSHA","defaultBranch","octokitGetGeneralRepoInfo","default_branch","branch","git","getRef","ref","octokitGetRef","object","commitSHA","getCommit","commit_sha","octokitGetCommit","oldTreeSHA","tree","treeSHA","getTree","tree_sha","recursive","octokitGetTree","truncated","errAsync","oldTree","newTree","keep","destinationPath","op","mode","applyOps","createTree","octokitCreateTree","newTreeSHA","createCommit","message","octokitCreateCommit","updateRef","force","octokitUpdateRef","getDomain","url","URL","hostname","getYouTubeTitle","exec","fetchBody","fetch","fetchBodyProxied","urlProxied","getTitle","doc","innerText","downloadFromMemory","dataBase64","mediaType","getMediaType","element","document","createElement","setAttribute","body","appendChild","click","removeChild","gtagLoginEvent","gtag","gtagDemoEvent","DefaultTag","Tag","ResponsiveTree","Tree","FilterStatusWrapper","span","FilterStatus","LabelCount","renderLabel","refMap","onClick","event","preventDefault","onContextMenu","subLabel","LabelTree","React","memo","onSetLabelFilter","onRegainFocus","labelTagRefs","useRef","selected","classList","remove","add","treeData","labelCount","selectable","checkable","checkEntryKindFilter","entryKindFilter","checkMatchingTitle","searchTerms","matchesAll","searchTerm","includes","checkMatchingLabels","labelFilters","requiredLabels","forbiddenLabels","allRequired","requiredLabel","anyForbidden","forbiddenLabel","StyledInput","Input","Footer","ExpandButton","Button","List","forwardRef","onEnterEntry","useState","filteredEntries","setFilteredEntries","totalMatchingEntries","searchStats","setSearchStats","numVisibleEntries","setNumVisibleEntries","selectedIndex","setSelectedIndex","setSearchTerms","setLabelFilters","newFilteredEntries","matchingEntryKind","matchingTitle","matchingLabels","filterEntries","oldFilters","newLabel","newState","newFilters","oldFilter","computeNewLabelFilters","focus","antdInputRef","input","onChange","requestAnimationFrame","term","onKeyDown","autoFocus","CustomTable","highlighted","justify","shape","DownOutlined","PseudoTable","PseudoTableRow","TitleWrapper","SymbolWrapper","LabelsWrapper","Title","Typography","Panel","Collapse","editFormLayout","labelCol","wrapperCol","editFormTailLayout","offset","EntryHeader","editForm","marginTop","marginBottom","defaultActiveKey","expandIconPosition","expandIcon","icon","background","header","level","noteEntrySpecific","paddingLeft","linkEntrySpecific","NoteContent","NoteView","onUpdateNoteData","initialTitle","initialLabels","dangerouslySetInnerHTML","__html","NoteEditForm","initialValues","onFinish","Item","rules","required","htmlType","DocView","onOpenDocument","justifyContent","size","marginLeft","marginRight","LinkView","onUpdateLinkData","rel","EntryView","LinkEditForm","Form","useForm","form","isTitleFetching","setIsTitleFetching","Search","enterButton","LoadingOutlined","onSearch","web_utils","setFieldsValue","Modal","extra","DebugBox","NoteEditor","onEditorDidMount","editorRef","onEditorDidMountWrapper","_","useImperativeHandle","getEditorContent","getValue","getScrollPosition","getScrollTop","setScrollPosition","pos","setScrollTop","getCursorPosition","getPosition","setCursorPosition","setPosition","language","editorDidMount","options","cursorBlinking","minimap","renderEntry","prepareCommitMessage","columns","dataIndex","buildTableDataSource","flatMap","Text","code","StyledTitle","PrepareCommit","onSuccessfulCommit","isCommitting","setIsCommitting","onCommit","allResultPromises","singleRepoOps","perRepoCommitMessage","successfulResults","_unsafeUnwrap","success","reduce","prev","curr","bordered","dataSource","pagination","loading","disabled","Option","Select","RepoSelect","TabPane","Tabs","formLayout","fromTailLayout","TabHeader","userSelect","CreateNoteForm","onAdded","resetFields","requiredMark","placeholder","CreateDocumentForm","CreateLinkForm","AddEntry","tab","StyledRepoTitle","Header","wrap","align","gutter","flex","GithubOutlined","color","fromRowProps","FormRow","RepoForm","onDelete","onEdited","onMakeDefault","evt","checked","inProgress","failed","danger","MultiRepoForm","setRepos","addRepo","newRepo","hoverable","VerificationStatusIcon","newRepos","splice","deleteRepo","updatedRepo","updateRepo","j","makeRepoDefault","PlusOutlined","AuthForm","setSettings","Password","defaultValue","EditorForm","QuestionCircleTwoTone","twoToneColor","ExclamationCircleTwoTone","CheckCircleTwoTone","AuthenticationInfo","isAuthenticatedSession","showIcon","SettingsView","dispatch","orientation","editorSettings","Page","Content","Layout","ContentStyled","Mousetrap","prototype","stopCallback","combo","tagName","onbeforeunload","ActionKind","noteViewPositions","noteEditorPositions","keyboardHandlers","handleSwitchEdit","handleSearch","modifyFileEntry","oldFileEntries","oldLinkEntries","oldEntry","newEntry","fileEntryIdx","findIndex","newFileEntries","newLinkEntries","newEntries","newActiveEntryIdx","stageNoteContent","stageContent","stagedData","stageDocumentContent","stageMeta","metaDataContent","reducer","SwitchToPage","page","SwitchToEntryViewOnIdx","activeEntryIdx","StartReloading","isReloading","ReloadingDone","stagedGitOps","UpdateNoteContent","activeEntry","activeEntryModified","newAllFileMapsEdit","git_ops","UpdateEntryMeta","oldTitle","newTitle","titleChanged","labelsChanged","oldPaths","newPaths","entryContent","delete","UpdateLinkEntryMeta","oldOwnLabels","newOwnLabels","linkEntryIdx","tmpLinkEntries","modifyLinkEntry","CreateEntry","addEntryAction","tuple","args","getNewEntriesForAddNote","getNewEntriesForAddDocument","getNewEntriesForAddLink","addEntry","SuccessfulCommit","mousetrap","bind","App","initSettings","session","reloadEntries","useReducer","settingsDispatch","newActiveRepos","repo_utils","newLinkEntriesWithoutRefsResoled","isAuthenticated","storeSettings","Main","getActiveEntry","activeEntryIsNote","anyStagedChange","searchInputRef","storeNoteViewPosition","documentElement","scrollTop","prepareSwitchFrom","pageFrom","targetEditorPosition","restoreNoteEditorPosition","editorScrollPos","editorCursorPos","scroll","cursor","storeNoteEditorPosition","targetBodyPosition","restoreNoteViewPosition","newText","updateEntryContent","useLayoutEffect","selectedKeys","menuInfo","clickedPage","Reload","confirm","ExclamationCircleOutlined","onOk","FileSearchOutlined","ReadOutlined","Add","Commit","ReloadOutlined","SettingOutlined","Settings","contentBase64","renderCenter","LoginForm","anyAuthStored","onLogin","setLoading","reset","loadSettings","settingsLoadResult","visible","src","alt","closable","footer","validateTrigger","validator","rule","resolve","reject","prefix","LockOutlined","valuePropName","parseWindowLocation","ghUserOrOrg","ghRepo","skipLogin","AppLifecycle","setState","locInfo","initialSettings","load","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2736863e.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useRef } from \"react\";\n\n// The problem with forwardRef in TypeScript is that using a normal React.Ref<T> as\n// the second argument makes its RefObject immutable, i.e., ref.current cannot be\n// be written to. The correct way is to infer the type directly from the\n// ForwardRefRenderFunction type itself (the [1] pulls its second arg type).\n// https://github.com/DefinitelyTyped/DefinitelyTyped/issues/31065\n// https://stackoverflow.com/questions/51851677/how-to-get-argument-types-from-function-in-typescript\nexport type MutableRef<T> = Parameters<React.ForwardRefRenderFunction<T, unknown>>[1];\n\nexport function useTraceUpdate(props: { [k: string]: any }) {\n  const prev = useRef(props);\n  useEffect(() => {\n    const changes = Object.entries(props).reduce((changes: { [k: string]: [any, any] }, [k, v]) => {\n      if (prev.current[k] !== v) {\n        changes[k] = [prev.current[k], v];\n      }\n      return changes;\n    }, {});\n    if (Object.keys(changes).length > 0) {\n      console.log(\"Changed props:\", changes);\n    }\n    prev.current = props;\n  });\n}\n\nexport function useEffectOnce(func: () => void) {\n  // https://stackoverflow.com/a/56767883/1804173\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(func, []);\n}\n\nexport const useDebouncedEffect = (func: () => void, delay: number, deps: React.DependencyList) => {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const callback = useCallback(func, deps);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      callback();\n    }, delay);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [callback, delay]);\n};\n","import React from \"react\";\n\nimport styled from \"@emotion/styled\";\n\n// In general recommended breakpoints from Bootstrap are\n// 576px, 768px, 992px, 1200px\n// https://getbootstrap.com/docs/4.0/layout/overview/#responsive-breakpoints\n\n// Also see my alternative impl at: https://stackoverflow.com/a/65281378/1804173\nconst mq = {\n  xs: \"@media (max-width: 576px)\",\n  sm: \"@media (min-width: 576px)\",\n  md: \"@media (min-width: 768px)\",\n  lg: \"@media (min-width: 992px)\",\n  xl: \"@media (min-width: 1200px)\",\n};\n\nconst RowContainer = styled.div`\n  display: flex;\n`;\n\nconst ColL = styled.div`\n  ${mq[\"xs\"]} {\n    flex: 0 0 16px;\n    min-width: 16px;\n  }\n  ${mq[\"sm\"]} {\n    flex: 0 0 16px;\n    min-width: 16px;\n  }\n  ${mq[\"md\"]} {\n    flex: 1 0 200px;\n    min-width: 200px;\n  }\n`;\nconst ColC = styled.div`\n  ${mq[\"xs\"]} {\n    flex: 1 1 576px;\n  }\n  ${mq[\"sm\"]} {\n    flex: 1 1 576px;\n  }\n  ${mq[\"md\"]} {\n    flex: 1 1 768px;\n  }\n  ${mq[\"lg\"]} {\n    flex: 1 1 992px;\n  }\n  ${mq[\"xl\"]} {\n    flex: 0 1 1200px;\n  }\n`;\nconst ColR = styled.div`\n  ${mq[\"xs\"]} {\n    flex: 0 0 16px;\n    min-width: 16px;\n  }\n  ${mq[\"sm\"]} {\n    flex: 0 0 16px;\n    min-width: 16px;\n  }\n  ${mq[\"xl\"]} {\n    flex: 2 0 200px;\n    min-width: 200px;\n  }\n`;\n\nexport type UiRowProps = {\n  className?: string;\n  left?: React.ReactNode;\n  center: React.ReactNode;\n  right?: React.ReactNode;\n  style?: React.CSSProperties;\n};\n\nexport function UiRow({ className, left, center, right, style }: UiRowProps) {\n  return (\n    <RowContainer className={className} style={style}>\n      <ColL>{left}</ColL>\n      <ColC>{center}</ColC>\n      <ColR>{right}</ColR>\n    </RowContainer>\n  );\n}\n\nexport const VerticalContainer = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StretchedUiRow = styled(UiRow)`\n  flex-grow: 1;\n  height: 100%;\n`;\n","import { Repo } from \"./repo\";\n\n// ----------------------------------------------------------------------------\n// Entry\n// ----------------------------------------------------------------------------\n\nexport enum EntryKind {\n  NoteMarkdown = \"NoteMarkdown\",\n  Link = \"Link\",\n  Document = \"Document\",\n}\n\nexport type FileEntryProps = {\n  repo: Repo;\n  location: string;\n  extension: string;\n  timeCreated: Date;\n  timeUpdated: Date;\n  rawUrl?: string;\n};\n\nexport type ContentDoc = {\n  kind: EntryKind.Document;\n  stagedData?: string;\n} & FileEntryProps;\n\nexport type ContentNote = {\n  kind: EntryKind.NoteMarkdown;\n  text: string;\n  html: string;\n  links: string[];\n} & FileEntryProps;\n\nexport type ContentLink = {\n  kind: EntryKind.Link;\n  target: string;\n  referencedBy: Entry[];\n  standaloneRepo?: Repo;\n  refRepos: Repo[];\n  refLocations: string[];\n  ownLabels: string[];\n};\n\nexport type Content = ContentDoc | ContentNote | ContentLink;\n\nexport type ContentFile = ContentDoc | ContentNote;\n\n/*\nDesign questions regarding Entry fields\n---------------------------------------\n\nShould the entry store a `repoId` or a full `repo` reference?\n\nAt first, I only stored a `repoId` within the entries, relying on lookup\nof the full repo data if needed. However, this raises the question what\nto do when the user edits the repo settings, and an entry refers either\nto a non-existing repo id, or also to a repo different from the one it\nwas loaded from? Properly maintaining such a foreign key relationship\nseems painful.\n\nSo what about de-normalizing the repo into the entry? The fact that an\nentry exists actually proves that the repo it was loaded from was at\nleast valid at the time of loading. If the user now edits the repos\npage, the attached repo and the \"settings repo\" could be different,\nbut when the next \"entry reload\" runs, the newly loaded entries get\nthe modified repo attached. Should be fine.\n*/\nexport type Entry = {\n  // Common props\n  title: string;\n  priority: number;\n  labels: RawLabel[];\n  // Kind specific content\n  content: Content;\n  // React specific key to use Entry in lists. Will typically be a composition of\n  // repoId + location + title\n  key?: string;\n  // Internal index within ordered/unfiltered entries array.\n  // Allows for easier/faster lookups compared to using `key`.\n  idx?: number;\n};\n\n// Entry flavors\nexport type EntryDoc = Omit<Entry, \"content\"> & { content: ContentDoc };\nexport type EntryNote = Omit<Entry, \"content\"> & { content: ContentNote };\nexport type EntryLink = Omit<Entry, \"content\"> & { content: ContentLink };\n\nexport type EntryFile = Omit<Entry, \"content\"> & { content: ContentFile };\n\nexport type Entries = Entry[];\n\n// ----------------------------------------------------------------------------\n// Label\n// ----------------------------------------------------------------------------\n\n// TODO: At some point labels need to store at least the priority as well\n// so that arrays of labels can be properly sorted without extra information.\nexport type RawLabel = string;\n\n// TODO: What would be a better name? Perhaps we should use `Label` for what\n// is `RawLabel` now and find a suitable name for this one. The properties\n// that are not trivially derivable from a raw label are `count` and\n// `children`. So possible terms:\n// ProcessedLabel, StructuredLabel, LabelWithContext, LabelWithCount\nexport type Label = {\n  baseName: string;\n  fullName: string;\n  priority: number;\n  count: number;\n  children: Labels;\n};\n\nexport type Labels = Label[];\n\n// ----------------------------------------------------------------------------\n// Error Handling\n// ----------------------------------------------------------------------------\n\nexport type WrappedError = {\n  msg: string;\n  originalError?: Error;\n};\n","export function assertUnreachable(x: never): never {\n  throw new Error(\"Unhandled case: \" + x);\n}\n\nexport function mapEntries<A, B>(obj: { [key: string]: A }, f: (k: string, v: A) => B): Array<B> {\n  let result = Array<B>();\n  for (let key in obj) {\n    let value = obj[key];\n    result.push(f(key, value));\n  }\n  return result;\n}\n\nexport function mapNullToUndefined<T>(x: T | null | undefined): T | undefined {\n  return x != null ? x : undefined;\n}\n\nexport function mapUndefinedToNull<T>(x: T | null | undefined): T | null {\n  return x != null ? x : null;\n}\n\nexport function computeSelectedIndex(listLength: number, current: number, delta: number): number {\n  if (listLength <= 0) {\n    return -1;\n  } else if (current === -1) {\n    return delta > 0 ? 0 : listLength - 1;\n  } else {\n    let newValue = current + delta;\n    while (newValue >= listLength) newValue -= listLength;\n    while (newValue < 0) newValue += listLength;\n    return newValue;\n  }\n}\n\nexport function clone<T>(obj: T): T {\n  // Influenced by:\n  // https://stackoverflow.com/a/30503290/1804173\n  // https://stackoverflow.com/a/40294058/1804173\n  if (obj == null || typeof obj != \"object\") {\n    return obj;\n  }\n\n  if (obj instanceof Date) {\n    return new Date(obj) as any;\n  }\n\n  var result = new (obj as any).constructor();\n\n  for (var key in obj) {\n    if ((obj as any).hasOwnProperty(key)) {\n      result[key] = clone(obj[key]);\n    }\n  }\n\n  return result;\n}\n","import React from \"react\";\n\nimport { Empty } from \"antd\";\nimport { UploadOutlined, EditOutlined, GlobalOutlined, LinkOutlined } from \"@ant-design/icons\";\n\nimport styled from \"@emotion/styled\";\n\nimport { EntryKind } from \"../types\";\nimport * as fn from \"../utils/fn_utils\";\n\nexport const NoEntrySelected = () => (\n  <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description=\"No entry selected\" />\n);\n\nconst WrapperOuter = styled.div`\n  position: relative;\n  overflow: auto;\n  // This height specification is crucial as well, otherwise the box height\n  // collapses completely.\n  height: 100%;\n`;\n\nconst WrapperInner = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  // It looks like it is equivalent to specify width/height or bottom/right\n  width: 100%;\n  height: 100%;\n  // bottom: 0;\n  // right: 0;\n\n  padding: 1px;\n`;\n\nexport function ScrollContent({ children }: { children: React.ReactNode }) {\n  return (\n    <WrapperOuter>\n      <WrapperInner>{children}</WrapperInner>\n    </WrapperOuter>\n  );\n}\n\nexport function UploadOutlinedWithStatus({ status }: { status: boolean }) {\n  return (\n    <>\n      <UploadOutlined style={{ fontSize: 16 }} />\n      <span\n        style={{\n          position: \"relative\",\n        }}\n      >\n        <span\n          style={{\n            position: \"absolute\",\n            left: \"0px\",\n            top: \"-6px\",\n            display: \"inline-block\",\n            height: \"7px\",\n            width: \"7px\",\n            backgroundColor: \"#f33756\",\n            borderRadius: \"50%\",\n            transition: \"all 0.2 linear\",\n            opacity: status ? 1 : 0,\n          }}\n        />\n      </span>\n    </>\n  );\n}\n\nexport function EntryKindSymbol({\n  entryKind,\n  style,\n}: {\n  entryKind: EntryKind;\n  style?: React.CSSProperties;\n}) {\n  switch (entryKind) {\n    case EntryKind.Link:\n      return <GlobalOutlined style={style} />;\n    case EntryKind.NoteMarkdown:\n      return <EditOutlined style={style} />;\n    case EntryKind.Document:\n      return <LinkOutlined style={style} />;\n    default:\n      fn.assertUnreachable(entryKind);\n  }\n}\n","import { v4 as uuidv4 } from \"uuid\";\nimport * as fn from \"./utils/fn_utils\";\n\nexport enum VerificationStatus {\n  unknown,\n  failed,\n  success,\n  inProgress,\n}\n\n/*\nDesign questions\n----------------\n\nWhat kind of ID mechanism should repos have?\n\nAt first I was using an `id` field containing a randomly generated UUID.\nThe main motivation for this was to have an internal field that is guaranteed\nto be different for different repos. However this has the drawback that\nwhen deleting and re-adding the same repository (i.e. same user/repo data),\nthe repo would have gotten a new UUID. Would this be a problem?\n\nSolution: The role of that ID was purely for React list handling.\nLet's rename it to `key` to make its role more clear.\nUse getRepoId function below to actually compute a more semantically\nmeaningful identifier where needed.\n\n*/\nexport type Repo = {\n  key: string;\n  name: string;\n  userOrOrgName: string;\n  repoName: string;\n  enabled: boolean;\n  default: boolean;\n  verified: VerificationStatus;\n};\n\nexport type Repos = Repo[];\n\n// ----------------------------------------------------------------------------\n// Construction / Helpers\n// ----------------------------------------------------------------------------\n\nexport function createDefaultInitializedRepo(isFirst: boolean): Repo {\n  return {\n    key: uuidv4(),\n    name: \"Default\",\n    userOrOrgName: \"\",\n    repoName: \"\",\n    enabled: true,\n    default: isFirst ? true : false,\n    verified: VerificationStatus.unknown,\n  };\n}\n\nexport function createSimpleRepo(name: string, ghUserOrOrg: string, ghRepo: string): Repo {\n  return {\n    key: uuidv4(),\n    name: name,\n    userOrOrgName: ghUserOrOrg,\n    repoName: ghRepo,\n    enabled: true,\n    default: true,\n    verified: VerificationStatus.success,\n  };\n}\n\nexport function getRepoId(repo: Repo): string {\n  // In GitHub world, this should provide a unique identifier.\n  return `github_${repo.userOrOrgName}_${repo.repoName}`;\n}\n\nexport function filterActiveRepos(repos: Repos): Repos {\n  return repos.filter((repo) => repo.enabled && repo.verified);\n}\n\nexport function getDefaultRepo(repos: Repos): Repo | undefined {\n  let defaultRepo = repos.find((repo) => repo.default);\n  if (defaultRepo != null) {\n    return defaultRepo;\n  } else {\n    return repos.length > 0 ? repos[0] : undefined;\n  }\n}\n\n// ----------------------------------------------------------------------------\n// Utility functions\n// ----------------------------------------------------------------------------\n\nexport function getRepoCommitPage(repo: Repo, commitHash: string): string {\n  return `https://github.com/${repo.userOrOrgName}/${repo.repoName}/commit/${commitHash}`;\n}\n\n// ----------------------------------------------------------------------------\n// Multi repo data type and helper\n// ----------------------------------------------------------------------------\n\n/*\n// TBD if we should actually account for optionality in value lookup...\n// The ` | undefined` on the values definitely sucks, because we don't really\n// want existing values to be undefined.\n// https://github.com/microsoft/TypeScript/issues/13778\n// The easiest solution seems to be to wrap the map in a class where the getter\n// return `Value | undefined` but the setter and the internal map use the type\n// without optionality.\n\nexport type MultiRepoData<T> = { [id: string]: { repo: Repo; data: T } };\n\nexport function mapMultiRepo<T, R>(\n  multiRepoData: MultiRepoData<T>,\n  f: (repo: Repo, data: T) => R\n): R[] {\n  let result = [] as R[];\n  let repoIds = Object.keys(multiRepoData);\n  for (let repoId of repoIds) {\n    let { repo, data } = multiRepoData[repoId];\n    result.push(f(repo, data));\n  }\n  return result;\n}\n*/\n\nexport type MultiRepoDataMapValueType<T> = { repo: Repo; data: T };\n\nexport type MultiRepoDataMapType<T> = { [id: string]: MultiRepoDataMapValueType<T> };\n\nexport class MultiRepoData<T> {\n  constructor(readonly mapData: MultiRepoDataMapType<T> = {}) {}\n\n  forEach(f: (repo: Repo, data: T) => void) {\n    for (let repoId of Object.keys(this.mapData)) {\n      let { repo, data } = this.mapData[repoId];\n      f(repo, data);\n    }\n  }\n\n  map<R>(f: (repo: Repo, data: T) => R): R[] {\n    let result = [] as R[];\n    for (let repoId of Object.keys(this.mapData)) {\n      let { repo, data } = this.mapData[repoId];\n      result.push(f(repo, data));\n    }\n    return result;\n  }\n\n  flatMap<R>(f: (repo: Repo, data: T) => R[]): R[] {\n    let result = [] as R[];\n    for (let repoId of Object.keys(this.mapData)) {\n      let { repo, data } = this.mapData[repoId];\n      for (let x of f(repo, data)) {\n        result.push(x);\n      }\n    }\n    return result;\n  }\n\n  set(repo: Repo, data: T) {\n    this.mapData[getRepoId(repo)] = { repo: repo, data: data };\n  }\n\n  get(repo: Repo): MultiRepoDataMapValueType<T> | undefined {\n    return this.mapData[getRepoId(repo)];\n  }\n\n  getFromRepoId(repoId: string): MultiRepoDataMapValueType<T> | undefined {\n    return this.mapData[repoId];\n  }\n\n  keys(): string[] {\n    return Object.keys(this.mapData);\n  }\n\n  values(): MultiRepoDataMapValueType<T>[] {\n    return Object.values(this.mapData);\n  }\n\n  size(): number {\n    return Object.keys(this.mapData).length;\n  }\n\n  clone(): MultiRepoData<T> {\n    return fn.clone(this);\n  }\n}\n","function leftPad(n: number, width: number, z: string = \"0\") {\n  let s = \"\" + n;\n  while (s.length < width) {\n    s = z + s;\n  }\n  return s;\n}\n\nexport function dateToString(d: Date): string {\n  const leftPadTwo = (x: number) => leftPad(x, 2);\n\n  return (\n    d.getFullYear().toString() +\n    \"-\" +\n    leftPadTwo(d.getMonth() + 1) +\n    \"-\" +\n    leftPadTwo(d.getDate()) +\n    \"T\" +\n    leftPadTwo(d.getHours()) +\n    \":\" +\n    leftPadTwo(d.getMinutes()) +\n    \":\" +\n    leftPadTwo(d.getSeconds())\n  );\n}\n\nexport function stringToDate(s: string): Date | undefined {\n  let splitDateTime = s.split(\"T\");\n  if (splitDateTime.length !== 2) {\n    return undefined;\n  }\n\n  let [date, timeWithMillis] = splitDateTime;\n\n  let splitDate = date.split(\"-\");\n  if (splitDate.length !== 3) {\n    return undefined;\n  }\n\n  let [year, month, day] = splitDate.map((x) => parseInt(x));\n  if (isNaN(year) || isNaN(month) || isNaN(day)) {\n    return undefined;\n  }\n\n  let splitTimeMillis = timeWithMillis.split(\".\");\n  if (splitTimeMillis.length === 1) {\n    splitTimeMillis.push(\"0\");\n  } else if (splitTimeMillis.length !== 2) {\n    return undefined;\n  }\n\n  let [time, millis] = splitTimeMillis;\n\n  let splitTime = time.split(\":\");\n  if (splitTime.length !== 3) {\n    return undefined;\n  }\n\n  let [hour, minute, second] = splitTime.map((x) => parseInt(x));\n  if (isNaN(hour) || isNaN(minute) || isNaN(second)) {\n    return undefined;\n  }\n\n  let millisNumber = parseInt(millis);\n  if (isNaN(millisNumber)) {\n    return undefined;\n  }\n\n  return new Date(year, month - 1, day, hour, minute, second, millisNumber);\n}\n\nexport function formatDateHuman(d: Date): string {\n  function pad(n: number): string {\n    return n < 10 ? \"0\" + n : n.toString();\n  }\n  return (\n    d.getFullYear() +\n    \"-\" +\n    pad(d.getMonth() + 1) +\n    \"-\" +\n    pad(d.getDate()) +\n    \"  @  \" +\n    pad(d.getHours()) +\n    \":\" +\n    pad(d.getMinutes()) +\n    \":\" +\n    pad(d.getSeconds())\n  );\n}\n\nexport function getDateNow() {\n  // Returns the current date, but truncates the milliseconds, so that the\n  // data reflects the precision we are using during serialization.\n  let date = new Date();\n  date.setMilliseconds(0);\n  return date;\n}\n","import * as yaml from \"js-yaml\";\n\nimport * as date_utils from \"./utils/date_utils\";\n\nimport { ok, err, Result } from \"neverthrow\";\n\n/*\nTypes and function used during serialization/deserialization.\n\nThis is where we have to care about backwards compatibility.\n*/\n\n// ----------------------------------------------------------------------------\n// Meta data\n// ----------------------------------------------------------------------------\n\nexport type MetaData = {\n  labels: string[];\n  timeCreated: Date;\n  timeUpdated: Date;\n};\n\nexport function createNewMetaData(): MetaData {\n  let date = date_utils.getDateNow();\n  return {\n    labels: [],\n    timeCreated: date,\n    timeUpdated: date,\n  };\n}\n\nexport function parseMetaData(content: string): Result<MetaData, Error> {\n  let data: any;\n  try {\n    data = yaml.safeLoad(content) as any;\n  } catch (e) {\n    return err(e);\n  }\n\n  if (typeof data !== \"object\") {\n    return err(new Error(\"Meta data isn't an object.\"));\n  } else {\n    let labels = extractArrayOfString(data[\"labels\"]);\n    let timeCreated = extractDate(data[\"timeCreated\"]);\n    let timeUpdated = extractDate(data[\"timeUpdated\"]);\n\n    if (labels == null) {\n      return err(new Error(\"Meta data field 'labels' isn't an string array.\"));\n    } else if (timeCreated == null) {\n      return err(new Error(\"Meta data field 'timeCreated' cannot be parsed.\"));\n    } else if (timeUpdated == null) {\n      return err(new Error(\"Meta data field 'timeUpdated' cannot be parsed.\"));\n    } else {\n      return ok({\n        labels: labels,\n        timeCreated: timeCreated,\n        timeUpdated: timeUpdated,\n      });\n    }\n  }\n}\n\nexport function serializeMetaData(data: MetaData): string {\n  return yaml.safeDump({\n    labels: data.labels,\n    timeCreated: date_utils.dateToString(data.timeCreated),\n    timeUpdated: date_utils.dateToString(data.timeUpdated),\n  });\n}\n\n// ----------------------------------------------------------------------------\n// Link data\n// ----------------------------------------------------------------------------\n\nexport type StoredLink = {\n  title: string;\n  target: string;\n  standalone: boolean;\n  ownLabels: string[];\n};\n\nexport type StoredLinks = StoredLink[];\n\nexport function parseStoredLinks(content: string): Result<StoredLinks, Error> {\n  let data: any;\n  try {\n    data = yaml.safeLoad(content) as any;\n  } catch (e) {\n    return err(e);\n  }\n\n  if (data == null) {\n    return ok([]);\n  } else if (typeof data !== \"object\") {\n    return err(new Error(\"Link data isn't an object.\"));\n  } else {\n    let links = extractArray(data[\"links\"]);\n    if (links == null) {\n      return err(new Error(\"Link data field 'links' isn't an array.\"));\n    }\n\n    for (let link of links) {\n      // Mandatory fields\n      let title = extractString(link[\"title\"]);\n      let target = extractString(link[\"target\"]);\n\n      if (title == null) {\n        return err(new Error(\"Link data field 'title' isn't a string.\"));\n      } else if (target == null) {\n        return err(new Error(\"Link data field 'target' isn't a string.\"));\n      }\n\n      // Optional fields\n      if (\"standalone\" in link) {\n        let standalone = extractBool(link[\"standalone\"]);\n        if (standalone == null) {\n          return err(new Error(\"Link data field 'standalone' isn't a boolean.\"));\n        }\n      } else {\n        link[\"standalone\"] = false;\n      }\n\n      if (\"ownLabels\" in link) {\n        let ownLabels = extractArrayOfString(link[\"ownLabels\"]);\n        if (ownLabels == null) {\n          return err(new Error(\"Link data field 'ownLabels' isn't an array of string.\"));\n        }\n      } else {\n        link[\"ownLabels\"] = [];\n      }\n    }\n    return ok(links as StoredLink[]);\n  }\n}\n\nexport function serializeStoredLinks(storedLinks: StoredLinks): string {\n  storedLinks = [...storedLinks].sort((a, b) => a.target.localeCompare(b.target));\n  // Reasons not to use the generic YAML serialization:\n  // - Doesn't allow (easily / at all?) to drop properties for maximally concise representation.\n  // - Max line length behavior not needed in our use case (unnecessary overhead)\n  // - Due to genericity, it is a bit slow.\n  // return yaml.safeDump({ links: data });\n  let components = [\"links:\"];\n  if (storedLinks.length === 0) {\n    components.push(\"  []\");\n  } else {\n    for (let storedLink of storedLinks) {\n      components.push(\"  - title: \" + JSON.stringify(storedLink.title));\n      components.push(\"    target: \" + JSON.stringify(storedLink.target));\n      if (storedLink.standalone) {\n        components.push(\"    standalone: true\");\n      }\n      if (storedLink.ownLabels.length > 0) {\n        components.push(\"    ownLabels: \" + JSON.stringify(storedLink.ownLabels));\n      }\n    }\n  }\n  components.push(\"\"); // To enforce final newline\n  return components.join(\"\\n\");\n}\n\n// ----------------------------------------------------------------------------\n// Parse utils\n// ----------------------------------------------------------------------------\n\nexport function extractString(obj: any | undefined): string | undefined {\n  if (typeof obj === \"string\") {\n    return obj as string;\n  }\n}\n\nexport function extractBool(obj: any | undefined): boolean | undefined {\n  if (typeof obj === \"boolean\") {\n    return obj as boolean;\n  }\n}\n\nexport function extractDate(obj: any | undefined): Date | undefined {\n  if (typeof obj === \"string\") {\n    return date_utils.stringToDate(obj);\n  }\n}\n\nexport function extractArray(obj: any | undefined): any[] | undefined {\n  if (Array.isArray(obj)) {\n    return obj as any[];\n  }\n}\n\nexport function extractArrayOfString(obj: any | undefined): string[] | undefined {\n  if (Array.isArray(obj) && obj.every((x) => typeof x === \"string\")) {\n    return obj as string[];\n  }\n}\n","import { EntryFile } from \"../types\";\n\nexport const NOTEMARKS_FOLDER = \".notemarks\";\nexport const NOTEMARKS_LINK_DB_PATH = `${NOTEMARKS_FOLDER}/link_db.yaml`;\n\n// ----------------------------------------------------------------------------\n// General path helper\n// ----------------------------------------------------------------------------\n\nexport enum FileKind {\n  NoteMarkdown = \"NoteMarkdown\",\n  Document = \"Document\",\n}\n\nexport function getFileKind(path: string): FileKind {\n  let extension = path.split(\".\").pop()?.toLowerCase();\n  if (extension === \"md\") {\n    return FileKind.NoteMarkdown;\n  } else {\n    return FileKind.Document;\n  }\n}\n\nexport function isNotemarksFile(path: string): boolean {\n  return path.startsWith(NOTEMARKS_FOLDER);\n}\n\nexport function getAssociatedMetaPath(path: string): string {\n  return `${NOTEMARKS_FOLDER}/${path}.yaml`;\n}\n\nexport function splitLocationFilename(path: string): [string, string] {\n  let idxLastSlash = path.lastIndexOf(\"/\");\n  if (idxLastSlash === -1) {\n    return [\"\", path];\n  } else {\n    return [path.substring(0, idxLastSlash), path.substring(idxLastSlash + 1)];\n  }\n}\n\nexport function splitTitleExtension(filename: string) {\n  let idxLastDot = filename.lastIndexOf(\".\");\n  if (idxLastDot === -1) {\n    return [unescapeTitle(filename), \"\"];\n  } else {\n    return [unescapeTitle(filename.substring(0, idxLastDot)), filename.substring(idxLastDot + 1)];\n  }\n}\n\nexport function splitLocationTitleExtension(path: string): [string, string, string] {\n  let [location, filename] = splitLocationFilename(path);\n  let [title, extension] = splitTitleExtension(filename);\n  return [location, title, extension];\n}\n\n// ----------------------------------------------------------------------------\n// Encoding/decoding of title <-> filename\n// ----------------------------------------------------------------------------\n\n/*\nNotes on encoding:\n\nIn Unicode the normal `/` is U+002F SOLIDUS.\nTherefore the closest replacement is U+29F8 BIG SOLIDUS.\n\nSimilarly `\\` is U+005C REVERSE SOLIDUS.\nTherefore the closest replacement is U+29F9 BIG REVERSE SOLIDUS.\n\n- http://www.fileformat.info/info/unicode/char/29F8/index.htm\n- https://www.fileformat.info/info/unicode/char/29f9/index.htm\n- https://stackoverflow.com/questions/9847288/is-it-possible-to-use-in-a-filename/9847306#comment12550838_9847306\n- https://stackoverflow.com/a/61448658/1804173\n- https://en.wikipedia.org/wiki/Filename#Reserved_characters_and_words\n*/\n\nexport function unescapeTitle(s: string): string {\n  let result = \"\";\n  let escaped = false;\n  for (let i = 0; i < s.length; ++i) {\n    let char = s[i];\n    if (escaped) {\n      result += char;\n      escaped = false;\n    } else {\n      if (char === \"\\u{29F9}\") {\n        escaped = true;\n      } else if (char === \"\\u{29F8}\") {\n        result += \"/\";\n      } else {\n        result += char;\n      }\n    }\n  }\n  return result;\n  // The initial implementation used a bunch of regexes.\n  // However this is awkward to get right, because each of the regexes\n  // would need an lookbehind of arbitrary length, see e.g.:\n  // https://stackoverflow.com/q/56554/1804173\n  // However, this would be tricky to reassemble with $i syntax of\n  // String.replace. So probably better to write a manual parser?\n  //\n  // The weird prefix conditions means:\n  // - either no \\u{29F9} or\n  // - a double \\u{29F9}\\u{29F9}\n  // - or beginning of string.\n  /*\n  return s\n    .replace(/([^\\u{29F9}]|\\u{29F9}\\u{29F9}|^)\\u{29F8}/gu, \"$1/\")\n    .replace(/([^\\u{29F9}]|\\u{29F9}\\u{29F9}|^)\\u{29F9}\\u{29F8}/gu, \"$1\\u{29F8}\")\n    .replace(/\\u{29F9}\\u{29F9}/gu, \"\\u{29F9}\");\n  */\n}\n\nexport function escapeTitle(s: string): string {\n  // Rule to get the conversion order right:\n  // Characters appearing on the right hand side must never appear on the\n  // left hand sind in a later replacement.\n  return s\n    .replace(/\\u{29F9}/gu, \"\\u{29F9}\\u{29F9}\")\n    .replace(/\\u{29F8}/gu, \"\\u{29F9}\\u{29F8}\")\n    .replace(/\\//gu, \"\\u{29F8}\");\n}\n\n// ----------------------------------------------------------------------------\n// Higher level helpers on Entry\n// ----------------------------------------------------------------------------\n\nexport function getBasename(entry: EntryFile): string {\n  let s = escapeTitle(entry.title);\n  if (entry.content.extension !== \"\") {\n    s += \".\" + entry.content.extension;\n  }\n  return s;\n}\n\nexport function getPath(entry: EntryFile): string {\n  return entry.content.location.trim().length === 0\n    ? getBasename(entry)\n    : `${entry.content.location}/${getBasename(entry)}`;\n}\n\nexport function getPaths(entry: EntryFile): { path: string; metaPath: string } {\n  let path = getPath(entry);\n  return {\n    path: path,\n    metaPath: getAssociatedMetaPath(path),\n  };\n}\n","import { WrappedError } from \"./types\";\nimport { MultiRepoData } from \"./repo\";\n\nimport * as fn from \"./utils/fn_utils\";\n\nexport type File = {\n  path: string;\n  sha?: string;\n  rawUrl?: string;\n  content?: string;\n  error?: WrappedError;\n};\n\nexport type Files = File[];\n\n// File type flavors\n\nexport type FileInGit = {\n  path: string;\n  sha: string;\n  rawUrl: string;\n};\nexport function isFileInGit(file: File): file is FileInGit {\n  return file.sha != null && file.rawUrl != null;\n}\n\nexport type FileFetched = FileInGit & {\n  content: string;\n};\nexport function isFileFetched(file: File): file is FileFetched {\n  return file.content != null && isFileInGit(file);\n}\n\nexport type FileFetchedFailed = FileInGit & {\n  error: WrappedError;\n};\nexport function isFileFetchedFailed(file: File): file is FileFetchedFailed {\n  return file.error != null && isFileInGit(file);\n}\n\nexport type FileVirtual = {\n  path: string;\n  content: string;\n};\nexport function isFileVirtual(file: File): file is FileVirtual {\n  return file.content != null;\n}\n\n// ----------------------------------------------------------------------------\n// FileMap\n// ----------------------------------------------------------------------------\n\nexport type FileMapRaw = { [path: string]: File };\n\nexport class FileMap {\n  constructor(readonly map: FileMapRaw = {}) {}\n\n  setContent(path: string, content: string) {\n    // TODO: Should we actually compute a proper SHA-1?\n    if (path in this.map) {\n      this.map[path].content = content;\n    } else {\n      this.map[path] = {\n        path: path,\n        content: content,\n      };\n    }\n  }\n\n  setFile(path: string, file: File) {\n    this.map[path] = file;\n  }\n\n  delete(path: string) {\n    delete this.map[path];\n  }\n\n  get(path: string): File | undefined {\n    return this.map[path];\n  }\n\n  keys(): string[] {\n    return Object.keys(this.map);\n  }\n\n  values(): File[] {\n    return Object.values(this.map);\n  }\n\n  clone(): FileMap {\n    return fn.clone(this);\n  }\n\n  forEach(fn: (file: File) => void) {\n    for (let file of Object.values(this.map)) {\n      fn(file);\n    }\n  }\n}\n\nexport type MultiRepoFileMap = MultiRepoData<FileMap>;\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport const MultiRepoFileMap = MultiRepoData as { new (): MultiRepoFileMap };\n\n// ----------------------------------------------------------------------------\n// Utils\n// ----------------------------------------------------------------------------\n\nexport function convertFilesToFileMap(files: Files): FileMap {\n  let fileMap = new FileMap();\n  for (let file of files) {\n    fileMap.setFile(file.path, file);\n  }\n  return fileMap;\n}\n\nexport function convertFileMapToFileContentMap(fileMap: FileMap): FileMapRaw {\n  let contentMap = {} as FileMapRaw;\n  fileMap.forEach((file) => {\n    if (file.content != null) {\n      contentMap[file.content] = file;\n    }\n  });\n  return contentMap;\n}\n","import showdown from \"showdown\";\nimport DOMPurify from \"dompurify\";\n\nimport * as highlightjs from \"highlight.js\";\nimport \"highlight.js/styles/monokai-sublime.css\";\n\n/*\n// ----------------------------------------------------------------------------\n// Notes:\n// ----------------------------------------------------------------------------\n\nSetting the innerHTML from the converted markdown is an XSS vulnerability.\nThere are two possibilities:\n1. Convert the HTML to pure React VDOM nodes. This is what\n   https://github.com/aknuds1/html-to-react does.\n   This may have downsides in terms of performance due to overhead?\n2. Use a sanitizer on the HTML before setting.\n   DOMPurify seems to be a popular solution.\n\nReferences:\n- https://stackoverflow.com/a/56394170/1804173\n- https://github.com/cure53/DOMPurify\n*/\n\n// Inspired by (for lack of configurability):\n// https://github.com/unional/showdown-highlightjs-extension/blob/master/src/index.ts\nshowdown.extension(\"highlightjs\", function () {\n  function htmlunencode(text: string) {\n    // Note: It is important to unescape &amp; last. Otherwise the string \"&lt;\" gets\n    // incorrectly unescaped: The escaped form of \"&lt;\" is \"&amp;lt;\". If we first\n    // replace \"&amp;\" -> \"&\" and then \"&lt;\" -> \"<\", we get \"<\" instead of \"&lt;\".\n    return text.replace(/&lt;/g, \"<\").replace(/&gt;/g, \">\").replace(/&amp;/g, \"&\");\n  }\n  function replacement(_wholeMatch: string, match: string, left: string, right: string) {\n    // unescape match to prevent double escaping\n    // console.log(\"escaped:\", match)\n    match = htmlunencode(match);\n    // console.log(left)\n    // console.log(\"unescaped:\", match)\n    // We need to add the hljs class to the <pre> tag to properly set e.g. background color.\n    left = '<pre class=\"hljs\"><code>';\n    // TODO: The tags created from showdown from a ```xxx ``` block are actually <pre><code class=\"xxx language-xxx\".\n    // It would be better here to use that information and forward the user specified language instead of relying\n    // on autodetection.\n    const highlighted = highlightjs.highlightAuto(match).value; // highlightjs applies escaping internally.\n    // console.log(\"highlighted and escaped:\", highlighted);\n    return left + highlighted + right;\n  }\n\n  const left = \"<pre><code\\\\b[^>]*>\";\n  const right = \"</code></pre>\";\n  const flags = \"g\";\n  return [\n    {\n      type: \"output\",\n      filter: function (text, _converter, _options) {\n        return showdown.helper.replaceRecursiveRegExp(text, replacement, left, right, flags);\n      },\n    },\n  ];\n});\n\nexport function convertMarkdown(markdown: string): string {\n  // https://github.com/showdownjs/showdown#valid-options\n  const converter = new showdown.Converter({\n    ghCodeBlocks: true,\n    extensions: [\"highlightjs\"],\n    simplifiedAutoLink: true,\n    strikethrough: true,\n    tables: true,\n    tasklists: true,\n    openLinksInNewWindow: true,\n  });\n\n  // Apparently 'github' flavor leads to treating every line break as a visible\n  // line break in the output, which is not necessarily desired if line breaks\n  // are placed in the markdown source mainly for making the source look nice,\n  // but a full paragraph is desired in the output. Disable for now.\n  // converter.setFlavor('github');\n\n  let htmlRaw = converter.makeHtml(markdown);\n  let htmlSanitized = DOMPurify.sanitize(htmlRaw, {\n    // To allow opening links in new window: https://github.com/cure53/DOMPurify/issues/317\n    ADD_ATTR: [\"target\"],\n  });\n\n  return htmlSanitized;\n}\n\nexport function extractLinks(html: string): string[] {\n  const doc = new DOMParser().parseFromString(html, \"text/html\");\n  const htmlLinks = doc.querySelectorAll(\"a\");\n\n  const links = [] as string[];\n\n  htmlLinks.forEach((htmlLink) => {\n    let href = htmlLink.getAttribute(\"href\")?.trim();\n    if (href != null && !href.startsWith(\"#\")) {\n      links.push(href);\n    }\n  });\n\n  return links;\n}\n\nexport function processMarkdownText(text: string): [string, string[]] {\n  let html = convertMarkdown(text);\n  let links = extractLinks(html);\n  return [html, links];\n}\n","import { Entries, Label, Labels } from \"../types\";\nimport * as fn from \"./fn_utils\";\n\nexport function newLabel(fullName: string): Label {\n  return {\n    fullName,\n    baseName: getBaseName(fullName),\n    count: 0,\n    children: [],\n    priority: 0,\n  };\n}\n\nexport function getBaseName(fullName: string): string {\n  let components = fullName.split(\"/\");\n  return components[components.length - 1];\n}\n\n// ----------------------------------------------------------------------------\n// Label normalization / extraction\n// ----------------------------------------------------------------------------\n\nexport function normalizeLabels(labels: string[]): string[] {\n  let resultLabels = [];\n  let existing = {} as { [label: string]: boolean };\n  for (let label of labels) {\n    let labelSanizized = label.replace(/^\\/+|\\/+$/g, \"\");\n    if (!(labelSanizized in existing) && labelSanizized !== \"\") {\n      resultLabels.push(labelSanizized);\n      existing[labelSanizized] = true;\n    }\n  }\n  resultLabels.sort();\n  return resultLabels;\n}\n\nexport function extractLabelsFromString(labelsString: string): string[] {\n  return normalizeLabels(labelsString.split(/\\s/));\n}\n\n// ----------------------------------------------------------------------------\n// Comparison\n// ----------------------------------------------------------------------------\n\nexport function isSameLabels(labelsA: string[], labelsB: string[]): boolean {\n  labelsA = normalizeLabels(labelsA);\n  labelsB = normalizeLabels(labelsB);\n  if (labelsA.length !== labelsB.length) {\n    return false;\n  } else {\n    for (let i = 0; i < labelsA.length; ++i) {\n      if (labelsA[i] !== labelsB[i]) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nexport function matchesOrIsSublabel(queryLabel: string, referenceLabel: string): boolean {\n  if (queryLabel === referenceLabel) {\n    return true;\n  } else {\n    let queryComponents = queryLabel.split(\"/\");\n    let referenceComponents = referenceLabel.split(\"/\");\n    if (queryComponents.length > referenceComponents.length) {\n      return false;\n    }\n    for (let i = 0; i < queryComponents.length; ++i) {\n      if (queryComponents[i] !== referenceComponents[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nexport function doesLabelMatchLabels(queryLabel: string, labels: string[]): boolean {\n  return labels.some((referenceLabel) => matchesOrIsSublabel(queryLabel, referenceLabel));\n}\n\nexport function iterateSubLabels(\n  label: string,\n  func: (baseName: string, fullName: string, parents: string[]) => void\n) {\n  let components = label.split(\"/\");\n  for (let i = 0; i < components.length; ++i) {\n    let baseName = components[i];\n    let fullName = components.slice(0, i + 1).join(\"/\");\n    let location = components.slice(0, i);\n    func(baseName, fullName, location);\n  }\n}\n\n// ----------------------------------------------------------------------------\n// Helper for extractLabels\n// ----------------------------------------------------------------------------\n\nexport type Stats = {\n  count: number;\n  children: StatsMap;\n};\nexport type StatsMap = { [index: string]: Stats };\n\nexport function extractStatsMap(entries: Entries, priorityMap = {}): StatsMap {\n  let statsMap = {} as StatsMap;\n  for (let entry of entries) {\n    for (let label of entry.labels) {\n      iterateSubLabels(label, (baseName, fullName, parents) => {\n        // Descend map according to parents\n        let currentStatsMap = statsMap;\n        for (let parent of parents) {\n          currentStatsMap = currentStatsMap[parent].children;\n        }\n        // Either create new stats map or update count\n        if (!currentStatsMap.hasOwnProperty(baseName)) {\n          currentStatsMap[baseName] = {\n            count: 1,\n            children: {},\n          };\n        } else {\n          currentStatsMap[baseName].count += 1;\n        }\n      });\n    }\n  }\n  return statsMap;\n}\n\ntype PriorityMap = { [fullName: string]: number };\n\nexport function convertStatsMapToLabelArray(\n  statsMap: StatsMap,\n  priorityMap: PriorityMap = {},\n  parents: string[] = []\n): Label[] {\n  let labels = fn.mapEntries(statsMap, (baseName: string, stats: Stats) => {\n    let allComponents = [...parents, baseName];\n    let fullName = allComponents.join(\"/\");\n    let children = convertStatsMapToLabelArray(stats.children, priorityMap, allComponents);\n    return {\n      baseName,\n      fullName,\n      children,\n      count: stats.count,\n      priority: priorityMap[fullName] || 0,\n    };\n  });\n\n  labels = labels.sort((a, b) => {\n    // TODO: Incorporate sort priorities here.\n    return a.baseName.toLowerCase().localeCompare(b.baseName.toLowerCase());\n  });\n\n  return labels;\n}\n\nexport function extractLabels(entries: Entries, priorityMap: PriorityMap = {}): Labels {\n  let statsMap = extractStatsMap(entries);\n  return convertStatsMapToLabelArray(statsMap);\n}\n","import { ok, Result } from \"neverthrow\";\n\nimport {\n  Content,\n  ContentDoc,\n  ContentNote,\n  ContentLink,\n  ContentFile,\n  EntryKind,\n  Entry,\n  Entries,\n  EntryDoc,\n  EntryNote,\n  EntryLink,\n  EntryFile,\n  RawLabel,\n} from \"../types\";\nimport { Repo, getRepoId } from \"../repo\";\n\nimport { MetaData, StoredLinks } from \"../io\";\nimport * as io from \"../io\";\n\nimport { FileKind } from \"./path_utils\";\nimport * as path_utils from \"./path_utils\";\n\nimport { File, isFileInGit, isFileFetched, MultiRepoFileMap } from \"../filemap\";\n\nimport * as markdown_utils from \"./markdown_utils\";\nimport * as label_utils from \"./label_utils\";\n\nconst entryKindNumericValues = {\n  [EntryKind.NoteMarkdown]: 0,\n  [EntryKind.Document]: 1,\n  [EntryKind.Link]: 2,\n};\n\nexport function sortAndIndexEntries(entries: Entries) {\n  entries.sort((a, b) => {\n    if (a.content.kind !== b.content.kind) {\n      return entryKindNumericValues[a.content.kind] - entryKindNumericValues[b.content.kind];\n    } else {\n      return a.title.toLowerCase().localeCompare(b.title.toLowerCase());\n    }\n  });\n  for (let i = 0; i < entries.length; ++i) {\n    entries[i].idx = i;\n  }\n}\n\nexport function recomputeKey<T extends Entry>(entry: T): T {\n  // For some reason the compiler doesn't understand isFile(entry) here...\n  if (isFileContent(entry.content)) {\n    let path = path_utils.getPath(entry as EntryFile);\n    entry.key = `${entry.content.repo.key}:${path}`;\n  } else {\n    entry.key = `__link_${entry.content.target}`;\n  }\n  return entry;\n}\n\n/*\nUser defined type guard helpers:\nhttps://www.typescriptlang.org/docs/handbook/advanced-types.html#user-defined-type-guards\n\nRegarding nesting see:\nhttps://stackoverflow.com/questions/65347424/user-defined-type-guard-on-outer-type-nested-property\n*/\n\n// On Content\n\nexport function isDocContent(content: Content): content is ContentDoc {\n  return content.kind === EntryKind.Document;\n}\n\nexport function isNoteContent(content: Content): content is ContentNote {\n  return content.kind === EntryKind.NoteMarkdown;\n}\n\nexport function isLinkContent(content: Content): content is ContentLink {\n  return content.kind === EntryKind.Link;\n}\n\nexport function isFileContent(content: Content): content is ContentFile {\n  return content.kind === EntryKind.Document || content.kind === EntryKind.NoteMarkdown;\n}\n\n// On Entry\n\nexport function isDoc(entry: Entry): entry is EntryDoc {\n  return entry.content.kind === EntryKind.Document;\n}\n\nexport function isNote(entry: Entry): entry is EntryNote {\n  return entry.content.kind === EntryKind.NoteMarkdown;\n}\n\nexport function isLink(entry: Entry): entry is EntryLink {\n  return entry.content.kind === EntryKind.Link;\n}\n\nexport function isFile(entry: Entry): entry is EntryFile {\n  return entry.content.kind === EntryKind.Document || entry.content.kind === EntryKind.NoteMarkdown;\n}\n\n// Other Helpers\n\nexport function getText(entry: Entry): string | undefined {\n  if (entry.content.kind === EntryKind.NoteMarkdown) {\n    return entry.content.text;\n  }\n}\n\n// ----------------------------------------------------------------------------\n// File entry extraction from FileMap\n// ----------------------------------------------------------------------------\n\nexport function extractFileEntriesAndUpdateFileMap(\n  allFileMapsOrig: MultiRepoFileMap\n): [EntryFile[], MultiRepoFileMap] {\n  let fileEntries: EntryFile[] = [];\n  let allFileMapsEdit = allFileMapsOrig.clone();\n\n  allFileMapsOrig.forEach((repo, fileMap) => {\n    fileMap.forEach((file) => {\n      let isNotemarksFile = path_utils.isNotemarksFile(file.path);\n      if (!isNotemarksFile) {\n        // For meta data there are three cases:\n        // - No meta file exists => okay, create/stage new\n        // - Meta file exists, but fetch fails => create/stage not good, report as error,\n        //   remove the corresponding entry to avoid accidentally overwriting the (possibly\n        //   valid) meta file.\n        // - Meta file exists, fetch is okay, but parse fails => In this case staging seems\n        //   okay. If meta data is broken, users may want to have it fixed anyway. Also\n        //   a user sees this action clearly by the staged change, and git history is\n        //   recoverable anyway.\n\n        let associatedMetaPath = path_utils.getAssociatedMetaPath(file.path);\n        let associatedMetaFile = fileMap.get(associatedMetaPath);\n        let createMetaDataFromScratch = false;\n\n        if (associatedMetaFile != null && associatedMetaFile.content != null) {\n          // Meta file fetch successful\n          let metaData = io.parseMetaData(associatedMetaFile.content);\n          if (metaData.isOk()) {\n            // Parse successful\n            let entry = constructFileEntry(repo, file, metaData.value);\n            if (entry != null) {\n              fileEntries.push(entry);\n            }\n          } else {\n            // Parse failed => load entry + stage fix\n            createMetaDataFromScratch = true;\n          }\n        } else if (associatedMetaFile != null && associatedMetaFile.error != null) {\n          // Meta file fetch failed\n          console.log(\n            `Skipping entry extraction for ${file.path} because associated meta couldn't be fetched.`\n          );\n        } else {\n          // No meta file at all => load entry + stage fix\n          createMetaDataFromScratch = true;\n        }\n\n        if (createMetaDataFromScratch) {\n          let newMetaData = io.createNewMetaData();\n          let newMetaDataContent = io.serializeMetaData(newMetaData);\n          let entry = constructFileEntry(repo, file, newMetaData);\n          if (entry != null) {\n            fileEntries.push(entry);\n            allFileMapsEdit.get(repo)?.data.setContent(associatedMetaPath, newMetaDataContent);\n          }\n        }\n      } else if (!isFileFetched(file)) {\n        console.log(file);\n      }\n    });\n  });\n\n  return [fileEntries, allFileMapsEdit];\n}\n\nexport function constructFileEntry(\n  repo: Repo,\n  file: File,\n  metaData: MetaData\n): EntryFile | undefined {\n  let fileKind = path_utils.getFileKind(file.path);\n  let [location, title, extension] = path_utils.splitLocationTitleExtension(file.path);\n\n  let content: Content;\n  // Regarding double enum conversion\n  // https://stackoverflow.com/a/42623905/1804173\n  // https://stackoverflow.com/questions/55377365/what-does-keyof-typeof-mean-in-typescript\n  if (fileKind === FileKind.NoteMarkdown && isFileFetched(file)) {\n    let text = file.content;\n    let [html, links] = markdown_utils.processMarkdownText(text);\n\n    content = {\n      kind: (fileKind as keyof typeof FileKind) as EntryKind.NoteMarkdown,\n      repo: repo,\n      location: location,\n      extension: extension,\n      timeCreated: metaData.timeCreated as Date,\n      timeUpdated: metaData.timeUpdated as Date,\n      rawUrl: file.rawUrl,\n      text: text,\n      html: html,\n      links: links,\n    };\n  } else if (fileKind === FileKind.Document && isFileInGit(file)) {\n    content = {\n      kind: (fileKind as keyof typeof FileKind) as EntryKind.Document,\n      repo: repo,\n      location: location,\n      extension: extension,\n      timeCreated: metaData.timeCreated as Date,\n      timeUpdated: metaData.timeUpdated as Date,\n      rawUrl: file.rawUrl,\n    };\n  } else {\n    console.log(\"ERROR: Could not create file entry for:\", file);\n    return undefined;\n  }\n\n  return recomputeKey({\n    title: title,\n    priority: 0,\n    labels: metaData.labels,\n    content: content,\n  });\n}\n\n// ----------------------------------------------------------------------------\n// High level Link DB loading/storing\n// ----------------------------------------------------------------------------\n\nexport function extractLinkEntriesFromLinkDB(allFileMaps: MultiRepoFileMap): EntryLink[] {\n  let allLinkEntriesWithoutRefsResolved = [] as EntryLink[];\n  allFileMaps.forEach((repo, fileMap) => {\n    let fileLinkDB = fileMap.get(path_utils.NOTEMARKS_LINK_DB_PATH);\n    if (fileLinkDB != null && fileLinkDB.content != null) {\n      let linkEntriesWithoutRefsResolvedResult = deserializeLinkEntries(repo, fileLinkDB.content);\n      if (linkEntriesWithoutRefsResolvedResult.isOk()) {\n        // TODO: We need duplicate removal here...\n        allLinkEntriesWithoutRefsResolved = [\n          ...allLinkEntriesWithoutRefsResolved,\n          ...linkEntriesWithoutRefsResolvedResult.value,\n        ];\n      }\n    }\n  });\n  return allLinkEntriesWithoutRefsResolved;\n}\n\nexport function stageLinkDBUpdate(linkEntries: EntryLink[], allFileMapsEdit: MultiRepoFileMap) {\n  console.time(\"stageLinkDBUpdate\");\n\n  allFileMapsEdit.forEach((repo, fileMap) => {\n    let serializedLinkEntries = serializeLinkEntries(repo, linkEntries);\n    fileMap.setContent(path_utils.NOTEMARKS_LINK_DB_PATH, serializedLinkEntries);\n  });\n\n  console.timeEnd(\"stageLinkDBUpdate\");\n}\n\n// ----------------------------------------------------------------------------\n// Link entry serialization/deserialization (via StoredLinks conversion)\n// ----------------------------------------------------------------------------\n\nfunction serializeLinkEntries(repo: Repo, linkEntries: EntryLink[]): string {\n  let storedLinks: StoredLinks = linkEntries\n    .filter(\n      (linkEntry) =>\n        linkEntry.content.refRepos.some((refRepo) => getRepoId(refRepo) === getRepoId(repo)) ||\n        (linkEntry.content.standaloneRepo != null &&\n          getRepoId(linkEntry.content.standaloneRepo) === getRepoId(repo))\n    )\n    .map((linkEntry) => ({\n      title: linkEntry.title,\n      target: linkEntry.content.target,\n      ownLabels: linkEntry.content.ownLabels,\n      standalone:\n        linkEntry.content.standaloneRepo != null &&\n        getRepoId(linkEntry.content.standaloneRepo) === getRepoId(repo),\n    }));\n  return io.serializeStoredLinks(storedLinks);\n}\n\nfunction deserializeLinkEntries(repo: Repo, content?: string): Result<EntryLink[], Error> {\n  let storedLinks =\n    content != null ? io.parseStoredLinks(content) : (ok([]) as Result<StoredLinks, Error>);\n  return storedLinks.map((storedLinks) =>\n    storedLinks.map((storedLink) =>\n      recomputeKey({\n        title: storedLink.title,\n        priority: 0, // TODO: needs to be stored?\n        labels: storedLink.ownLabels,\n        content: {\n          kind: EntryKind.Link,\n          target: storedLink.target,\n          referencedBy: [],\n          standaloneRepo: storedLink.standalone ? repo : undefined,\n          refRepos: [],\n          refLocations: [],\n          ownLabels: storedLink.ownLabels,\n        },\n      })\n    )\n  );\n}\n\n// ----------------------------------------------------------------------------\n// Meta data extraction\n// ----------------------------------------------------------------------------\n\nexport function extractMetaData(entry: EntryFile): MetaData {\n  return {\n    labels: entry.labels,\n    timeCreated: entry.content.timeCreated,\n    timeUpdated: entry.content.timeUpdated,\n  };\n}\n\n// ----------------------------------------------------------------------------\n// File + link entry fusion\n// ----------------------------------------------------------------------------\n\nexport function mergeLabels(existingLabels: RawLabel[], incomingLabels: RawLabel[]): RawLabel[] {\n  return label_utils.normalizeLabels([...existingLabels, ...incomingLabels]);\n}\n\nexport function mergeRepos(existingRepos: Repo[], incomingRepo: Repo): Repo[] {\n  if (!existingRepos.some((existingRepo) => getRepoId(existingRepo) === getRepoId(incomingRepo))) {\n    existingRepos.push(incomingRepo);\n  }\n  return existingRepos;\n}\n\nexport function mergeLocations(existingLocations: string[], incomingLocation: string): string[] {\n  if (!existingLocations.some((existingLocation) => existingLocation === incomingLocation)) {\n    existingLocations.push(incomingLocation);\n  }\n  return existingLocations;\n}\n\nexport function recomputeLinkEntries(\n  fileEntries: EntryFile[],\n  existingLinkEntries: EntryLink[]\n): EntryLink[] {\n  console.time(\"link extraction\");\n\n  /*\n  If the links variable contains the current array of EntryLinks, how\n  should this loop look like exactly? In order to allow for non-standalone\n  to disappear, we should actually only insert standalone links in the\n  results. However, this would mean that we lose the title and labels\n  information that is directly attached to these links (the links\n  inferred below can only be initialized with the default title equaling\n  the link target, and the labels directly inherited from the note).\n  Therefore, we should insert all existing links to the result, but\n  we would need a post-processing to remove those links that are not\n  standalone and did not get any references attached. A bit ugly.\n\n  Better idea: Use two data structures:\n  - The final link result list\n  - An internal lookup for existing links\n  - An internal lookup to keep track of what has already been inserted\n    to the result.\n\n  The loop can fill standalone links directly into the result.\n\n  Non-standalone links can be added to the lookup map so that if they\n  are needed in the infer part below they can be read from there.\n\n  The third data structure is needed, because there are three cases\n  to consinder in the lower loop:\n  - The file entry references a link that is not at all in the link map\n    => create new.\n  - The file entry references a link that is in the link map, but hasn't been inserted\n    => update refs and insert\n  - The file entry references a link that is in the link map and has been inserted\n    => only update refs\n  */\n\n  let linkEntries = [] as EntryLink[];\n  let linkMap: { [link: string]: EntryLink } = {};\n  let linkInserted: { [link: string]: boolean } = {};\n\n  for (let link of existingLinkEntries) {\n    /*\n    // We need to 'reset' the link data so that the infered fields can be computed from scratch.\n    // Perhaps pull this out into a `cloneResetLink` helper function for better testability.\n    let resetLinkEntry: EntryLink = {\n      title: link.title,\n      priority: link.priority,\n      labels: link.content.ownLabels,\n      content: {\n        kind: EntryKind.Link,\n        target: link.content.target,\n        referencedBy: [],\n        refRepos: [],\n        refLocations: [],\n        standaloneRepo: link.content.standaloneRepo,\n        ownLabels: link.content.ownLabels,\n      },\n      key: link.key,\n    };\n    */\n    // EDIT: We need to keep the identity of link entries to re-identify their\n    // index after `recomputeEntries`, therere we currently mutate instead of\n    // clone.\n    link.content.referencedBy = [];\n    link.content.refRepos = [];\n    link.content.refLocations = [];\n    link.labels = link.content.ownLabels.slice(0);\n\n    // We assume that existingLinks do not contain duplicate links? I.e., no different link\n    // data (title/labels) for the same link target. If existingLinks is the result of a\n    // previous processing this should be satisfied, because identical link targets would\n    // have been fused. The only exception is the case where the existing links are read\n    // from the repo in the initial load -- and the user has manually violated the\n    // invariant. We simply ignore any duplicate link record here.\n    if (!(link.content.target in linkMap)) {\n      if (link.content.standaloneRepo != null) {\n        linkEntries.push(link);\n        linkInserted[link.content.target] = true;\n      }\n      linkMap[link.content.target] = link;\n    } else {\n      console.log(`WARNING: Existing links contains duplicate ${link.content.target}. Discarding.`);\n    }\n  }\n\n  for (let entry of fileEntries) {\n    if (isNote(entry)) {\n      for (let linkTarget of entry.content.links) {\n        // TODO: rename entry.content.links to linkTargets because they aren't \"real\" links?\n        if (!(linkTarget in linkMap)) {\n          let linkEntry: EntryLink = recomputeKey({\n            title: linkTarget, // TODO fetch here but then this whole thing becomes async and slow?\n            priority: 0,\n            labels: entry.labels.slice(0),\n            content: {\n              kind: EntryKind.Link,\n              target: linkTarget,\n              referencedBy: [entry],\n              refRepos: [entry.content.repo],\n              refLocations: [entry.content.location],\n              ownLabels: [],\n            },\n          });\n          linkEntries.push(linkEntry);\n          linkInserted[linkTarget] = true;\n          linkMap[linkTarget] = linkEntry;\n        } else {\n          let linkEntry = linkMap[linkTarget];\n          linkEntry.content.referencedBy.push(entry);\n          linkEntry.content.refRepos = mergeRepos(linkEntry.content.refRepos, entry.content.repo);\n          linkEntry.content.refLocations = mergeLocations(\n            linkEntry.content.refLocations,\n            entry.content.location\n          );\n          linkEntry.labels = mergeLabels(linkEntry.labels, entry.labels);\n          if (!(linkTarget in linkInserted)) {\n            linkEntries.push(linkEntry);\n            linkInserted[linkEntry.content.target] = true;\n          }\n        }\n      }\n    }\n  }\n\n  // TODO: Check if we have to sort the labels attached to links.\n  // In case we call mergeLabels, they should be sorted, because it sorts\n  // internally. However, we initialize by `ownLabels` and if we never\n  // call mergeLabels (i.e. no reference = standalone link), we would\n  // never sort them, and it is maybe not good to rely on them\n  // being sorted on disc?\n  // Perhaps it is easier to get rid of sorting them during the merge\n  // but rather have an explicit sort post-processing.\n  // **EDIT** Now that mergeLabels internally performs a full normalization\n  // this should be covered, right?\n\n  console.timeEnd(\"link extraction\");\n  // console.log(linkMap);\n  return linkEntries;\n}\n\nexport function recomputeEntries(\n  fileEntries: EntryFile[],\n  existingLinkEntries: EntryLink[]\n): [EntryLink[], Entries] {\n  let linkEntries = recomputeLinkEntries(fileEntries, existingLinkEntries);\n  let entries = [...fileEntries, ...linkEntries];\n\n  sortAndIndexEntries(entries);\n\n  return [linkEntries, entries];\n}\n","import * as localforage from \"localforage\";\n\nimport { Repos, createDefaultInitializedRepo } from \"./repo\";\n\nexport type AuthSettings = {\n  tokenGitHub?: string;\n};\n\nexport type EditorSettings = {\n  fontSize: number;\n  theme: \"dark\" | \"light\";\n  wordWrap: \"off\" | \"on\" | \"wordWrapColumn\" | \"bounded\";\n  wordWrapColumn: number;\n};\n\nexport type Settings = {\n  repos: Repos;\n  auth: AuthSettings;\n  editor: EditorSettings;\n};\n\nexport type SettingsWithoutAuth = Omit<Settings, \"auth\">;\n\nexport function getDefaultEditorSettings(): EditorSettings {\n  return {\n    fontSize: 12,\n    theme: \"dark\",\n    wordWrap: \"bounded\",\n    wordWrapColumn: 100,\n  };\n}\n\nexport function getDefaultSettings(): Settings {\n  return {\n    repos: [createDefaultInitializedRepo(true)],\n    auth: {},\n    editor: getDefaultEditorSettings(),\n  };\n}\n\n/*\nPossible future settings:\n\nGeneral settings:\n  - number of visible rows in list view\n  - whether to count links in label counts. Although: If we make the label count update dynamic,\n    this wouldn't be needed. Dynamic would definitely be cooler.\n*/\n\n// ----------------------------------------------------------------------------\n// Settings reducer (trivial for now)\n// ----------------------------------------------------------------------------\n\nexport type SettingsAction = Partial<Settings>;\n\nexport function settingsReducer(state: Settings, action: SettingsAction): Settings {\n  return { ...state, ...action };\n}\n\n// ----------------------------------------------------------------------------\n// Storage I/O\n// ----------------------------------------------------------------------------\n\ntype SettingsLoadStatus = {\n  deserializationFailed: boolean;\n  validationFailed: boolean;\n  loadAuthFailed: boolean;\n};\n\ntype SettingsLoadResult = {\n  settings: Settings;\n  status: SettingsLoadStatus;\n};\n\nexport class StorageSession {\n  constructor(private key?: CryptoKey) {}\n\n  isAuthenticated(): boolean {\n    return this.key != null;\n  }\n\n  storeSettings(settings: Settings) {\n    if (this.key != null) {\n      storeAuth(settings.auth, this.key);\n    }\n\n    let settingsClone: any = { ...settings };\n    delete settingsClone[\"auth\"];\n    window.localStorage.setItem(\"settings\", JSON.stringify(settingsClone));\n  }\n\n  async loadSettings(resetAuth: boolean): Promise<SettingsLoadResult> {\n    let status: SettingsLoadStatus = {\n      deserializationFailed: false,\n      validationFailed: false,\n      loadAuthFailed: false,\n    };\n    let settingsWithoutAuth = this.loadNormalSettings(status);\n    let authSettings = await this.loadAuthSettings(status, resetAuth);\n\n    let settings: Settings = { ...settingsWithoutAuth, auth: authSettings };\n\n    return { settings, status };\n  }\n\n  private loadNormalSettings(status: SettingsLoadStatus): SettingsWithoutAuth {\n    let settingsSerialized = window.localStorage.getItem(\"settings\");\n    if (settingsSerialized != null) {\n      // TODO: We need real validation here\n      let settings = JSON.parse(settingsSerialized) as Settings;\n      return settings;\n    } else {\n      status.deserializationFailed = true;\n      return getDefaultSettings();\n    }\n  }\n\n  private async loadAuthSettings(\n    status: SettingsLoadStatus,\n    resetAuth: boolean\n  ): Promise<AuthSettings> {\n    if (this.key == null || resetAuth) {\n      return {};\n    } else {\n      let authLoaded = await loadAuth(this.key);\n      if (authLoaded != null) {\n        return authLoaded;\n      } else {\n        status.loadAuthFailed = true;\n        return {};\n      }\n    }\n  }\n}\n\nexport function clearAllStorage() {\n  localforage.clear();\n  for (let key in window.localStorage) {\n    delete window.localStorage[key];\n  }\n}\n\n// ----------------------------------------------------------------------------\n// Crypto helpers\n// ----------------------------------------------------------------------------\n\ntype Salt = Uint8Array;\ntype Nonce = Uint8Array;\n\nexport function generateSalt(): Salt {\n  var salt = new Uint8Array(16);\n  window.crypto.getRandomValues(salt);\n  return salt;\n}\n\nexport async function getSalt(): Promise<Salt> {\n  let salt = (await localforage.getItem(\"salt\")) as Salt | undefined;\n  if (salt != null) {\n    return salt;\n  } else {\n    salt = generateSalt();\n    await localforage.setItem(\"salt\", salt);\n    return salt;\n  }\n}\n\nfunction stringToByteArray(s: string): Uint8Array {\n  var encoder = new TextEncoder();\n  var sEncoded = encoder.encode(s);\n  return sEncoded;\n}\n\nfunction arrayBufferToString(a: ArrayBuffer): string {\n  var decoder = new TextDecoder();\n  var s = decoder.decode(a);\n  return s;\n}\n\n// ----------------------------------------------------------------------------\n// Encryption\n// ----------------------------------------------------------------------------\n\nexport async function generateKey(password: string, salt: Salt): Promise<CryptoKey> {\n  // https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/importKey\n  // https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/deriveKey\n  let iterations = 10000;\n\n  let keyOrig = await window.crypto.subtle.importKey(\n    \"raw\",\n    stringToByteArray(password),\n    { name: \"PBKDF2\" },\n    false,\n    [\"deriveBits\", \"deriveKey\"]\n  );\n  let key = await window.crypto.subtle.deriveKey(\n    // algorithm\n    {\n      name: \"PBKDF2\",\n      salt: salt,\n      iterations: iterations,\n      hash: \"SHA-256\",\n    },\n    // baseKey\n    keyOrig,\n    // derivedKeyAlgorithm\n    { name: \"AES-GCM\", length: 256 },\n    // extractable\n    false,\n    // keyUsages\n    [\"encrypt\", \"decrypt\"]\n  );\n\n  return key;\n}\n\nexport async function generateKeyFromStoredSalt(password: string): Promise<CryptoKey> {\n  let salt = await getSalt();\n  return generateKey(password, salt);\n}\n\n// ----------------------------------------------------------------------------\n// Encryption\n// ----------------------------------------------------------------------------\n\nexport async function encrypt(data: string, key: CryptoKey): Promise<[Uint8Array, Nonce]> {\n  let dataArray = stringToByteArray(data);\n  let nonce = crypto.getRandomValues(new Uint8Array(16));\n  let alg = { name: \"AES-GCM\", iv: nonce };\n  let dataArrayEncrypted = new Uint8Array(await crypto.subtle.encrypt(alg, key, dataArray));\n  return [dataArrayEncrypted, nonce];\n}\n\nexport async function decrypt(\n  dataEncryptedArray: Uint8Array,\n  key: CryptoKey,\n  nonce: Nonce\n): Promise<string | undefined> {\n  let alg = { name: \"AES-GCM\", iv: nonce };\n  try {\n    let dataArray = await crypto.subtle.decrypt(alg, key, dataEncryptedArray);\n    return arrayBufferToString(dataArray);\n  } catch {\n    return undefined;\n  }\n}\n\nexport async function storeAuth(auth: AuthSettings, key: CryptoKey) {\n  let authSerialized = JSON.stringify(auth);\n  let [authData, authNonce] = await encrypt(authSerialized, key);\n  await localforage.setItem(\"auth_data\", authData);\n  await localforage.setItem(\"auth_nonce\", authNonce);\n}\n\nexport async function loadAuth(key: CryptoKey): Promise<AuthSettings | undefined> {\n  let authData = (await localforage.getItem(\"auth_data\")) as Uint8Array | undefined;\n  let authNonce = (await localforage.getItem(\"auth_nonce\")) as Nonce | undefined;\n  if (authData != null && authNonce != null) {\n    let authSerialized = await decrypt(authData, key, authNonce);\n    if (authSerialized != null) {\n      return JSON.parse(authSerialized) as AuthSettings;\n    }\n  }\n}\n\nexport async function isAnyAuthStored(): Promise<boolean> {\n  let authData = (await localforage.getItem(\"auth_data\")) as Uint8Array | undefined;\n  let authNonce = (await localforage.getItem(\"auth_nonce\")) as Nonce | undefined;\n  return authData != null && authNonce != null;\n}\n","import { Repo, MultiRepoData } from \"./repo\";\nimport { File, FileMap, MultiRepoFileMap, convertFileMapToFileContentMap } from \"./filemap\";\n\nexport enum GitOpKind {\n  Write = \"write\",\n  Remove = \"remove\",\n  Move = \"move\",\n}\n\nexport type GitOpWriteFile = {\n  kind: GitOpKind.Write;\n  path: string;\n  content: string;\n};\nexport type GitOpRemoveFile = {\n  kind: GitOpKind.Remove;\n  path: string;\n};\nexport type GitOpMoveFile = {\n  kind: GitOpKind.Move;\n  pathSrc: string;\n  pathDst: string;\n};\n\nexport type GitOp = GitOpWriteFile | GitOpRemoveFile | GitOpMoveFile;\n\nexport type GitOps = GitOp[];\n\nexport type MultiRepoGitOps = MultiRepoData<GitOps>;\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport const MultiRepoGitOps = MultiRepoData as { new (): MultiRepoGitOps };\n\n// ----------------------------------------------------------------------------\n// FileMap diffing for GitOps extraction\n// ----------------------------------------------------------------------------\n\nexport function diffMultiFileMaps(\n  multiFileMapOld: MultiRepoFileMap,\n  multiFileMapNew: MultiRepoFileMap\n): MultiRepoGitOps {\n  console.time(\"diffMultiFileMaps\");\n\n  let multiRepoGitOps = new MultiRepoGitOps();\n\n  let allRepos: { [repoId: string]: Repo } = {};\n  for (let repoId of multiFileMapOld.keys()) {\n    allRepos[repoId] = multiFileMapOld.getFromRepoId(repoId)!.repo;\n  }\n  for (let repoId of multiFileMapNew.keys()) {\n    allRepos[repoId] = multiFileMapNew.getFromRepoId(repoId)!.repo;\n  }\n\n  for (let repo of Object.values(allRepos)) {\n    let oldRepoFileMap = multiFileMapOld.get(repo)?.data;\n    let newRepoFileMap = multiFileMapNew.get(repo)?.data;\n    // For now only support case with overlapping repos.\n    // If we don't see a 'before' vs 'after' of a repo, we cannot\n    // infer meaningful git ops anyway.\n    if (oldRepoFileMap != null && newRepoFileMap != null) {\n      multiRepoGitOps.set(repo, diffFileMaps(oldRepoFileMap, newRepoFileMap));\n    }\n  }\n\n  console.timeEnd(\"diffMultiFileMaps\");\n  return multiRepoGitOps;\n}\n\nexport function diffFileMaps(fileMapOld: FileMap, fileMapNew: FileMap): GitOps {\n  let gitOps = [] as GitOps;\n\n  let oldContentMap = convertFileMapToFileContentMap(fileMapOld);\n  let movedFiles = {} as { [path: string]: boolean };\n\n  fileMapNew.forEach((newFile) => {\n    let oldFile = fileMapOld.get(newFile.path);\n    let needsToBeWritten = false;\n    if (oldFile != null) {\n      if (oldFile.content !== newFile.content) {\n        needsToBeWritten = true;\n      }\n    } else {\n      let otherOldFile = oldContentMap[newFile.content!] as File | undefined;\n      if (otherOldFile == null) {\n        needsToBeWritten = true;\n      } else {\n        gitOps.push({ kind: GitOpKind.Move, pathSrc: otherOldFile.path, pathDst: newFile.path });\n        movedFiles[otherOldFile.path] = true;\n      }\n    }\n    if (needsToBeWritten) {\n      gitOps.push({ kind: GitOpKind.Write, path: newFile.path, content: newFile.content! });\n    }\n  });\n\n  fileMapOld.forEach((oldFile) => {\n    let newFile = fileMapNew.get(oldFile.path);\n    if (newFile == null && !(oldFile.path in movedFiles)) {\n      gitOps.push({ kind: GitOpKind.Remove, path: oldFile.path });\n    }\n  });\n\n  return gitOps;\n}\n","import * as localforage from \"localforage\";\n\nimport { Octokit } from \"@octokit/rest\";\nimport { OctokitResponse } from \"@octokit/types/dist-types/OctokitResponse\";\nimport {\n  GitGetTreeResponseData,\n  GitCreateTreeResponseData,\n  ReposGetContentResponseData,\n} from \"@octokit/types/dist-types/generated/Endpoints\";\n\nimport { ok, okAsync, errAsync, ResultAsync, err } from \"neverthrow\";\n\nimport { EntryFile, EntryDoc, WrappedError } from \"./types\";\nimport { AuthSettings } from \"./settings\";\nimport { Repo, Repos } from \"./repo\";\n\nimport * as entry_utils from \"./utils/entry_utils\";\n\nimport { File, MultiRepoFileMap } from \"./filemap\";\nimport * as filemap from \"./filemap\";\n\nimport { GitOp } from \"./git_ops\";\n\nimport { FileKind } from \"./utils/path_utils\";\nimport * as path_utils from \"./utils/path_utils\";\n\n// ----------------------------------------------------------------------------\n// ResultAsync helper\n// ----------------------------------------------------------------------------\n\nfunction expect<T>(promise: Promise<T>): ResultAsync<T, Error> {\n  return ResultAsync.fromPromise(promise, (e) => e as Error);\n}\n\nfunction wrapPromise<T>(promise: Promise<T>, msg: string): ResultAsync<T, WrappedError> {\n  return ResultAsync.fromPromise(promise, (error) => {\n    console.log(msg, error);\n    return {\n      msg: msg,\n      originalError: error as Error,\n    };\n  });\n}\n\nfunction startChain(): ResultAsync<null, WrappedError> {\n  return okAsync(null);\n}\n\n// ----------------------------------------------------------------------------\n// High level functions\n// ----------------------------------------------------------------------------\n\nexport async function verifyRepo(repo: Repo, auth: AuthSettings) {\n  const octokit = new Octokit({\n    auth: auth.tokenGitHub,\n  });\n\n  let content = await expect(\n    octokit.repos.getContent({\n      owner: repo.userOrOrgName,\n      repo: repo.repoName,\n      path: \".\",\n    })\n  );\n\n  if (content.isOk()) {\n    console.log(\"Verification succeeded.\");\n    return true;\n  } else {\n    console.log(\"Verification failed:\");\n    console.log(content.error);\n    return false;\n  }\n}\n\n// ----------------------------------------------------------------------------\n// Storage utils\n// ----------------------------------------------------------------------------\n\n// Encoding reference:\n// https://stackoverflow.com/questions/30106476/using-javascripts-atob-to-decode-base64-doesnt-properly-decode-utf-8-strings\n\n// TODO: This function is currently not used before uploading? Does uploading of UTF-8 work properly?\nexport function base64EncodeUnicode(s: string): string {\n  // first we use encodeURIComponent to get percent-encoded UTF-8,\n  // then we convert the percent encodings into raw bytes which\n  // can be fed into btoa.\n  return btoa(\n    encodeURIComponent(s).replace(/%([0-9A-F]{2})/g, function toSolidBytes(match, p1) {\n      return String.fromCharCode(parseInt(\"0x\" + p1));\n    })\n  );\n}\n\nexport function base64DecodeUnicode(s: string): string {\n  // Going backwards: from bytestream, to percent-encoding, to original string.\n  return decodeURIComponent(\n    atob(s)\n      .split(\"\")\n      .map(function (c) {\n        return \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2);\n      })\n      .join(\"\")\n  );\n}\n\n// ----------------------------------------------------------------------------\n// Internal cached fetching\n// ----------------------------------------------------------------------------\n\nfunction cachedFetch(\n  octokit: Octokit,\n  repo: Repo,\n  path: string,\n  sha: string\n): ResultAsync<string, WrappedError> {\n  let key = `${path}_${sha}`;\n\n  return wrapPromise(\n    localforage.getItem(key) as Promise<string | undefined>,\n    \"Failed to get item from local storage.\"\n  ).andThen((cached) => {\n    if (cached != null) {\n      // console.log(`${key} found in cached`)\n      return okAsync(cached);\n    } else {\n      return wrapPromise(\n        octokit.repos.getContent({\n          owner: repo.userOrOrgName,\n          repo: repo.repoName,\n          path: path,\n        }),\n        \"Failure during fetching file from GitHub.\"\n      ).andThen((response) => {\n        console.log(`${key} fetched successfully`);\n        //console.log(content)\n\n        if (response.data.sha !== sha) {\n          return err({\n            msg: \"Downloaded SHA does not match.\",\n          });\n        }\n        if (response.data.encoding !== \"base64\") {\n          return err({\n            msg: `GitHub API returned content that is not base64 encoded but: ${response.data.encoding}.`,\n          });\n        }\n\n        // The following simple base64 -> string decoding has problem if the content is actually UTF-8.\n        // let plainContent = atob(content.data.content)\n\n        // TODO: How can we know that the decoded content is actually UTF-8 encoded?\n        // Perhaps we need to have a property on a note that represents \"original encoding\".\n        // Alternatively we could have a heuristic? How does the `file` utility does it?\n        // It would be interesting to add a markdown file with some Windows encoding.\n        let plainContent = base64DecodeUnicode(response.data.content);\n        // console.log(plainContent)\n\n        localforage.setItem(key, plainContent);\n\n        return ok(plainContent);\n      });\n    }\n  });\n}\n\n// ----------------------------------------------------------------------------\n// Recursive file listing\n// ----------------------------------------------------------------------------\n\ntype FileDesc = {\n  path: string;\n  sha: string;\n  rawUrl: string;\n};\n\nasync function listFilesRecursive(\n  octokit: Octokit,\n  repo: Repo,\n  path: string,\n  files: FileDesc[],\n  allErrors: WrappedError[]\n) {\n  console.log(\"recursiveListFiles\", path);\n\n  let response = await wrapPromise(\n    octokit.repos.getContent({\n      owner: repo.userOrOrgName,\n      repo: repo.repoName,\n      path: path,\n    }),\n    \"octokit.repos.getContent\"\n  );\n\n  if (response.isOk()) {\n    // console.log(result)\n    // Reference for fields:\n    // https://developer.github.com/v3/repos/contents/#get-repository-content\n    // I think the types are slightly wrong, because the return type is only a\n    // ReposGetContentResponseData if the requested path was a file/symlink/....\n    // In the case of a directory it should be a ReposGetContentResponseData[].\n    let responseData = (response.value.data as unknown) as ReposGetContentResponseData[];\n\n    for (let entry of responseData) {\n      if (entry.type === \"dir\") {\n        // It is important to await the recursive load, otherwise the outer logic does not\n        // even know what / how many promises there will be scheduled.\n        await listFilesRecursive(octokit, repo, entry.path, files, allErrors);\n      } else if (entry.type === \"file\") {\n        files.push({\n          path: entry.path,\n          sha: entry.sha,\n          rawUrl: entry.download_url,\n        });\n      }\n    }\n  } else {\n    // To communicate errors to the outside we push to a global error collection array...\n    console.log(\"WARNING: Failed to get repo content:\");\n    console.log(response.error.originalError);\n    allErrors.push(response.error);\n  }\n}\n\nasync function listFiles(\n  octokit: Octokit,\n  repo: Repo,\n  path: string,\n  allErrors: WrappedError[]\n): Promise<FileDesc[]> {\n  // It is important to await the recursive load, otherwise the 'out' variables will\n  // just stay empty...\n  let files = [] as FileDesc[];\n  await listFilesRecursive(octokit, repo, path, files, allErrors);\n  return files;\n}\n\n// ----------------------------------------------------------------------------\n// Recursive downloading\n// ----------------------------------------------------------------------------\n\nasync function downloadFiles(\n  octokit: Octokit,\n  repo: Repo,\n  allErrors: WrappedError[]\n): Promise<File[]> {\n  let files = await listFiles(octokit, repo, \".\", allErrors);\n\n  let fileFetches: ResultAsync<File, File>[] = [];\n\n  for (let file of files) {\n    let fileKind = path_utils.getFileKind(file.path);\n    let doFetch =\n      fileKind !== FileKind.Document || file.path.startsWith(path_utils.NOTEMARKS_FOLDER);\n\n    if (doFetch) {\n      fileFetches.push(\n        cachedFetch(octokit, repo, file.path, file.sha)\n          .map((content) => ({\n            path: file.path,\n            sha: file.sha,\n            rawUrl: file.rawUrl,\n            content: content,\n          }))\n          .mapErr((error) => ({\n            path: file.path,\n            sha: file.sha,\n            rawUrl: file.rawUrl,\n            error: error,\n          }))\n      );\n    } else {\n      fileFetches.push(\n        okAsync({\n          path: file.path,\n          sha: file.sha,\n          rawUrl: file.rawUrl,\n        })\n      );\n    }\n  }\n\n  let allResults = await Promise.all(fileFetches);\n  return allResults.map((result) => (result.isOk() ? result.value : result.error));\n}\n\n// ----------------------------------------------------------------------------\n// loadEntries high level API\n// ----------------------------------------------------------------------------\n\n// Possible extension of return values:\n// - [x] entries\n// - [x] load errors\n// - [x] staged changes\n// - [ ] load statistics like \"X files downloaded\", \"Y files from cache\"?\n\nexport async function loadEntries(\n  repos: Repos,\n  auth: AuthSettings\n): Promise<[EntryFile[], MultiRepoFileMap, MultiRepoFileMap, WrappedError[]]> {\n  console.log(`Loading contents from ${repos.length} repos`);\n\n  let allErrors = [] as WrappedError[];\n  let allFileMapsOrig = new MultiRepoFileMap();\n\n  for (let repo of repos) {\n    const octokit = new Octokit({\n      auth: auth.tokenGitHub,\n    });\n\n    let files = await downloadFiles(octokit, repo, allErrors);\n    let fileMap = filemap.convertFilesToFileMap(files);\n    allFileMapsOrig.set(repo, fileMap);\n\n    for (let file of files) {\n      if (file.error != null) {\n        allErrors.push(file.error);\n      }\n    }\n  }\n\n  let [fileEntries, allFileMapsEdit] = entry_utils.extractFileEntriesAndUpdateFileMap(\n    allFileMapsOrig\n  );\n\n  if (allErrors.length > 0) {\n    console.log(\"Fetch errors occurred:\");\n    console.log(allErrors);\n  }\n\n  return [fileEntries, allFileMapsOrig, allFileMapsEdit, allErrors];\n}\n\n// ----------------------------------------------------------------------------\n// Document download API\n// ----------------------------------------------------------------------------\n\nexport function downloadDocument(\n  entry: EntryDoc,\n  auth: AuthSettings,\n  decodeBase64: boolean\n): ResultAsync<string, WrappedError> {\n  let repo = entry.content.repo;\n  let path = path_utils.getPath(entry);\n\n  const octokit = new Octokit({\n    auth: auth.tokenGitHub,\n  });\n\n  return wrapPromise(\n    octokit.repos.getContent({\n      owner: repo.userOrOrgName,\n      repo: repo.repoName,\n      path: path,\n    }),\n    `Could not fetch file '${path}'.`\n  ).map((response) => {\n    let content = response.data.content;\n    if (decodeBase64) {\n      return base64DecodeUnicode(content);\n    } else {\n      return response.data.content;\n    }\n  });\n}\n\n// ----------------------------------------------------------------------------\n// Commit\n// ----------------------------------------------------------------------------\n\n// http://www.levibotelho.com/development/commit-a-file-with-the-github-api/\n\ntype GitCreateTreeParamsTree = {\n  path?: string;\n  mode?: \"100644\" | \"100755\" | \"040000\" | \"160000\" | \"120000\";\n  type?: \"blob\" | \"tree\" | \"commit\";\n  sha?: string | null;\n  content?: string;\n};\n\nexport function commit(\n  auth: AuthSettings,\n  repo: Repo,\n  ops: GitOp[],\n  commitMsg: string\n): ResultAsync<string, WrappedError> {\n  const octokit = new Octokit({\n    auth: auth.tokenGitHub,\n  });\n\n  let oldCommitSHA: string;\n  let newCommitSHA: string;\n  let defaultBranch: string;\n\n  return startChain()\n    .andThen(() => {\n      // Needed for knowing the default branch\n      return octokitGetGeneralRepoInfo(octokit, repo);\n    })\n    .andThen((response) => {\n      defaultBranch = response.data.default_branch;\n      return octokitGetRef(octokit, repo, defaultBranch);\n    })\n    .andThen((response) => {\n      oldCommitSHA = response.data.object.sha;\n      return octokitGetCommit(octokit, repo, oldCommitSHA);\n    })\n    .andThen((response) => {\n      let oldTreeSHA = response.data.tree.sha;\n      return octokitGetTree(octokit, repo, oldTreeSHA);\n    })\n    .andThen((response) => {\n      if (response.data.truncated) {\n        return errAsync({\n          msg: \"Tree has been truncated -- handling that many files is not supported yet.\",\n          error: null,\n        }) as ResultAsync<OctokitResponse<GitCreateTreeResponseData>, WrappedError>;\n      }\n      let oldTree: GitGetTreeResponseData = response.data;\n      let newTree: GitCreateTreeParamsTree[] = applyOps(ops, oldTree);\n\n      console.log(oldTree);\n      console.log(newTree);\n\n      return octokitCreateTree(octokit, repo, newTree);\n    })\n    .andThen((response) => {\n      let newTreeSHA = response.data.sha;\n      return octokitCreateCommit(octokit, repo, commitMsg, oldCommitSHA, newTreeSHA);\n    })\n    .andThen((response) => {\n      newCommitSHA = response.data.sha;\n      return octokitUpdateRef(octokit, repo, `heads/${defaultBranch}`, newCommitSHA);\n    })\n    .map(() => newCommitSHA);\n}\n\nfunction octokitGetGeneralRepoInfo(octokit: Octokit, repo: Repo) {\n  return wrapPromise(\n    octokit.repos.get({\n      owner: repo.userOrOrgName,\n      repo: repo.repoName,\n    }),\n    \"Failed to get default branch.\"\n  );\n}\n\nfunction octokitGetRef(octokit: Octokit, repo: Repo, branch: string) {\n  return wrapPromise(\n    octokit.git.getRef({\n      owner: repo.userOrOrgName,\n      repo: repo.repoName,\n      ref: `heads/${branch}`,\n    }),\n    \"Failed to get head ref.\"\n  );\n}\n\nfunction octokitGetCommit(octokit: Octokit, repo: Repo, commitSHA: string) {\n  return wrapPromise(\n    octokit.git.getCommit({\n      owner: repo.userOrOrgName,\n      repo: repo.repoName,\n      commit_sha: commitSHA,\n    }),\n    \"Failed to get head commit.\"\n  );\n}\n\nfunction octokitGetTree(octokit: Octokit, repo: Repo, treeSHA: string) {\n  // TODO: getTree seems to fail if a repo is completely empty.\n  // How to recover from that?\n  return wrapPromise(\n    octokit.git.getTree({\n      owner: repo.userOrOrgName,\n      repo: repo.repoName,\n      tree_sha: treeSHA,\n      recursive: \"true\",\n    }),\n    `Failed to get tree with sha ${treeSHA}.`\n  );\n}\n\nfunction octokitCreateTree(octokit: Octokit, repo: Repo, tree: GitCreateTreeParamsTree[]) {\n  return wrapPromise(\n    octokit.git.createTree({\n      owner: repo.userOrOrgName,\n      repo: repo.repoName,\n      tree: tree,\n    }),\n    \"Failed to create tree.\"\n  );\n}\n\nfunction octokitCreateCommit(\n  octokit: Octokit,\n  repo: Repo,\n  commitMsg: string,\n  oldCommitSHA: string,\n  newTreeSHA: string\n) {\n  return wrapPromise(\n    octokit.git.createCommit({\n      owner: repo.userOrOrgName,\n      repo: repo.repoName,\n      message: commitMsg,\n      parents: [oldCommitSHA],\n      tree: newTreeSHA,\n    }),\n    \"Failed to create commit.\"\n  );\n}\n\nfunction octokitUpdateRef(octokit: Octokit, repo: Repo, ref: string, commitSHA: string) {\n  return wrapPromise(\n    octokit.git.updateRef({\n      owner: repo.userOrOrgName,\n      repo: repo.repoName,\n      ref: ref,\n      sha: commitSHA,\n      force: true,\n    }),\n    \"Failed to update ref.\"\n  );\n}\n\nfunction applyOps(ops: GitOp[], oldTree: GitGetTreeResponseData): GitCreateTreeParamsTree[] {\n  // https://developer.github.com/v3/git/trees/#create-a-tree\n\n  let newTree: GitCreateTreeParamsTree[] = [];\n\n  // Merge-in existing tree content\n  for (let entry of oldTree.tree) {\n    let keep = true;\n    let destinationPath = entry.path;\n    for (let op of ops) {\n      // In both write/remove cases we don't keep the existing SHA\n      // In theory we could check whether in the write case the existing\n      // file actually has the expected content already. However, overwriting\n      // does not seem to be forbidden, and typically the content is expected\n      // to be modified anyway.\n      if (op.kind !== \"move\" && op.path === entry.path) {\n        keep = false;\n        break;\n      } else if (op.kind === \"move\" && op.pathSrc === entry.path) {\n        destinationPath = op.pathDst;\n      }\n    }\n\n    // As mentioned in the blog post, it seems necessary to omit \"tree\" elements from\n    // the new tree. In contrast to what is mentioned in the blog post however, this\n    // did not error with a 500. Even worse, it succeeded, but it did had any \"delete\"\n    // behavior. Files omitted in the new tree were still there, perhaps because their\n    // parent tree elements were in the new tree as well. To get the desired behavior\n    // removing tree elements seems still necessary.\n    if (entry.type === \"tree\") {\n      keep = false;\n    }\n\n    if (keep) {\n      newTree.push({\n        path: destinationPath,\n        mode: entry.mode as any,\n        type: entry.type as any,\n        sha: entry.sha,\n      });\n    }\n  }\n\n  // Merge-in new writes\n  for (let op of ops) {\n    if (op.kind === \"write\") {\n      newTree.push({\n        path: op.path,\n        mode: \"100644\", // blob non-executable\n        type: \"blob\",\n        content: op.content,\n      });\n    }\n  }\n\n  return newTree;\n}\n","function getDomain(url: string): string | undefined {\n  // https://stackoverflow.com/questions/8498592/extract-hostname-name-from-string\n  try {\n    let trueURL = new URL(url);\n    return trueURL.hostname;\n  } catch {\n    return undefined;\n  }\n}\n\nfunction getYouTubeTitle(text: string) {\n  // For now we use a regex, but this \"noembed.com\" based solution seems nice:\n  // https://stackoverflow.com/a/32190892/1804173\n  // Using the official API is not really an option because we need an API key...\n  let regex = /\\\\\"title\\\\\":\\\\\"(.*?)\\\\\"/g;\n  let match = regex.exec(text);\n  // console.log(match);\n  if (match) {\n    return \"YouTube – \" + match[1];\n  }\n}\n\nexport const fetchBody = async (url: string) => {\n  const response = await fetch(url);\n  const html = await response.text();\n  return html;\n};\n\nexport const fetchBodyProxied = async (url: string) => {\n  // TODO: Eventually we should really run our own proxy.\n  let urlProxied = `https://cors-anywhere.herokuapp.com/${url\n    .replace(\"http://\", \"\")\n    .replace(\"https://\", \"\")}`;\n  return fetchBody(urlProxied);\n};\n\n// Inspired by: https://gist.github.com/jbinto/119c3f0e5735ab73faaa\nexport const getTitle = async (url: string) => {\n  try {\n    const html = await fetchBodyProxied(url);\n\n    let domain = getDomain(url);\n\n    if (domain === \"www.youtube.com\") {\n      let title = getYouTubeTitle(html);\n      if (title !== undefined) {\n        return title;\n      }\n    }\n\n    // Fallback to return plain page title\n    const doc = new DOMParser().parseFromString(html, \"text/html\");\n    const title = doc.querySelectorAll(\"title\")[0];\n    return title.innerText;\n  } catch (e) {\n    console.log(\"Failed to request title:\", e);\n    return undefined;\n  }\n};\n\nfunction getMediaType(extension: string) {\n  // https://en.wikipedia.org/wiki/Media_type\n  // https://stackoverflow.com/a/6783972/1804173\n  extension = extension.toLowerCase();\n  switch (extension) {\n    case \"pdf\":\n      return \"application/pdf\";\n    case \"jpg\":\n    case \"jpeg\":\n      return \"image/jpeg\";\n    case \"png\":\n      return \"image/png\";\n    case \"svg\":\n      return \"image/svg\";\n    case \"zip\":\n      return \"application/zip\";\n    default:\n      return \"application/octet-stream\";\n  }\n}\n\nexport function downloadFromMemory(filename: string, extension: string, dataBase64: string) {\n  // https://stackoverflow.com/questions/3665115/how-to-create-a-file-in-memory-for-user-to-download-but-not-through-server\n  // https://ourcodeworld.com/articles/read/189/how-to-create-a-file-and-generate-a-download-with-javascript-in-the-browser-without-a-server\n  // https://en.wikipedia.org/wiki/Data_URI_scheme\n\n  let mediaType = getMediaType(extension);\n\n  var element = document.createElement(\"a\");\n  element.setAttribute(\"href\", `data:${mediaType};base64,${dataBase64}`);\n  element.setAttribute(\"download\", filename);\n\n  element.style.display = \"none\";\n  document.body.appendChild(element);\n\n  element.click();\n\n  document.body.removeChild(element);\n}\n\nexport function gtagLoginEvent() {\n  (window as any).gtag(\"event\", \"login\", {});\n}\n\nexport function gtagDemoEvent() {\n  (window as any).gtag(\"event\", \"demo\", {});\n}\n","import React from \"react\";\n\nimport { Tag } from \"antd\";\n\nimport styled from \"@emotion/styled\";\n\nexport type ColorTagProps = {\n  className?: string;\n  style?: React.CSSProperties;\n  children: React.ReactNode;\n};\n\nexport function ColorTag({ className, style, children }: ColorTagProps) {\n  return (\n    <Tag className={className} style={style}>\n      {children}\n    </Tag>\n  );\n}\n\nexport const DefaultTag = styled(Tag)`\n  color: whitesmoke;\n  background: #464648;\n  border-color: #111;\n\n  // To prevent double click selection: https://stackoverflow.com/a/7018415/1804173\n  user-select: none;\n`;\n","import React, { useRef } from \"react\";\n\nimport { Tree } from \"antd\";\nimport { DataNode } from \"rc-tree/lib/interface\";\n\nimport styled from \"@emotion/styled\";\n\nimport { DefaultTag } from \"./ColorTag\";\n\nimport { Label, Labels } from \"../types\";\n\n/*\n// ----------------------------------------------------------------------------\n// Notes:\n// ----------------------------------------------------------------------------\n*/\n\nconst ResponsiveTree = styled(Tree)`\n  // This follows the breakpoint that ensures the left sidebar is at least 200px\n  @media not all and (min-width: 768px) {\n    display: none;\n  }\n`;\n\nconst FilterStatusWrapper = styled.span`\n  position: relative;\n\n  .included {\n    background: hsl(141, 53%, 53%);\n  }\n\n  .excluded {\n    background: hsl(348, 86%, 61%);\n  }\n`;\n\nconst FilterStatus = styled.span`\n  position: absolute;\n  bottom: 0;\n  right: 0.1rem;\n  width: 4px;\n  height: 1rem;\n  border-radius: 4px;\n\n  background: #e2ebf5;\n  transition: all 0.2s linear;\n`;\n\nconst LabelCount = styled.span`\n  position: relative;\n  bottom: -0.25em;\n  margin-left: 0.3rem;\n  font-size: 0.5rem;\n  font-weight: bold;\n\n  /* Pretend height is zero to avoid adding to height of tag */\n  display: inline-block;\n  height: 0;\n  overflow: visible;\n`;\n\ntype RefMap = { [fullName: string]: { element: HTMLElement | null; state: number } };\n\nfunction renderLabel(\n  label: Label,\n  refMap: RefMap,\n  onClick: (label: Label, selected: boolean) => void\n): DataNode {\n  return {\n    title: (\n      <>\n        <FilterStatusWrapper>\n          <FilterStatus\n            ref={(ref) => {\n              // Note that if there is already an existing ref with state, we have to\n              // take over its state so that the initialized state here matches the DOM.\n              refMap[label.fullName] = { element: ref, state: refMap[label.fullName]?.state || 0 };\n            }}\n          />\n        </FilterStatusWrapper>\n        <DefaultTag\n          onClick={(event) => {\n            onClick(label, true);\n            event.preventDefault();\n          }}\n          onContextMenu={(event) => {\n            onClick(label, false);\n            event.preventDefault();\n          }}\n        >\n          {label.baseName}\n          <LabelCount>{label.count}</LabelCount>\n        </DefaultTag>\n      </>\n    ),\n    key: label.fullName,\n    children: label.children.map((subLabel) => renderLabel(subLabel, refMap, onClick)),\n  };\n}\n\ntype LabelTreeProps = {\n  labels: Labels;\n  onSetLabelFilter: (label: Label, state: number) => void;\n  onRegainFocus: () => void;\n};\n\nexport const LabelTree = React.memo(\n  ({ labels, onSetLabelFilter, onRegainFocus }: LabelTreeProps) => {\n    // console.log(\"Rendering: LabelTree\");\n\n    let labelTagRefs = useRef({} as RefMap);\n\n    function onClick(label: Label, selected: boolean) {\n      let ref = labelTagRefs.current[label.fullName];\n      // console.log(ref);\n      if (ref != null && ref.element != null) {\n        if (selected) {\n          if (ref.state < 0) {\n            ref.element.classList.remove(\"excluded\");\n            ref.element.classList.add(\"included\");\n            ref.state = 1;\n            onSetLabelFilter(label, 1);\n          } else if (ref.state === 0) {\n            ref.element.classList.add(\"included\");\n            ref.state = 1;\n            onSetLabelFilter(label, 1);\n          } else {\n            ref.element.classList.remove(\"included\");\n            ref.state = 0;\n            onSetLabelFilter(label, 0);\n          }\n        } else {\n          if (ref.state > 0) {\n            ref.element.classList.remove(\"included\");\n            ref.element.classList.add(\"excluded\");\n            ref.state = -1;\n            onSetLabelFilter(label, -1);\n          } else if (ref.state === 0) {\n            ref.element.classList.add(\"excluded\");\n            ref.state = -1;\n            onSetLabelFilter(label, -1);\n          } else {\n            ref.element.classList.remove(\"excluded\");\n            ref.state = 0;\n            onSetLabelFilter(label, 0);\n          }\n        }\n      }\n      onRegainFocus();\n    }\n\n    const treeData = labels.map((labelCount) =>\n      renderLabel(labelCount, labelTagRefs.current, onClick)\n    );\n\n    return <ResponsiveTree treeData={treeData} selectable={false} checkable={false} />;\n  }\n);\n\nexport default LabelTree;\n","import React, { useEffect, useState, useCallback } from \"react\";\n\nimport { Input, Row, Button, Empty } from \"antd\";\nimport { DownOutlined } from \"@ant-design/icons\";\n\nimport styled from \"@emotion/styled\";\n\nimport { ScrollContent, EntryKindSymbol } from \"../components/HelperComponents\";\nimport { VerticalContainer, UiRow, StretchedUiRow } from \"../components/UiRow\";\nimport { LabelTree } from \"../components/LabelTree\";\nimport { DefaultTag } from \"../components/ColorTag\";\n\nimport { EntryKind, Entries, Label, Labels } from \"../types\";\nimport { doesLabelMatchLabels } from \"../utils/label_utils\";\nimport * as fn from \"../utils/fn_utils\";\nimport { MutableRef, useDebouncedEffect } from \"../utils/react_utils\";\n\nexport function splitSearchTerms(s: string): string[] {\n  return s\n    .split(/(\\s+)/)\n    .map((term) => term.trim().toLowerCase())\n    .filter((term) => term.length > 0);\n}\n\nexport type EntryKindFilter = {\n  [EntryKind.NoteMarkdown]: boolean;\n  [EntryKind.Document]: boolean;\n  [EntryKind.Link]: boolean;\n};\n\nexport type LabelFilter = { label: Label; state: number };\nexport type LabelFilters = LabelFilter[];\n\nexport function checkEntryKindFilter(\n  entryKind: EntryKind,\n  entryKindFilter: EntryKindFilter\n): boolean {\n  return entryKindFilter[entryKind];\n}\n\nexport function checkMatchingTitle(title: string, searchTerms: string[]): boolean {\n  // Currently we require all terms to match. Is there a use case for an `OR` mode?\n  let matchesAll = true;\n  for (let searchTerm of searchTerms) {\n    // Note: search terms are normalized, i.e. don't need toLowerCase().\n    // Possible performance optimization: Cache entry.title.toLowerCase()?\n    if (!title.toLowerCase().includes(searchTerm)) {\n      matchesAll = false;\n    }\n  }\n  return matchesAll;\n}\n\nexport function checkMatchingLabels(labels: string[], labelFilters: LabelFilters): boolean {\n  let requiredLabels = labelFilters\n    .filter((filter) => filter.state > 0)\n    .map((filter) => filter.label.fullName);\n  let forbiddenLabels = labelFilters\n    .filter((filter) => filter.state < 0)\n    .map((filter) => filter.label.fullName);\n\n  let allRequired = requiredLabels.every((requiredLabel) =>\n    doesLabelMatchLabels(requiredLabel, labels)\n  );\n  let anyForbidden = forbiddenLabels.some((forbiddenLabel) =>\n    doesLabelMatchLabels(forbiddenLabel, labels)\n  );\n  return allRequired && !anyForbidden;\n}\n\nexport function filterEntries(\n  entries: Entries,\n  searchTerms: string[],\n  labelFilters: LabelFilters,\n  entryKindFilter: EntryKindFilter\n): Entries {\n  let filteredEntries = [];\n  for (let entry of entries) {\n    let matchingEntryKind = checkEntryKindFilter(entry.content.kind, entryKindFilter);\n    let matchingTitle = checkMatchingTitle(entry.title, searchTerms);\n    let matchingLabels = checkMatchingLabels(entry.labels, labelFilters);\n    if (matchingEntryKind && matchingTitle && matchingLabels) {\n      filteredEntries.push(entry);\n    }\n  }\n  return filteredEntries;\n}\n\nfunction computeNewLabelFilters(oldFilters: LabelFilters, newLabel: Label, newState: number) {\n  let newFilters: LabelFilters = oldFilters.filter(\n    (oldFilter) => newLabel.fullName !== oldFilter.label.fullName\n  );\n  if (newState !== 0) {\n    newFilters.push({\n      label: newLabel,\n      state: newState,\n    });\n  }\n  return newFilters;\n}\n\n/*\n// ----------------------------------------------------------------------------\n// Notes:\n// ----------------------------------------------------------------------------\n\nCreating \"onClick\" callbacks from the table contents directly seems to be a bit\ntricky, because it would require to have the callback available in the `render`\nfunction. This (probably?) would mean that we have to attach the callback to each\ndata entry directly, which is ugly because we are mixing data with behavior.\nPerhaps it would mean that instead of operating the table on the original entires,\nwe have to map `Entry` to some `TableEntry` object that combines the data with the\ntable specific callbacks.\n\nFor now the easiest solution was to \"hoist\" the callback to the onClick of the\nentire row.\n\nSee also Q/A here:\nhttps://stackoverflow.com/questions/48494045/how-to-add-dynamic-link-to-table-data\n*/\n\nconst StyledInput = styled(Input)`\n  margin-top: 20px;\n  margin-bottom: 20px;\n`;\n\nconst Footer = styled.div`\n  margin-top: 20px;\n  margin-bottom: 20px;\n`;\n\nconst ExpandButton = styled(Button)`\n  margin-top: 20px;\n`;\n\n// ----------------------------------------------------------------------------\n// Notes\n// ----------------------------------------------------------------------------\n\ntype ListProps = {\n  entries: Entries;\n  labels: Labels;\n  onEnterEntry: (i: number) => void;\n};\n\nconst List = React.forwardRef(\n  ({ entries, labels, onEnterEntry }: ListProps, ref: MutableRef<HTMLInputElement>) => {\n    let initialNumVisibleEntires = 20;\n\n    const [filteredEntries, setFilteredEntries] = useState(\n      entries.slice(0, initialNumVisibleEntires)\n    );\n    const [searchStats, setSearchStats] = useState({ totalMatchingEntries: entries.length });\n    const [numVisibleEntries, setNumVisibleEntries] = useState(initialNumVisibleEntires);\n    const [selectedIndex, setSelectedIndex] = useState(-1);\n\n    const [searchTerms, setSearchTerms] = useState<string[]>([]);\n    const [labelFilters, setLabelFilters] = useState<LabelFilters>([]);\n    const [entryKindFilter, setEntryKindFilter] = useState<EntryKindFilter>({\n      [EntryKind.NoteMarkdown]: true,\n      [EntryKind.Document]: true,\n      [EntryKind.Link]: true,\n    });\n\n    /*\n    // Note: For now the filteredEntries are computed asynchronously.\n    // This leads to the double rendering of the component when the\n    // search terms change. See e.g.:\n    // https://stackoverflow.com/questions/56028913/usememo-vs-useeffect-usestate\n    // In theory we could simplify it to:\n    const filteredEntries = React.useMemo(() => filterEntries(entries, searchTerms), [\n      entries,\n      searchTerms,\n    ]);\n    // However, using `useEffect` could be beneficial because:\n    // 1. If we want to do full text search, we probably need an async approach anyway,\n    //    due to the overhead. When using `useMemo` would could keep the computation\n    //    of \"title filtered\" synchronous, but we would have to merge the results of\n    //    the synchrnously filtered with the results of the asynchronously filtered\n    //    somehow, which would lead to a double rendering anyway.\n    // 2. Using `React.memo` on the JSX components that don't change (actually nothing\n    //    in the VDOM changes when the searchTerms change) should make the first\n    //    re-rendering fast.\n    */\n    useDebouncedEffect(\n      () => {\n        let newFilteredEntries = filterEntries(entries, searchTerms, labelFilters, entryKindFilter);\n        setSearchStats({ totalMatchingEntries: newFilteredEntries.length });\n        setFilteredEntries(newFilteredEntries.slice(0, numVisibleEntries));\n      },\n      100,\n      [entries, numVisibleEntries, searchTerms, labelFilters, entryKindFilter]\n    );\n\n    // Note that it is probably necessary to keep this separate from the entry filtering effect above.\n    // Issues with merging the two:\n    // - We don't want to make selectedIndex a dependency. Otherwise key up/down would\n    //   mean to refilter the entries which is unnecessary/slow.\n    // - This suggest to use the setSelectedIndex(oldIndex => ...) update form, which\n    //   seems to work on first glance. However this is a weird case where we need\n    //   both the oldEntries and the oldSelectedIndex at once, and I don't see how\n    //   we can actually read them **both**.\n    // HOWEVER: We also don't have access to the old entries is this way either!\n    useEffect(() => {\n      if (entries.length > 0) {\n        setSelectedIndex(0);\n      } else {\n        setSelectedIndex(-1);\n      }\n    }, [entries, searchTerms]);\n\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      // TODO: Improve performance\n      // https://stackoverflow.com/a/50820219/1804173\n      // https://stackoverflow.com/a/28046731/1804173\n      window.requestAnimationFrame(() => {\n        setSearchTerms(splitSearchTerms(event.target.value));\n      });\n    };\n\n    function onKeydown(event: React.KeyboardEvent<HTMLInputElement>) {\n      switch (event.key) {\n        case \"ArrowUp\":\n          event.preventDefault();\n          setSelectedIndex(fn.computeSelectedIndex(filteredEntries.length, selectedIndex, -1));\n          break;\n        case \"ArrowDown\":\n          event.preventDefault();\n          setSelectedIndex(fn.computeSelectedIndex(filteredEntries.length, selectedIndex, +1));\n          break;\n        case \"Escape\":\n          /*\n          setState({\n            active: false,\n            selectedIndex: -1,\n            value: \"\",\n          })\n          */\n          //refInput.blur()\n          break;\n        case \"Enter\":\n          if (selectedIndex !== -1) {\n            onEnterEntry(filteredEntries[selectedIndex].idx!);\n          }\n          // This is needed otherwise the \"Enter\" can also fire on the auto-focused \"open\" button\n          event.preventDefault();\n          break;\n      }\n    }\n\n    // *** render helper\n\n    const renderExpandButton = () => {\n      if (searchStats.totalMatchingEntries > filteredEntries.length) {\n        return (\n          <>\n            <Row justify=\"center\">\n              <ExpandButton\n                type=\"dashed\"\n                shape=\"circle\"\n                onClick={(event) => {\n                  setNumVisibleEntries((n) =>\n                    n + 10 <= searchStats.totalMatchingEntries\n                      ? n + 10\n                      : searchStats.totalMatchingEntries\n                  );\n                }}\n              >\n                <DownOutlined />\n              </ExpandButton>\n            </Row>\n            <Footer />\n          </>\n        );\n      } else {\n        return <Footer />;\n      }\n    };\n\n    const onSetLabelFilter = useCallback(\n      (label, state) => {\n        setLabelFilters((labelFilters) => computeNewLabelFilters(labelFilters, label, state));\n      },\n      [setLabelFilters]\n    );\n\n    const onRegainFocus = useCallback(() => {\n      // TODO: Somehow this type union of forwardRef is weird. Is it really the case\n      // that we can only read the passed in ref, it is hasn't been passed in as a\n      // callback? Can we enforce in the type system that the ref is not passed in\n      // as a function? Should we safe the antdInputRef locally in addition to the\n      // external ref?\n      if (ref != null) {\n        if (typeof ref === \"function\") {\n          console.log(\"WARNING: ref is a function, cannot access value...\");\n        } else {\n          ref.current?.focus();\n        }\n      }\n    }, [ref]);\n\n    return (\n      <VerticalContainer>\n        <UiRow\n          center={\n            <StyledInput\n              ref={(antdInputRef) => {\n                // Since we don't want to expose the ref as an Antd Input, but rather HTMLInputElement\n                // we need this callback to unwrap the underlying DOM element.\n                if (ref != null) {\n                  if (typeof ref === \"function\") {\n                    ref(fn.mapUndefinedToNull(antdInputRef?.input));\n                  } else {\n                    ref.current = fn.mapUndefinedToNull(antdInputRef?.input);\n                  }\n                }\n              }}\n              onChange={onChange}\n              onKeyDown={onKeydown}\n              autoFocus\n            />\n          }\n        />\n        <StretchedUiRow\n          left={\n            <ScrollContent>\n              <LabelTree\n                labels={labels}\n                onSetLabelFilter={onSetLabelFilter}\n                onRegainFocus={onRegainFocus}\n              />\n            </ScrollContent>\n          }\n          center={\n            <ScrollContent>\n              <CustomTable\n                entries={filteredEntries}\n                highlighted={selectedIndex}\n                onEnterEntry={onEnterEntry}\n              />\n              {renderExpandButton()}\n            </ScrollContent>\n          }\n        />\n      </VerticalContainer>\n    );\n  }\n);\n\n// ----------------------------------------------------------------------------\n// Custom table\n// ----------------------------------------------------------------------------\n\nconst PseudoTable = styled.div`\n  font-size: 11px;\n  cursor: pointer;\n\n  .highlight-row {\n    background: #e8f6fe; /* Antd's select color used e.g. in AutoComplete */\n\n    /* Implement highlight border via box shadow to avoid messing with box sizes (see alternative below) */\n    border-radius: 3px;\n    box-shadow: 0px 0px 0px 1px #b0e0fc;\n\n    /* Since we are using box-sizing: border-box, we need to counter the border with negative margins */\n    //border: 1px solid #b0e0fc;\n    //margin-top: -1px;\n    //margin-bottom: -1px;\n    //margin-left: -1px;\n    //margin-right: -1px;\n  }\n`;\n\nconst PseudoTableRow = styled.div`\n  padding-top: 4px;\n  padding-bottom: 4px;\n  display: flex;\n  vertical-align: baseline;\n`;\n\nconst TitleWrapper = styled.div`\n  flex-grow: 1;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  height: 22px;\n  line-height: 22px;\n  vertical-align: bottom;\n  padding-left: 8px;\n`;\n\nconst SymbolWrapper = styled.span`\n  padding-left: 8px;\n  padding-right: 8px;\n  height: 22px;\n  line-height: 22px;\n`;\n\nconst LabelsWrapper = styled.span`\n  vertical-align: baseline;\n  flex: 0 0 50%;\n`;\n\ntype CustomTableProps = {\n  entries: Entries;\n  highlighted: number;\n  onEnterEntry: (i: number) => void;\n};\n\nfunction renderLabels(labels: string[]) {\n  return labels.map((label, i) => <DefaultTag key={label}>{label}</DefaultTag>);\n}\n\nconst CustomTable = React.memo(({ entries, highlighted, onEnterEntry }: CustomTableProps) => {\n  if (entries.length === 0) {\n    return <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description=\"No entries\" />;\n  } else {\n    return (\n      <PseudoTable>\n        {entries.map((entry, i) => (\n          <PseudoTableRow\n            key={entry.key}\n            className={i === highlighted ? \"highlight-row\" : \"\"}\n            onClick={(event) => {\n              onEnterEntry(entry.idx!);\n            }}\n          >\n            <TitleWrapper>{entry.title}</TitleWrapper>\n            <SymbolWrapper>\n              <EntryKindSymbol entryKind={entry.content.kind} style={{ fontSize: 14 }} />\n            </SymbolWrapper>\n            <LabelsWrapper>{renderLabels(entry.labels)}</LabelsWrapper>\n          </PseudoTableRow>\n        ))}\n      </PseudoTable>\n    );\n  }\n});\n\nexport default List;\n","import React, { useState } from \"react\";\n\nimport { Typography, Collapse, Button, Form, Input, Modal } from \"antd\";\nimport { EditOutlined, LoadingOutlined } from \"@ant-design/icons\";\n\nimport styled from \"@emotion/styled\";\n\nimport { NoEntrySelected, ScrollContent } from \"../components/HelperComponents\";\nimport { VerticalContainer, UiRow, StretchedUiRow } from \"../components/UiRow\";\nimport { DefaultTag } from \"../components/ColorTag\";\n\nimport { Entry, EntryNote, EntryDoc, EntryLink } from \"../types\";\n\nimport * as entry_utils from \"../utils/entry_utils\";\nimport * as date_utils from \"../utils/date_utils\";\nimport * as label_utils from \"../utils/label_utils\";\nimport * as web_utils from \"../utils/web_utils\";\n\nconst { Title } = Typography;\nconst { Panel } = Collapse;\n\nconst Footer = styled.div`\n  margin-top: 150px;\n  margin-bottom: 150px;\n`;\n\nconst editFormLayout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 20 },\n};\nconst editFormTailLayout = {\n  wrapperCol: { offset: 4, span: 20 },\n};\n\n// TODO: Move to central place, same as in List?\nfunction renderLabels(labels: string[]) {\n  return labels.map((label, i) => <DefaultTag key={label}>{label}</DefaultTag>);\n}\n\n// ----------------------------------------------------------------------------\n// EntryHeader\n// ----------------------------------------------------------------------------\n\ntype EntryHeaderProps = {\n  entry: Entry;\n  editForm: React.ReactNode;\n};\n\nfunction EntryHeader({ entry, editForm }: EntryHeaderProps) {\n  const noteEntrySpecific = (entry: EntryNote) => (\n    <span>\n      created on {date_utils.formatDateHuman(entry.content.timeCreated)}, updated on{\" \"}\n      {date_utils.formatDateHuman(entry.content.timeUpdated)}\n    </span>\n  );\n\n  const linkEntrySpecific = (entry: EntryLink) => {\n    if (entry.content.referencedBy.length > 0) {\n      return (\n        <div>\n          Referenced by:\n          <ul style={{ paddingLeft: \"20px\" }}>\n            {entry.content.referencedBy.map((entry, i) => (\n              <li key={i}>{entry.title}</li>\n            ))}\n          </ul>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div\n      style={{\n        marginTop: \"20px\",\n        marginBottom: \"20px\",\n      }}\n    >\n      <Collapse\n        defaultActiveKey={[]}\n        expandIconPosition=\"right\"\n        expandIcon={() => <Button shape=\"circle\" icon={<EditOutlined />} />}\n        style={{\n          background: \"#f6fbfe\",\n          //borderColor: \"#209cee\",\n          borderRadius: \"4px\",\n        }}\n      >\n        <Panel\n          header={\n            <>\n              <Title level={3}>{entry.title}</Title>\n              <div>{renderLabels(entry.labels)}</div>\n              <div\n                style={{\n                  marginTop: \"10px\",\n                  fontSize: \"9px\",\n                }}\n              >\n                {entry_utils.isNote(entry)\n                  ? noteEntrySpecific(entry)\n                  : entry_utils.isLink(entry)\n                  ? linkEntrySpecific(entry)\n                  : null}\n              </div>\n            </>\n          }\n          key={0}\n        >\n          {editForm}\n        </Panel>\n      </Collapse>\n    </div>\n  );\n}\n\n// ----------------------------------------------------------------------------\n// EntryView\n// ----------------------------------------------------------------------------\n\ntype EntryViewProps = {\n  entry?: Entry;\n  onUpdateNoteData: (title: string, labels: string[]) => void;\n  onUpdateLinkData: (title: string, ownLabels: string[]) => void;\n  onOpenDocument: (entry: EntryDoc) => void;\n};\n\nfunction EntryView({ entry, onUpdateNoteData, onUpdateLinkData, onOpenDocument }: EntryViewProps) {\n  if (entry == null) {\n    return <NoEntrySelected />;\n  } else if (entry_utils.isNote(entry)) {\n    return <NoteView entry={entry} onUpdateNoteData={onUpdateNoteData} />;\n  } else if (entry_utils.isDoc(entry)) {\n    return (\n      <DocView entry={entry} onUpdateNoteData={onUpdateNoteData} onOpenDocument={onOpenDocument} />\n    );\n  } else if (entry_utils.isLink(entry)) {\n    return <LinkView entry={entry} onUpdateLinkData={onUpdateLinkData} />;\n  } else {\n    return <NoEntrySelected />;\n  }\n}\n\n// ----------------------------------------------------------------------------\n// NoteView\n// ----------------------------------------------------------------------------\n\nconst NoteContent = styled.div`\n  // width: 100%;\n\n  pre {\n    font-family: \"Ubuntu mono, monospace\";\n    padding: 0.5rem 0.7rem;\n    font-size: 0.75rem; // 12 px\n    margin: 0.4rem 0;\n    width: 100%;\n  }\n  pre > code {\n    // width: 100%;\n    display: inline-block;\n  }\n\n  & :not(pre) > code {\n    background-color: whitesmoke;\n    color: #ff3860;\n    font-size: 0.875em;\n    font-weight: normal;\n    padding: 0.15em 0.4em 0.15em;\n    border: 1px solid #e0e0e0;\n  }\n`;\n\ntype NoteViewProps = {\n  entry: EntryNote;\n  onUpdateNoteData: (title: string, labels: string[]) => void;\n};\n\nfunction NoteView({ entry, onUpdateNoteData }: NoteViewProps) {\n  return (\n    <VerticalContainer>\n      <UiRow\n        center={\n          <>\n            <EntryHeader\n              entry={entry}\n              editForm={\n                <NoteEditForm\n                  initialTitle={entry.title}\n                  initialLabels={entry.labels}\n                  onUpdateNoteData={onUpdateNoteData}\n                />\n              }\n            />\n          </>\n        }\n      />\n      <StretchedUiRow\n        center={\n          <ScrollContent>\n            <NoteContent\n              dangerouslySetInnerHTML={{\n                __html: entry_utils.isNote(entry) ? entry.content.html : \"\",\n              }}\n            />\n            <Footer />\n          </ScrollContent>\n        }\n      />\n    </VerticalContainer>\n  );\n}\n\n// ----------------------------------------------------------------------------\n// NoteEditForm\n// ----------------------------------------------------------------------------\n\ntype NoteEditFormProps = {\n  initialTitle: string;\n  initialLabels: string[];\n  onUpdateNoteData: (title: string, labels: string[]) => void;\n};\n\nconst NoteEditForm = ({ initialTitle, initialLabels, onUpdateNoteData }: NoteEditFormProps) => {\n  const onFinish = (values: { title: string; labels: string }) => {\n    onUpdateNoteData(values.title, label_utils.extractLabelsFromString(values.labels));\n  };\n\n  return (\n    <Form\n      {...editFormLayout}\n      initialValues={{ title: initialTitle, labels: initialLabels.join(\" \") }}\n      onFinish={onFinish}\n    >\n      <Form.Item\n        label=\"Title\"\n        name=\"title\"\n        rules={[{ required: true, message: \"Note requires a title\" }]}\n        style={{ marginBottom: \"16px\" }}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item label=\"Labels\" name=\"labels\" style={{ marginBottom: \"16px\" }}>\n        <Input />\n      </Form.Item>\n\n      <Form.Item {...editFormTailLayout} style={{ marginBottom: 0 }}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Update\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\n// ----------------------------------------------------------------------------\n// DocView\n// ----------------------------------------------------------------------------\n\ntype DocViewProps = {\n  entry: EntryDoc;\n  onUpdateNoteData: (title: string, labels: string[]) => void;\n  onOpenDocument: (entry: EntryDoc) => void;\n};\n\nfunction DocView({ entry, onUpdateNoteData, onOpenDocument }: DocViewProps) {\n  return (\n    <VerticalContainer>\n      <UiRow\n        center={\n          <>\n            <EntryHeader\n              entry={entry}\n              editForm={\n                <NoteEditForm\n                  initialTitle={entry.title}\n                  initialLabels={entry.labels}\n                  onUpdateNoteData={onUpdateNoteData}\n                />\n              }\n            />\n            <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\" }}>\n              <Button\n                autoFocus\n                type=\"primary\"\n                size=\"large\"\n                style={{\n                  marginTop: \"40px\",\n                  display: \"inline-block\",\n                }}\n                onClick={() => onOpenDocument(entry)}\n              >\n                <div style={{ marginLeft: \"20px\", marginRight: \"20px\" }}>open</div>\n              </Button>\n            </div>\n            <Footer />\n          </>\n        }\n      />\n    </VerticalContainer>\n  );\n}\n\n// ----------------------------------------------------------------------------\n// LinkView\n// ----------------------------------------------------------------------------\n\ntype LinkViewProps = {\n  entry: EntryLink;\n  onUpdateLinkData: (title: string, ownLabels: string[]) => void;\n};\n\nfunction LinkView({ entry, onUpdateLinkData }: LinkViewProps) {\n  return (\n    <UiRow\n      center={\n        <>\n          <EntryHeader\n            entry={entry}\n            editForm={\n              <LinkEditForm\n                linkTarget={entry.content.target}\n                initialTitle={entry.title}\n                initialLabels={entry.content.ownLabels}\n                onUpdateLinkData={onUpdateLinkData}\n              />\n            }\n          />\n          <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\" }}>\n            <Button\n              href={entry.content.target}\n              target=\"_blank\"\n              rel=\"noreferrer noopener\"\n              autoFocus\n              type=\"primary\"\n              size=\"large\"\n              style={{\n                marginTop: \"40px\",\n                display: \"inline-block\",\n              }}\n            >\n              <div style={{ marginLeft: \"20px\", marginRight: \"20px\" }}>open</div>\n            </Button>\n          </div>\n          <Footer />\n        </>\n      }\n      style={{ height: \"100%\" }}\n    />\n  );\n}\n\nexport default EntryView;\n\n// ----------------------------------------------------------------------------\n// LinkEditForm\n// ----------------------------------------------------------------------------\n\ntype LinkEditFormProps = {\n  linkTarget: string;\n  initialTitle: string;\n  initialLabels: string[];\n  onUpdateLinkData: (title: string, labels: string[]) => void;\n};\n\nconst LinkEditForm = ({\n  linkTarget,\n  initialTitle,\n  initialLabels,\n  onUpdateLinkData,\n}: LinkEditFormProps) => {\n  const [form] = Form.useForm();\n\n  const [isTitleFetching, setIsTitleFetching] = useState(false);\n\n  const onFinish = (values: { title: string; labels: string }) => {\n    onUpdateLinkData(values.title, label_utils.extractLabelsFromString(values.labels));\n  };\n\n  return (\n    <Form\n      {...editFormLayout}\n      initialValues={{ title: initialTitle, labels: initialLabels.join(\" \") }}\n      form={form}\n      onFinish={onFinish}\n    >\n      <Form.Item\n        label=\"Title\"\n        name=\"title\"\n        rules={[{ required: true, message: \"Note requires a title\" }]}\n        style={{ marginBottom: \"16px\" }}\n      >\n        {/*<Input addonAfter={<Button type=\"primary\">Fetch title</Button>} />*/}\n        <Input.Search\n          enterButton={<span>{isTitleFetching ? <LoadingOutlined /> : null} Fetch</span>}\n          onSearch={async () => {\n            setIsTitleFetching(true);\n            try {\n              let title = await web_utils.getTitle(linkTarget);\n              if (title != null) {\n                form.setFieldsValue({ title: title });\n              }\n            } catch (e) {\n              console.log(e);\n              Modal.error({\n                title: \"Fetch failed\",\n                content:\n                  \"Could not fetch the website title. This could be due to an unavailable link target, network errors, or the website is malformed.\",\n              });\n            } finally {\n              setIsTitleFetching(false);\n            }\n          }}\n        />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Own labels\"\n        name=\"labels\"\n        style={{ marginBottom: \"16px\" }}\n        extra=\"Links inherit labels from notes implicitly. This field allows to set additional explicit labels.\"\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item {...editFormTailLayout} style={{ marginBottom: 0 }}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Update\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n","import React, { useRef, useImperativeHandle, forwardRef } from \"react\";\n\nimport Editor from \"@monaco-editor/react\";\nimport * as monacoEditor from \"monaco-editor/esm/vs/editor/editor.api\";\n\nimport styled from \"@emotion/styled\";\n\nimport { NoEntrySelected } from \"../components/HelperComponents\";\nimport { UiRow } from \"../components/UiRow\";\n\nimport { Entry } from \"../types\";\nimport { EditorSettings } from \"../settings\";\nimport * as entry_utils from \"../utils/entry_utils\";\nimport * as fn from \"../utils/fn_utils\";\n// import * as clipboard_utils from \"../utils/clipboard_utils\";\n// import * as web_utils from \"../utils/web_utils\";\n\ntype IStandaloneCodeEditor = monacoEditor.editor.IStandaloneCodeEditor;\n\n/*\n// ----------------------------------------------------------------------------\n// Notes:\n// ----------------------------------------------------------------------------\n\n# Choice of library\n\nThere are several React Monaco Editor wrappers. I went for this one, mainly\nbecause it is the only one compatible with CRA/non-eject:\n\nhttps://github.com/suren-atoyan/monaco-react#readme\n\nAlternatives are (and in particular the first one is much more popular):\n- https://github.com/react-monaco-editor/react-monaco-editor\n- https://github.com/jaywcjlove/react-monacoeditor\n\n# How to expose editor state to the main app without \"hoisting state\"\n\nThe Monaco editor is an example where lifting its entire state into the\nmain app doesn't make sense. Instead the main app needs to query the\neditor only in specific moments (like when leaving the editor) for certain\ninformation.\n\nThe hooks-based solution for this problem is a combination of `forwardRef`\nand `useImparativeHandle` as described here:\n\nhttps://stackoverflow.com/a/61547777/1804173\n\nGetting the type information for the forward ref right, was loosely based on:\n\nhttps://stackoverflow.com/a/62258685/1804173\n\nIn retrospect: Since there is a editorDidMount callback anyway that gets the\neditor instance, and we need to bubble the callback up to the main app e.g.\nfor cursor restoring, we might as well drop the forwardRef mechanism and\npass that ref up via the callback manually?\n*/\n\n/*\nasync function handlePasteLink(editor: monacoEditor.editor.ICodeEditor) {\n  let clipboardText = await clipboard_utils.getClipboardText();\n  console.log(\"clipboard text:\", clipboardText);\n  if (clipboardText == null) {\n    // We cannot get the clipboard text. At least try to run the paste command\n    // to get the clipboard content into the editor without any processing.\n    document.execCommand(\"paste\");\n    return;\n  }\n\n  // try to request a title from clipboard text\n  let title = await web_utils.getTitle(clipboardText);\n\n  console.log(\"title is:\", title);\n  if (title === undefined) {\n    title = \"\";\n  }\n\n  var selection = editor.getSelection();\n  // console.log(selection);\n  if (selection !== null) {\n    var range = new monacoEditor.Range(\n      selection.startLineNumber,\n      selection.startColumn,\n      selection.endLineNumber,\n      selection.endColumn\n    );\n    var id = { major: 1, minor: 1 };\n    var text = `[${title}](${clipboardText})`;\n    var op = {\n      identifier: id,\n      range: range,\n      text: text,\n      forceMoveMarkers: true,\n    };\n    let newSelection = new monacoEditor.Selection(\n      selection.startLineNumber,\n      selection.startColumn + 1 + title.length,\n      selection.startLineNumber,\n      selection.startColumn + 1\n    );\n    editor.executeEdits(\"paste-link\", [op], [newSelection]);\n  }\n}\n*/\n\nconst DebugBox = styled.div`\n  height: 100%;\n  /* Work-around for vertical overflow issue: https://github.com/microsoft/monaco-editor/issues/29 */\n  overflow: hidden;\n  /* background: #050; */\n`;\n\nexport type NoteEditorRef = {\n  getEditorContent: () => string | undefined;\n  getScrollPosition: () => number | undefined;\n  setScrollPosition: (pos: number) => void;\n  getCursorPosition: () => monacoEditor.Position | undefined;\n  setCursorPosition: (pos: monacoEditor.Position) => void;\n  focus: () => void;\n};\n\ntype NoteEditorProps = {\n  entry?: Entry;\n  settings: EditorSettings;\n  onEditorDidMount: () => void;\n};\n\nconst NoteEditor = forwardRef(\n  ({ entry, settings, onEditorDidMount }: NoteEditorProps, ref: React.Ref<NoteEditorRef>) => {\n    const editorRef = useRef(undefined as IStandaloneCodeEditor | undefined);\n\n    // https://microsoft.github.io/monaco-editor/playground.html#interacting-with-the-editor-adding-an-action-to-an-editor-instance\n    const onEditorDidMountWrapper = (_: () => string, editor: IStandaloneCodeEditor) => {\n      // Temporarily disable paste magic because it breaks syntax highlighting:\n      // https://github.com/suren-atoyan/monaco-react/issues/155\n      /*\n      editor.addAction({\n        // An unique identifier of the contributed action.\n        id: \"link-paste\",\n        // A label of the action that will be presented to the user.\n        label: \"Link paste\",\n        // An optional array of keybindings for the action.\n        keybindings: [\n          monacoEditor.KeyMod.CtrlCmd | monacoEditor.KeyMod.Shift | monacoEditor.KeyCode.KEY_V,\n        ],\n        contextMenuGroupId: \"navigation\",\n        contextMenuOrder: 1.5,\n        // Method that will be executed when the action is triggered.\n        // @param editor The editor instance is passed in as a convenience\n        run: function (editor) {\n          handlePasteLink(editor);\n        },\n      });\n      */\n\n      editorRef.current = editor;\n      onEditorDidMount();\n    };\n\n    useImperativeHandle(ref, () => ({\n      getEditorContent: () => {\n        return editorRef.current?.getValue();\n      },\n      // https://stackoverflow.com/a/45349393/1804173\n      // https://microsoft.github.io/monaco-editor/api/interfaces/monaco.editor.icodeeditor.html\n      getScrollPosition: () => {\n        return editorRef.current?.getScrollTop();\n      },\n      setScrollPosition: (pos: number) => {\n        editorRef.current?.setScrollTop(pos);\n      },\n      getCursorPosition: () => {\n        return fn.mapNullToUndefined(editorRef.current?.getPosition());\n      },\n      setCursorPosition: (pos: monacoEditor.Position) => {\n        editorRef.current?.setPosition(pos);\n      },\n      focus: () => {\n        editorRef.current?.focus();\n      },\n    }));\n\n    const renderEntry = (entry: Entry) => {\n      return (\n        <DebugBox>\n          <Editor\n            height=\"100%\"\n            theme={settings.theme}\n            language=\"markdown\"\n            value={entry_utils.getText(entry)!}\n            editorDidMount={onEditorDidMountWrapper}\n            options={{\n              fontSize: settings.fontSize,\n              cursorBlinking: \"smooth\",\n              wordWrap: settings.wordWrap,\n              wordWrapColumn: settings.wordWrapColumn,\n              minimap: {\n                enabled: false,\n              },\n              // Doesn't seem to have an effect?\n              // Reference: https://stackoverflow.com/questions/47017753/monaco-editor-dynamically-resizable\n              // automaticLayout: true,\n            }}\n          />\n        </DebugBox>\n      );\n    };\n\n    return (\n      <UiRow\n        center={entry != null ? renderEntry(entry) : <NoEntrySelected />}\n        style={{ height: \"100%\" }}\n      />\n    );\n  }\n);\n\nexport default NoteEditor;\n","import React, { useState } from \"react\";\n\nimport { Typography, Button, Table, Modal } from \"antd\";\n\nimport styled from \"@emotion/styled\";\n\nimport { UiRow } from \"../components/UiRow\";\n\nimport { AuthSettings } from \"../settings\";\nimport { GitOpKind } from \"../git_ops\";\nimport type { GitOps, MultiRepoGitOps } from \"../git_ops\";\nimport * as octokit from \"../octokit\";\nimport * as fn from \"../utils/fn_utils\";\nimport { getRepoCommitPage } from \"../repo\";\n\nfunction prepareCommitMessage(ops: GitOps): string {\n  return ops\n    .map((op) => {\n      switch (op.kind) {\n        case GitOpKind.Write:\n          return `updating ${op.path}`;\n        case GitOpKind.Remove:\n          return `removing ${op.path}`;\n        case GitOpKind.Move:\n          return `moving ${op.pathSrc} to ${op.pathDst}`;\n        default:\n          fn.assertUnreachable(op);\n          return \"\";\n      }\n    })\n    .join(\"\\n\");\n}\n\nconst columns = [\n  {\n    title: <b>Repository</b>,\n    dataIndex: \"repo\",\n    key: \"repo\",\n  },\n  {\n    title: <b>Operation</b>,\n    dataIndex: \"op\",\n    key: \"op\",\n  },\n  {\n    title: <b>File</b>,\n    dataIndex: \"file\",\n    key: \"file\",\n  },\n];\n\ntype TableRow = {\n  key: number; // Only used by Antd internally\n  repo: string;\n  op: string;\n  file: React.ReactNode;\n};\n\nfunction buildTableDataSource(ops: MultiRepoGitOps): TableRow[] {\n  var key = 0;\n  return ops.flatMap((repo, ops) =>\n    ops.map((op) => ({\n      key: ++key,\n      repo: repo.name,\n      op: op.kind,\n      file:\n        op.kind !== GitOpKind.Move ? (\n          <Text code>{op.path}</Text>\n        ) : (\n          <>\n            <Text code>{op.pathSrc}</Text> to <Text code>{op.pathDst}</Text>\n          </>\n        ),\n    }))\n  );\n}\n\n/*\n// ----------------------------------------------------------------------------\n// Notes:\n// ----------------------------------------------------------------------------\n*/\n\nconst { Title, Text } = Typography;\n\nconst StyledTitle = styled(Title)`\n  margin-top: 20px;\n`;\n\nconst Footer = styled.div`\n  margin-top: 150px;\n  margin-bottom: 150px;\n`;\n\ntype PrepareCommitProps = {\n  auth: AuthSettings;\n  ops: MultiRepoGitOps;\n  onSuccessfulCommit: () => void;\n};\n\nfunction PrepareCommit({ auth, ops, onSuccessfulCommit }: PrepareCommitProps) {\n  // refs\n  // let textAreaRef = useRef<TextAreaRef>(null);\n\n  let [isCommitting, setIsCommitting] = useState(false);\n\n  const anyStagedChange = () => {\n    return Object.keys(ops).length > 0;\n  };\n\n  const renderOps = () => {\n    return (\n      <>\n        <StyledTitle level={4}>Staged changes</StyledTitle>\n        <Table\n          bordered\n          columns={columns}\n          dataSource={buildTableDataSource(ops)}\n          pagination={false}\n          size=\"small\"\n        />\n        {/*\n        <StyledTitle level={4}>Commit message</StyledTitle>\n        <TextArea ref={textAreaRef} rows={4} defaultValue={prepareCommitMessage(ops)} />\n        */}\n        <Button\n          type=\"primary\"\n          style={{ marginTop: \"20px\" }}\n          loading={isCommitting}\n          disabled={!anyStagedChange()}\n          onClick={onCommit}\n        >\n          Commit\n        </Button>\n        <Footer />\n      </>\n    );\n  };\n\n  const onCommit = async () => {\n    setIsCommitting(true);\n\n    let allResultPromises = ops.flatMap((repo, singleRepoOps) => {\n      if (singleRepoOps.length > 0) {\n        let perRepoCommitMessage = prepareCommitMessage(singleRepoOps);\n        return [\n          octokit\n            .commit(auth, repo, singleRepoOps, perRepoCommitMessage)\n            .map((commitHash) => ({ repo: repo, commitHash: commitHash })),\n        ];\n      } else {\n        return [];\n      }\n    });\n    let allResults = await Promise.all(allResultPromises);\n\n    setIsCommitting(false);\n\n    let successfulResults = allResults\n      .filter((result) => result.isOk())\n      .map((result) => result._unsafeUnwrap());\n    let allSuccessful = allResults.length === successfulResults.length;\n    if (allSuccessful) {\n      // https://github.com/bluenote10/DummyRepo/commit/b7c9388eda40d273692466ee51e9bc19f0b50add\n      Modal.success({\n        title: \"Success\",\n        content: (\n          <>\n            Changes committed successfully:{\" \"}\n            {successfulResults\n              .map<React.ReactNode>(({ repo, commitHash }) => (\n                <a\n                  href={getRepoCommitPage(repo, commitHash)}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  {commitHash.slice(0, 7)}\n                </a>\n              ))\n              .reduce((prev, curr) => [prev, \", \", curr])}\n          </>\n        ),\n      });\n      onSuccessfulCommit();\n    } else {\n      Modal.error({\n        title: \"Failure\",\n        content: \"Failed to commit some changes. Do you have access to the repository?\",\n      });\n    }\n  };\n\n  return <UiRow center={renderOps()} />;\n}\n\nexport default PrepareCommit;\n\n/*\nThis old implementation was offering a customizable commit message, but this\nlogically flawed, because a commit message should not be the same for multiple\nrepositories. Each repository needs its own commit message to reflect the\nactual changes in that repo. From a UX perspective this is a bit more challenging\nto offer multiple text areas for each repo. Since the feature is not super\ncrucial, let's go for auto generated commit messages for now.\n\nKeeping this as a reference, because it contains the ugly hack around Antd's\ntext area ref issue.\n\nimport { TextAreaRef } from \"antd/lib/input/TextArea\";\n\nconst onCommit = async () => {\n  let commitMsg = \"\";\n  if (textAreaRef.current != null && textAreaRef.current.value != null) {\n    // console.log(textAreaRef.current);\n    commitMsg = textAreaRef.current.value;\n  }\n  // Temporary workaround for https://github.com/ant-design/ant-design/issues/28332\n  if (textAreaRef.current != null && (textAreaRef.current as any)?.state?.value != null) {\n    console.log(textAreaRef.current);\n    let value = (textAreaRef.current as any)?.state?.value;\n    if (typeof value === \"string\") {\n      commitMsg = value;\n    }\n  }\n  if (commitMsg.trim().length === 0) {\n    Modal.error({\n      title: \"Illegal commit message\",\n      content: \"Commit message must not be empty\",\n    });\n  } else {\n    let allResultPromises = mapMultiRepoGitOpsGrouped(ops, (repo, ops) => {\n      return octokit.commit(repo, ops, commitMsg);\n    });\n    let allResults = await Promise.all(allResultPromises);\n    let allSuccessful = allResults.length === allResults.filter((result) => result.isOk()).length;\n    if (allSuccessful) {\n      Modal.success({\n        title: \"Success\",\n        content: \"Changes committed successfully\",\n      });\n      // We need a callback into the main App to mark changes as committed.\n      // In fact, the question is whether we should rather trigger a refresh to properly\n      // update the git hashes of all files. However, what if the changes don't appear\n      // immediately in a refresh? Delay the refresh? Perhaps it is even better to consider\n      // the local state as ground truth for the repo state.\n      onSuccessfulCommit();\n    } else {\n      Modal.error({\n        title: \"Failure\",\n        content: \"Failed to commit some changes. Do you have access to the repository?\",\n      });\n    }\n  }\n};\n*/\n","import React from \"react\";\n\nimport { Select } from \"antd\";\n\nimport { Repo, Repos } from \"../repo\";\n\nconst { Option } = Select;\n\n/*\nThings wrapped into a Form.Item need to support the props:\n- value: T\n- onChange: (T) => void\n\nHowever, these props must not be supplied manually by the user,\nthis is taken care of in the Form.Item wrapper. Trying to do\nso manually via\n\n<RepoSelect\n  value={form.getFieldValue(\"repo\")}\n  repos={repos}\n  onChange={(repo) => form.setFieldsValue({ repo: repo })}\n/>\n\nreferences the `form` before it has been created, which leads\nto an runtime error.\n\nThis means that\nthe component doesn't type check properly though. The easiest\nwork-around is perhaps to make these props optional.\n\nReferences:\n- The \"Customized Form Controls\" example https://ant.design/components/form/#components-form-demo-customized-form-controls\n- https://medium.com/swlh/use-custom-and-third-party-react-form-components-with-ant-design-and-typescript-2732e7849aee\n*/\n\nexport type RepoSelectProps = {\n  repos: Repos;\n  value?: Repo;\n  onChange?: (repo: Repo) => void;\n};\n\nexport function RepoSelect({ repos, value, onChange }: RepoSelectProps) {\n  return (\n    <Select\n      value={value?.name}\n      onChange={(value) => {\n        let repo = repos.find((repo) => repo.name === value);\n        if (repo != null && onChange != null) {\n          onChange(repo);\n        }\n      }}\n    >\n      {repos.map((repo, i) => (\n        <Option key={i} value={repo.name}>\n          {repo.name}\n        </Option>\n      ))}\n    </Select>\n  );\n}\n\nexport default RepoSelect;\n","import React from \"react\";\n\nimport { Card, Input, Button, Form, Tabs } from \"antd\";\n\nimport { UiRow } from \"../components/UiRow\";\nimport { EntryKindSymbol } from \"../components/HelperComponents\";\nimport { RepoSelect } from \"../components/RepoSelect\";\n\nimport { EntryKind } from \"../types\";\nimport { Repo, getDefaultRepo } from \"../repo\";\n\nimport * as label_utils from \"../utils/label_utils\";\nimport * as web_utils from \"../utils/web_utils\";\n\nconst { TabPane } = Tabs;\n\nconst formLayout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 20 },\n};\nconst fromTailLayout = {\n  wrapperCol: { offset: 4, span: 20 },\n};\n\ntype OnAddedCallBack = (args: {\n  entryKind: EntryKind;\n  repo: Repo;\n  title: string;\n  labels: string[];\n  content: string;\n  location?: string;\n  extension?: string;\n}) => void;\n\ntype AddEntryProps = {\n  onAdded: OnAddedCallBack;\n  repos: Repo[];\n};\n\nfunction TabHeader({ entryKind, text }: { entryKind: EntryKind; text: string }) {\n  return (\n    <span style={{ marginRight: \"24px\", userSelect: \"none\" }}>\n      <EntryKindSymbol entryKind={entryKind} /> {text}\n    </span>\n  );\n}\n\nfunction AddEntry({ onAdded, repos }: AddEntryProps) {\n  return (\n    <UiRow\n      center={\n        <Card\n          // TODO: Sync with style used in EntryHeader?\n          style={{\n            marginTop: \"20px\",\n            marginBottom: \"20px\",\n          }}\n        >\n          <Tabs defaultActiveKey=\"1\">\n            <TabPane tab={<TabHeader entryKind={EntryKind.NoteMarkdown} text=\"Note\" />} key=\"note\">\n              <CreateNoteForm onAdded={onAdded} repos={repos} />\n            </TabPane>\n            <TabPane tab={<TabHeader entryKind={EntryKind.Document} text=\"Document\" />} key=\"doc\">\n              <CreateDocumentForm onAdded={onAdded} repos={repos} />\n            </TabPane>\n            <TabPane tab={<TabHeader entryKind={EntryKind.Link} text=\"Bookmark\" />} key=\"link\">\n              <CreateLinkForm onAdded={onAdded} repos={repos} />\n            </TabPane>\n          </Tabs>\n        </Card>\n      }\n    />\n  );\n}\n\nfunction CreateNoteForm({ repos, onAdded }: AddEntryProps) {\n  const [form] = Form.useForm();\n\n  const initialValues = {\n    repo: getDefaultRepo(repos),\n    title: \"\",\n    labels: \"\",\n    location: \"\",\n  };\n  type FormVars = typeof initialValues;\n\n  const onFinish = ({ repo, title, labels, location }: FormVars) => {\n    onAdded({\n      entryKind: EntryKind.NoteMarkdown,\n      repo: repo!,\n      title: title,\n      labels: label_utils.extractLabelsFromString(labels),\n      location: location,\n      content: \"\",\n    });\n    form.resetFields();\n  };\n\n  return (\n    <Form\n      {...formLayout}\n      initialValues={initialValues}\n      form={form}\n      onFinish={onFinish}\n      requiredMark={false}\n    >\n      <Form.Item\n        label=\"Repository\"\n        name=\"repo\"\n        rules={[{ required: true, message: \"Repo is required\" }]}\n      >\n        <RepoSelect repos={repos} />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Title\"\n        name=\"title\"\n        rules={[{ required: true, message: \"Title is required\" }]}\n      >\n        <Input placeholder=\"Note title\" />\n      </Form.Item>\n\n      <Form.Item label=\"Folder path\" name=\"location\">\n        <Input placeholder=\"Folder path\" />\n      </Form.Item>\n\n      <Form.Item label=\"Labels\" name=\"labels\">\n        <Input placeholder=\"Labels\" />\n      </Form.Item>\n\n      <Form.Item {...fromTailLayout} style={{ marginBottom: 0 }}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Create\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n\nfunction CreateDocumentForm({ repos, onAdded }: AddEntryProps) {\n  const [form] = Form.useForm();\n\n  const initialValues = {\n    repo: getDefaultRepo(repos),\n    title: \"\",\n    extension: \"\",\n    location: \"\",\n    labels: \"\",\n    url: \"\",\n  };\n  type FormVars = typeof initialValues;\n\n  const onFinish = async ({ repo, title, extension, location, labels, url }: FormVars) => {\n    // TODO implement download statefully...\n    let content = await web_utils.fetchBodyProxied(url);\n    onAdded({\n      entryKind: EntryKind.Document,\n      repo: repo!,\n      title: title,\n      extension: extension,\n      location: location,\n      labels: label_utils.extractLabelsFromString(labels),\n      content: content,\n    });\n    form.resetFields();\n  };\n\n  return (\n    <Form\n      {...formLayout}\n      initialValues={initialValues}\n      form={form}\n      onFinish={onFinish}\n      requiredMark={false}\n    >\n      <Form.Item\n        label=\"Repository\"\n        name=\"repo\"\n        rules={[{ required: true, message: \"Repo is required\" }]}\n      >\n        <RepoSelect repos={repos} />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Title\"\n        name=\"title\"\n        rules={[{ required: true, message: \"Title is required\" }]}\n      >\n        <Input placeholder=\"Document title\" />\n      </Form.Item>\n\n      <Form.Item\n        label=\"File extension\"\n        name=\"extension\"\n        rules={[{ required: true, message: \"File extension is required\" }]}\n      >\n        <Input placeholder=\"File extension\" />\n      </Form.Item>\n\n      <Form.Item label=\"Folder path\" name=\"location\">\n        <Input placeholder=\"Folder path\" />\n      </Form.Item>\n\n      <Form.Item label=\"Labels\" name=\"labels\">\n        <Input placeholder=\"Labels\" />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Data URL\"\n        name=\"url\"\n        rules={[{ required: true, message: \"URL is required\" }]}\n      >\n        <Input placeholder=\"URL from which to download document\" />\n      </Form.Item>\n\n      <Form.Item {...fromTailLayout} style={{ marginBottom: 0 }}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Download & Create\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n\nfunction CreateLinkForm({ repos, onAdded }: AddEntryProps) {\n  const [form] = Form.useForm();\n\n  const initialValues = {\n    repo: getDefaultRepo(repos),\n    title: \"\",\n    labels: \"\",\n    url: \"\",\n  };\n  type FormVars = typeof initialValues;\n\n  const onFinish = ({ repo, title, labels, url }: FormVars) => {\n    onAdded({\n      entryKind: EntryKind.Link,\n      repo: repo!,\n      title: title,\n      labels: label_utils.extractLabelsFromString(labels),\n      content: url,\n    });\n    form.resetFields();\n  };\n\n  return (\n    <Form\n      {...formLayout}\n      initialValues={initialValues}\n      form={form}\n      onFinish={onFinish}\n      requiredMark={false}\n    >\n      <Form.Item\n        label=\"Repository\"\n        name=\"repo\"\n        rules={[{ required: true, message: \"Repo is required\" }]}\n      >\n        <RepoSelect repos={repos} />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Title\"\n        name=\"title\"\n        rules={[{ required: true, message: \"Title is required\" }]}\n      >\n        <Input placeholder=\"Bookmark title\" />\n      </Form.Item>\n\n      <Form.Item label=\"Labels\" name=\"labels\">\n        <Input placeholder=\"Labels\" />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Bookmark URL\"\n        name=\"url\"\n        rules={[{ required: true, message: \"URL is required\" }]}\n      >\n        <Input placeholder=\"Bookmark target URL\" />\n      </Form.Item>\n\n      <Form.Item {...fromTailLayout} style={{ marginBottom: 0 }}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Create\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n\n// Variant with single form and radio button. Is this better?\n/*\nfunction AddEntry({ onAdded }: AddEntryProps) {\n  const [form] = Form.useForm();\n  const [entryKind, setEntryKind] = useState(\"note\");\n\n  const handleFormValuesChange = (changedValues: any) => {\n    const fieldName = Object.keys(changedValues)[0];\n\n    if (fieldName === \"entryKind\") {\n      const value = changedValues[fieldName];\n      setEntryKind(value);\n    }\n  };\n\n  return (\n    <UiRow\n      center={\n        <Card\n          // TODO: Sync with style used in EntryHeader?\n          style={{\n            marginTop: \"20px\",\n            marginBottom: \"20px\",\n          }}\n        >\n          <Form {...formLayout} name=\"basic\" form={form} onValuesChange={handleFormValuesChange}>\n            <Form.Item label=\"Entry type\" name=\"entryKind\" initialValue={entryKind}>\n              <Radio.Group>\n                <Radio value=\"note\">Note</Radio>\n                <Radio value=\"docu\">Document</Radio>\n                <Radio value=\"link\">Link</Radio>\n              </Radio.Group>\n            </Form.Item>\n\n            {entryKind === \"note\" && (\n              <Form.Item label=\"Title\" name=\"title\">\n                <Input />\n              </Form.Item>\n            )}\n\n            <Form.Item {...fromTailLayout} style={{ marginBottom: 0 }}>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Create\n              </Button>\n            </Form.Item>\n          </Form>\n        </Card>\n      }\n    />\n  );\n}\n*/\n\nexport default AddEntry;\n","import React, { useCallback } from \"react\";\n\nimport {\n  Alert,\n  Button,\n  Input,\n  InputNumber,\n  Select,\n  Switch,\n  Row,\n  Col,\n  Card,\n  Divider,\n  Space,\n} from \"antd\";\nimport { RowProps } from \"antd/lib/row\";\n\nimport {\n  PlusOutlined,\n  GithubOutlined,\n  CheckCircleTwoTone,\n  ExclamationCircleTwoTone,\n  QuestionCircleTwoTone,\n  LoadingOutlined,\n} from \"@ant-design/icons\";\n\nimport styled from \"@emotion/styled\";\n\nimport { UiRow } from \"../components/UiRow\";\n\nimport {\n  Settings,\n  SettingsAction,\n  clearAllStorage,\n  AuthSettings,\n  EditorSettings,\n} from \"../settings\";\n\nimport { Repo, Repos, VerificationStatus, createDefaultInitializedRepo } from \"../repo\";\nimport * as octokit from \"../octokit\";\n\nconst { Option } = Select;\n\n// ----------------------------------------------------------------------------\n// Repo Card Header\n// ----------------------------------------------------------------------------\n\nconst StyledRepoTitle = styled.span`\n  font-size: 16px;\n`;\n\nfunction Header(repo: Repo) {\n  return (\n    <Space>\n      <Row wrap={false} align=\"middle\" gutter={8}>\n        <Col flex=\"auto\">\n          <GithubOutlined style={{ fontSize: \"24px\", color: \"#666\" }} />\n        </Col>\n        <Col flex=\"auto\">\n          <StyledRepoTitle>{repo.name}</StyledRepoTitle>\n        </Col>\n      </Row>\n    </Space>\n  );\n}\n\n// ----------------------------------------------------------------------------\n// RepoForm\n// ----------------------------------------------------------------------------\n\nconst fromRowProps: RowProps = { justify: \"end\", align: \"middle\" as \"middle\", gutter: [8, 16] };\n\nfunction FormRow({ text, children }: { text?: string; children?: React.ReactNode }) {\n  return (\n    <Row {...fromRowProps}>\n      {text != null ? <Col>{text}</Col> : null}\n      <Col span={20}>{children}</Col>\n    </Row>\n  );\n}\n\nfunction RepoForm({\n  repo,\n  auth,\n  onDelete,\n  onEdited,\n  onMakeDefault,\n}: {\n  repo: Repo;\n  auth: AuthSettings;\n  onDelete: () => void;\n  onEdited: (repo: Repo) => void;\n  onMakeDefault: () => void;\n}) {\n  return (\n    <>\n      <FormRow text=\"Name:\">\n        <Input\n          placeholder=\"Name within Notemarks\"\n          value={repo.name}\n          onChange={(evt) => onEdited({ ...repo, name: evt.target.value })}\n        />\n      </FormRow>\n      <FormRow text=\"User/Organization:\">\n        <Input\n          placeholder=\"GitHub repository user/organization\"\n          value={repo.userOrOrgName}\n          onChange={(evt) => onEdited({ ...repo, userOrOrgName: evt.target.value })}\n        />\n      </FormRow>\n      <FormRow text=\"Repository:\">\n        <Input\n          placeholder=\"GitHub repository name\"\n          value={repo.repoName}\n          onChange={(evt) => onEdited({ ...repo, repoName: evt.target.value })}\n        />\n      </FormRow>\n      <FormRow text=\"Enabled:\">\n        <Switch\n          checked={repo.enabled}\n          onChange={(value) => onEdited({ ...repo, enabled: value })}\n        />\n      </FormRow>\n      <FormRow text=\"Default:\">\n        <Switch checked={repo.default} onChange={onMakeDefault} />\n      </FormRow>\n      <FormRow>\n        <Row justify=\"space-between\">\n          <Col>\n            <Button\n              type=\"primary\"\n              onClick={async () => {\n                onEdited({ ...repo, verified: VerificationStatus.inProgress });\n                let verified = await octokit.verifyRepo(repo, auth);\n                onEdited({\n                  ...repo,\n                  verified: verified ? VerificationStatus.success : VerificationStatus.failed,\n                });\n              }}\n            >\n              Verify Access\n            </Button>\n          </Col>\n          <Col>\n            <Button danger onClick={onDelete}>\n              Delete\n            </Button>\n          </Col>\n        </Row>\n      </FormRow>\n    </>\n  );\n}\n\n// ----------------------------------------------------------------------------\n// MultiRepoForm\n// ----------------------------------------------------------------------------\n\ntype MultiRepoFormProps = {\n  auth: AuthSettings;\n  repos: Repos;\n  setRepos: (repos: Repos) => void;\n};\n\nfunction MultiRepoForm({ auth, repos, setRepos }: MultiRepoFormProps) {\n  const addRepo = useCallback(() => {\n    let newRepo = createDefaultInitializedRepo(repos.length === 0 ? true : false);\n    setRepos([...repos, newRepo]);\n  }, [repos, setRepos]);\n\n  const deleteRepo = (i: number) => {\n    let newRepos = [...repos];\n    newRepos.splice(i, 1);\n    setRepos(newRepos);\n  };\n\n  const updateRepo = (i: number, updatedRepo: Repo) => {\n    let newRepos = [...repos];\n    newRepos[i] = updatedRepo;\n    setRepos(newRepos);\n  };\n\n  const makeRepoDefault = (i: number) => {\n    // Note that we deliberately only handle \"make repo default\" case,\n    // and don't care about the negation \"make repo not the default\".\n    // This makes sense, because we don't want to end up with no default\n    // anyway. The only allowed change is to make another repo the default.\n    let newRepos = [...repos];\n    for (let j = 0; j < newRepos.length; ++j) {\n      if (j === i) {\n        newRepos[j].default = true;\n      } else {\n        newRepos[j].default = false;\n      }\n    }\n    setRepos(newRepos);\n  };\n\n  return (\n    <>\n      {repos.map((repo, i) => (\n        <Row key={repo.key} gutter={[24, 24]}>\n          <Col span={24}>\n            <Card\n              title={Header(repo)}\n              size=\"small\"\n              hoverable\n              extra={<VerificationStatusIcon status={repo.verified} />}\n            >\n              <RepoForm\n                repo={repo}\n                auth={auth}\n                onDelete={() => deleteRepo(i)}\n                onEdited={(updatedRepo) => updateRepo(i, updatedRepo)}\n                onMakeDefault={() => makeRepoDefault(i)}\n              />\n            </Card>\n          </Col>\n        </Row>\n      ))}\n      <Row justify=\"center\">\n        <Col>\n          <Button type=\"dashed\" size=\"large\" onClick={addRepo}>\n            <PlusOutlined /> Add Repository\n          </Button>\n        </Col>\n      </Row>\n    </>\n  );\n}\n\n// ----------------------------------------------------------------------------\n// AuthSettings\n// ----------------------------------------------------------------------------\n\nfunction AuthForm({\n  settings,\n  setSettings,\n}: {\n  settings: AuthSettings;\n  setSettings: (settings: AuthSettings) => void;\n}) {\n  return (\n    <>\n      <FormRow text=\"GitHub access token:\">\n        <Input.Password\n          placeholder=\"GitHub access token\"\n          defaultValue={settings.tokenGitHub}\n          onChange={(evt) => setSettings({ ...settings, tokenGitHub: evt.target.value })}\n        />\n      </FormRow>\n      <FormRow>\n        <div style={{ fontSize: 12, color: \"#666\" }}>\n          For more information refer to the{\" \"}\n          <a\n            href=\"https://github.com/notemarks/notemarks#GitHubAuthentication\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            GitHub authentication documentation\n          </a>\n          .\n        </div>\n      </FormRow>\n    </>\n  );\n}\n\n// ----------------------------------------------------------------------------\n// EditorSettings\n// ----------------------------------------------------------------------------\n\nfunction EditorForm({\n  settings,\n  setSettings,\n}: {\n  settings: EditorSettings;\n  setSettings: (settings: EditorSettings) => void;\n}) {\n  return (\n    <>\n      <FormRow text=\"Font size:\">\n        <InputNumber\n          placeholder=\"Font size\"\n          defaultValue={settings.fontSize}\n          onChange={(value) => {\n            if (typeof value === \"number\") {\n              setSettings({ ...settings, fontSize: value });\n            }\n          }}\n          style={{ width: \"100%\" }}\n        />\n      </FormRow>\n      <FormRow text=\"Theme:\">\n        <Select\n          defaultValue={settings.theme}\n          onChange={(value) => setSettings({ ...settings, theme: value })}\n          style={{ width: \"100%\" }}\n        >\n          <Option value=\"dark\">dark</Option>\n          <Option value=\"light\">light</Option>\n        </Select>\n      </FormRow>\n      <FormRow text=\"Word wrap\">\n        <Select\n          defaultValue={settings.wordWrap}\n          onChange={(value) => setSettings({ ...settings, wordWrap: value })}\n          style={{ width: \"100%\" }}\n        >\n          <Option value=\"bounded\">on (wrap on both viewport and word wrap column)</Option>\n          <Option value=\"wordWrapColumn\">on (wrap on word wrap column)</Option>\n          <Option value=\"on\">on (wrap on viewport)</Option>\n          <Option value=\"off\">off</Option>\n        </Select>\n      </FormRow>\n      <FormRow text=\"Word wrap column:\">\n        <InputNumber\n          placeholder=\"Word wrap column\"\n          defaultValue={settings.wordWrapColumn}\n          onChange={(value) => {\n            if (typeof value === \"number\") {\n              setSettings({ ...settings, wordWrapColumn: value });\n            }\n          }}\n          style={{ width: \"100%\" }}\n        />\n      </FormRow>\n    </>\n  );\n}\n\n// ----------------------------------------------------------------------------\n// Settings\n// ----------------------------------------------------------------------------\n\ntype SettingsProps = {\n  settings: Settings;\n  dispatch: (action: SettingsAction) => void;\n  isAuthenticatedSession: boolean;\n};\n\nfunction SettingsView({ settings, dispatch, isAuthenticatedSession }: SettingsProps) {\n  return (\n    <UiRow\n      center={\n        <>\n          <AuthenticationInfo isAuthenticatedSession={isAuthenticatedSession} />\n\n          <Divider orientation=\"left\">Repositories</Divider>\n          <MultiRepoForm\n            auth={settings.auth}\n            repos={settings.repos}\n            setRepos={(repos) => dispatch({ repos: repos })}\n          />\n\n          <Divider orientation=\"left\">Authentication</Divider>\n          <AuthForm\n            settings={settings.auth}\n            setSettings={(authSettings) => dispatch({ auth: authSettings })}\n          />\n\n          <Divider orientation=\"left\">Editor Settings</Divider>\n          <EditorForm\n            settings={settings.editor}\n            setSettings={(editorSettings) => dispatch({ editor: editorSettings })}\n          />\n\n          <Divider orientation=\"left\">Browser cache</Divider>\n          <FormRow>\n            <Button danger onClick={clearAllStorage}>\n              Clear all cache data\n            </Button>\n          </FormRow>\n        </>\n      }\n    />\n  );\n}\n\n// ----------------------------------------------------------------------------\n// Helper\n// ----------------------------------------------------------------------------\n\nfunction VerificationStatusIcon({ status }: { status: VerificationStatus }) {\n  if (status === VerificationStatus.unknown) {\n    return <QuestionCircleTwoTone twoToneColor=\"#e6e6e6\" style={{ fontSize: \"24px\" }} />;\n  } else if (status === VerificationStatus.failed) {\n    return <ExclamationCircleTwoTone twoToneColor=\"#eb2f96\" style={{ fontSize: \"24px\" }} />;\n  } else if (status === VerificationStatus.success) {\n    return <CheckCircleTwoTone twoToneColor=\"#2be262\" style={{ fontSize: \"24px\" }} />;\n  } else {\n    return <LoadingOutlined style={{ fontSize: \"24px\" }} />;\n  }\n}\n\nfunction AuthenticationInfo({ isAuthenticatedSession }: { isAuthenticatedSession: boolean }) {\n  if (!isAuthenticatedSession) {\n    return (\n      <Alert\n        message=\"Temporary session\"\n        type=\"warning\"\n        showIcon\n        description={\n          <div>\n            This session has been started without a local encryption password. For security reasons\n            none of the settings changes below will be persisted into the browser's local storage.\n            If you want your browser to remember these settings, you can start a{\" \"}\n            <a href=\"./\" target=\"_blank\" rel=\"noopener noreferrer\">\n              new session\n            </a>{\" \"}\n            with a local encryption password.\n          </div>\n        }\n        style={{ marginTop: \"20px\" }}\n      />\n    );\n  } else {\n    return null;\n  }\n}\n\nexport default SettingsView;\n\n// First take on RepoForm -- still any relevance?\n\n/*\nfunction RepoForm({\n  onDelete,\n}: {\n  onDelete: () => void,\n}) {\n\n  const layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n  };\n  const tailLayout = {\n    wrapperCol: { offset: 8, span: 16 },\n  };\n  return (\n    <Form\n      {...layout}\n      name=\"basic\"\n      initialValues={{ remember: true }}\n    >\n      <Form.Item\n        label=\"User\"\n        name=\"user\"\n        rules={[{ required: true, message: 'GitHub user name' }]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        label=\"Repository\"\n        name=\"repository\"\n        rules={[{ required: true, message: 'GitHub repository name' }]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        label=\"Token\"\n        name=\"token\"\n        rules={[{ required: true, message: 'GitHub token' }]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item {...tailLayout}>\n        <Row justify=\"space-between\">\n          <Col>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Verify Access\n            </Button>\n          </Col>\n          <Col>\n            <Button danger onClick={onDelete}>\n              Delete\n            </Button>\n          </Col>\n        </Row>\n      </Form.Item>\n    </Form>\n  )\n}\n*/\n","import React, { useReducer, useRef, useLayoutEffect } from \"react\";\nimport \"./App.css\";\n\nimport { Layout, Menu, Modal } from \"antd\";\nimport {\n  EditOutlined,\n  SettingOutlined,\n  FileSearchOutlined,\n  ReadOutlined,\n  ReloadOutlined,\n  PlusOutlined,\n  LoadingOutlined,\n  ExclamationCircleOutlined,\n} from \"@ant-design/icons\";\nimport { MenuInfo } from \"rc-menu/lib/interface\";\n\nimport styled from \"@emotion/styled\";\n\nimport * as monacoEditor from \"monaco-editor/esm/vs/editor/editor.api\";\nimport mousetrap from \"mousetrap\";\n\nimport { useEffectOnce, useDebouncedEffect } from \"./utils/react_utils\";\nimport { UiRow } from \"./components/UiRow\";\nimport { UploadOutlinedWithStatus } from \"./components/HelperComponents\";\n\nimport {\n  EntryKind,\n  Entry,\n  Entries,\n  EntryNote,\n  EntryDoc,\n  EntryFile,\n  EntryLink,\n  Labels,\n} from \"./types\";\nimport * as fn from \"./utils/fn_utils\";\nimport * as entry_utils from \"./utils/entry_utils\";\n\nimport { Settings, StorageSession, settingsReducer } from \"./settings\";\n\nimport { Repo, Repos } from \"./repo\";\nimport * as repo_utils from \"./repo\";\n\nimport { MultiRepoGitOps } from \"./git_ops\";\nimport * as git_ops from \"./git_ops\";\n\nimport { MultiRepoFileMap } from \"./filemap\";\n\nimport * as io from \"./io\";\nimport * as path_utils from \"./utils/path_utils\";\nimport * as date_utils from \"./utils/date_utils\";\nimport * as label_utils from \"./utils/label_utils\";\nimport * as markdown_utils from \"./utils/markdown_utils\";\nimport * as octokit from \"./octokit\";\nimport * as web_utils from \"./utils/web_utils\";\n\nimport List from \"./views/List\";\nimport EntryView from \"./views/EntryView\";\nimport NoteEditor, { NoteEditorRef } from \"./views/NoteEditor\";\nimport PrepareCommit from \"./views/PrepareCommit\";\nimport AddEntry from \"./views/AddEntry\";\nimport SettingsView from \"./views/SettingsView\";\n\nconst { Content } = Layout;\n\nconst ContentStyled = styled(Content)`\n  background: #fff;\n`;\n\ndeclare const Mousetrap: any;\n\nMousetrap.prototype.stopCallback = function (\n  e: KeyboardEvent,\n  element: HTMLElement,\n  combo: string\n) {\n  // https://craig.is/killing/mice\n  // console.log(\"stopCallback\", e, element, combo);\n  if (element.tagName === \"INPUT\" && e.key === \"Enter\") {\n    // don't fire mousetrap events for ENTER on input elements\n    return true;\n  } else {\n    // fire in all other cases\n    return false;\n  }\n};\n\n// https://stackoverflow.com/a/821227/1804173\nwindow.onbeforeunload = function () {\n  return \"Are you sure you want to navigate away? Uncommitted modifications will be lost.\";\n};\n\n// ----------------------------------------------------------------------------\n// Utils\n// ----------------------------------------------------------------------------\n\nfunction getScrollPosition(): number {\n  return document.documentElement.scrollTop || document.body.scrollTop;\n}\n\nfunction setScrollPosition(pos: number) {\n  document.documentElement.scrollTop = document.body.scrollTop = pos;\n}\n\n// ----------------------------------------------------------------------------\n// App state\n// ----------------------------------------------------------------------------\n\nenum Page {\n  // Real pages\n  Main = \"Main\",\n  Settings = \"Settings\",\n  EntryView = \"NoteView\",\n  NoteEditor = \"NoteEditor\",\n  Commit = \"Commit\",\n  // Pseudo pages\n  Reload = \"Reload\",\n  Add = \"Add\",\n}\n\ntype EditorPosition = {\n  scroll?: number;\n  cursor?: monacoEditor.Position;\n};\n\nconst noteViewPositions: { [index: string]: number } = {};\nconst noteEditorPositions: { [index: string]: EditorPosition } = {};\n\n// Mousetrap bindings are pulled out of the rendering look so that\n// in the rendering loop there is a lightweight re-attaching of the\n// keyboard hander callbacks (no repeated calls to moustrap.bind).\nconst keyboardHandlers = {\n  handleSwitchEdit: () => {},\n  handleSearch: () => {},\n};\n\nmousetrap.bind([\"command+e\", \"ctrl+e\"], () => {\n  keyboardHandlers.handleSwitchEdit();\n  return false;\n});\nmousetrap.bind([\"command+p\", \"ctrl+p\"], () => {\n  keyboardHandlers.handleSearch();\n  return false;\n});\n\n// ----------------------------------------------------------------------------\n// Reducer types\n// ----------------------------------------------------------------------------\n\ntype State = {\n  entries: Entries;\n  fileEntries: EntryFile[];\n  linkEntries: EntryLink[];\n  labels: Labels;\n  isReloading: boolean;\n  activeEntryIdx?: number;\n  page: Page;\n  allFileMapsOrig: MultiRepoFileMap;\n  allFileMapsEdit: MultiRepoFileMap;\n  stagedGitOps: MultiRepoGitOps;\n};\n\nenum ActionKind {\n  SwitchToPage = \"SwitchToPage\",\n  SwitchToEntryViewOnIdx = \"SwitchToEntryViewOnIdx\",\n  StartReloading = \"StartReloading\",\n  ReloadingDone = \"ReloadingDone\",\n  UpdateNoteContent = \"UpdateNoteContent\",\n  UpdateEntryMeta = \"UpdateEntryMeta\",\n  UpdateLinkEntryMeta = \"UpdateLinkEntryMeta\",\n  CreateEntry = \"CreateEntry\",\n  SuccessfulCommit = \"SuccessfulCommit\",\n}\n\ntype ActionSwitchToPage = {\n  kind: ActionKind.SwitchToPage;\n  page: Page;\n};\ntype ActionSwitchToEntryViewOnIdx = {\n  kind: ActionKind.SwitchToEntryViewOnIdx;\n  idx: number;\n};\ntype ActionStartReloading = {\n  kind: ActionKind.StartReloading;\n};\ntype ActionReloadingDone = {\n  kind: ActionKind.ReloadingDone;\n  entries: Entries;\n  fileEntries: EntryFile[];\n  linkEntries: EntryLink[];\n  labels: Labels;\n  allFileMapsOrig: MultiRepoFileMap;\n  allFileMapsEdit: MultiRepoFileMap;\n  stagedGitOps: MultiRepoGitOps;\n};\ntype ActionUpdateNoteContent = {\n  kind: ActionKind.UpdateNoteContent;\n  content: string;\n};\ntype ActionUpdateEntryMeta = {\n  kind: ActionKind.UpdateEntryMeta;\n  title: string;\n  labels: string[];\n};\ntype ActionUpdateLinkEntryMeta = {\n  kind: ActionKind.UpdateLinkEntryMeta;\n  title: string;\n  ownLabels: string[];\n};\n\ntype ActionCreateEntry = {\n  kind: ActionKind.CreateEntry;\n  entryKind: EntryKind;\n  title: string;\n  labels: string[];\n  content: string;\n  repo: Repo;\n  location?: string;\n  extension?: string;\n};\ntype ActionSuccessfulCommit = {\n  kind: ActionKind.SuccessfulCommit;\n};\n\ntype Action =\n  | ActionSwitchToPage\n  | ActionSwitchToEntryViewOnIdx\n  | ActionStartReloading\n  | ActionReloadingDone\n  | ActionUpdateNoteContent\n  | ActionUpdateEntryMeta\n  | ActionUpdateLinkEntryMeta\n  | ActionCreateEntry\n  | ActionSuccessfulCommit;\n\n// *** State change helpers\n\nfunction modifyFileEntry(\n  oldFileEntries: EntryFile[],\n  oldLinkEntries: EntryLink[],\n  oldEntry: EntryFile,\n  newEntry: EntryFile\n): [EntryFile[], EntryLink[], Entry[], number] | undefined {\n  /*\n  Updating a file entry is a slighty tricky operation, because it implies changes to\n  linkEntries, allEntries, and the active index. Initial brainstorming was:\n\n  Since the active entry content may have received new links or links were removed, the\n  length of the combined entries can change. This also means that the activeEntryIdx\n  may longer be valid, and needs to be reset accordingly. Note that it isn't safe to assume\n  that the activeEntryIdx doesn't change because notes are always sorted before links.\n  In general the activeEntryIdx can point to links as well, not only notes, so it does\n  not necessarily \"point to a stable area\".\n\n  Note: Currently the oldEntry is needed purely for its `key`, but still passed in\n  as a full entry for symmetry reasons.\n  */\n\n  // Identify active entry within old file entries\n  let fileEntryIdx = oldFileEntries.findIndex((entry) => entry.key === oldEntry.key);\n  if (fileEntryIdx === -1) {\n    // Should be unreachable because we have verified that the active entry is a note.\n    console.log(\"Illegal update: Could not find a file entry for entry key \" + oldEntry.key);\n    return;\n  }\n\n  // Modify the file entries\n  let newFileEntries = oldFileEntries.slice(0);\n  newFileEntries[fileEntryIdx] = newEntry;\n\n  // Recompute links and all entries\n  let [newLinkEntries, newEntries] = entry_utils.recomputeEntries(newFileEntries, oldLinkEntries);\n\n  // Recompute active entry idx\n  // Note: Identifiation must not use `oldEntry.key` because it can change.\n  let newActiveEntryIdx = newEntries.findIndex((entry) => entry === newEntry);\n  if (newActiveEntryIdx === -1) {\n    // Should be unreachable, the active entry shouldn't disappear.\n    console.log(\"Logic error: Active entry has disappeared.\");\n    return;\n  }\n\n  return [newFileEntries, newLinkEntries, newEntries, newActiveEntryIdx];\n}\n\nfunction modifyLinkEntry(\n  oldFileEntries: EntryFile[],\n  oldLinkEntries: EntryLink[],\n  oldEntry: EntryLink,\n  newEntry: EntryLink\n): [EntryLink[], Entry[], number] | undefined {\n  // Identify active entry within old link entries\n  let linkEntryIdx = oldLinkEntries.findIndex((entry) => entry.key === oldEntry.key);\n  if (linkEntryIdx === -1) {\n    // Should be unreachable because we have verified that the active entry is a note.\n    console.log(\"Illegal update: Could not find a link entry for entry key \" + oldEntry.key);\n    return;\n  }\n\n  // Modify the link entries\n  let tmpLinkEntries = oldLinkEntries.slice(0);\n  tmpLinkEntries[linkEntryIdx] = newEntry;\n\n  // Recompute links and all entries\n  let [newLinkEntries, newEntries] = entry_utils.recomputeEntries(oldFileEntries, tmpLinkEntries);\n\n  // Recompute active entry idx\n  // Note: Resetting the index is needed because title changes can imply order changes.\n  let newActiveEntryIdx = newEntries.findIndex((entry) => entry === newEntry);\n  if (newActiveEntryIdx === -1) {\n    // Should be unreachable, the active entry shouldn't disappear.\n    console.log(\"Logic error: Active entry has disappeared.\");\n    return;\n  }\n\n  return [newLinkEntries, newEntries, newActiveEntryIdx];\n}\n\nfunction addEntry(\n  oldFileEntries: EntryFile[],\n  oldLinkEntries: EntryLink[],\n  newAllFileMapsEdit: MultiRepoFileMap,\n  addEntryAction: ActionCreateEntry\n): [EntryFile[], EntryLink[], Entry[], number | undefined] {\n  const tuple = <T extends any[]>(...args: T): T => args;\n\n  const getNewEntriesForAddNote = () => {\n    let newFileEntries = oldFileEntries.slice(0);\n    let date = date_utils.getDateNow();\n    let newEntry: EntryNote = entry_utils.recomputeKey({\n      title: addEntryAction.title,\n      priority: 0,\n      labels: addEntryAction.labels,\n      content: {\n        kind: EntryKind.NoteMarkdown,\n        repo: addEntryAction.repo!,\n        location: addEntryAction.location!,\n        extension: \"md\",\n        timeCreated: date,\n        timeUpdated: date,\n        text: \"\",\n        html: \"\",\n        links: [],\n      },\n    });\n    newFileEntries.push(newEntry);\n    let [newLinkEntries, newEntries] = entry_utils.recomputeEntries(newFileEntries, oldLinkEntries);\n\n    // Staging\n    stageContent(newEntry, newAllFileMapsEdit);\n    stageMeta(newEntry, newAllFileMapsEdit);\n\n    return tuple(newFileEntries, newLinkEntries, newEntries, newEntry);\n  };\n\n  const getNewEntriesForAddDocument = () => {\n    let newFileEntries = oldFileEntries.slice(0);\n    let date = date_utils.getDateNow();\n    let newEntry: EntryDoc = entry_utils.recomputeKey({\n      title: addEntryAction.title,\n      priority: 0,\n      labels: addEntryAction.labels,\n      content: {\n        kind: EntryKind.Document,\n        repo: addEntryAction.repo!,\n        location: addEntryAction.location!,\n        extension: addEntryAction.extension!,\n        timeCreated: date,\n        timeUpdated: date,\n        stagedData: addEntryAction.content,\n      },\n    });\n    newFileEntries.push(newEntry);\n    let [newLinkEntries, newEntries] = entry_utils.recomputeEntries(newFileEntries, oldLinkEntries);\n\n    // Staging\n    stageContent(newEntry, newAllFileMapsEdit);\n    stageMeta(newEntry, newAllFileMapsEdit);\n\n    return tuple(newFileEntries, newLinkEntries, newEntries, newEntry);\n  };\n\n  const getNewEntriesForAddLink = () => {\n    let newFileEntries = oldFileEntries; // keep\n    let tmpLinkEntries = oldLinkEntries.slice(0);\n    let newEntry: EntryLink = entry_utils.recomputeKey({\n      title: addEntryAction.title,\n      priority: 0,\n      labels: addEntryAction.labels,\n      content: {\n        kind: EntryKind.Link,\n        target: addEntryAction.content,\n        referencedBy: [],\n        standaloneRepo: addEntryAction.repo,\n        refRepos: [],\n        refLocations: [],\n        ownLabels: addEntryAction.labels,\n      },\n    });\n    tmpLinkEntries.push(newEntry);\n    let [newLinkEntries, newEntries] = entry_utils.recomputeEntries(newFileEntries, tmpLinkEntries);\n\n    // Staging\n    entry_utils.stageLinkDBUpdate(newLinkEntries, newAllFileMapsEdit);\n\n    return tuple(newFileEntries, newLinkEntries, newEntries, newEntry);\n  };\n\n  let [newFileEntries, newLinkEntries, newEntries, newEntry] =\n    addEntryAction.entryKind === EntryKind.NoteMarkdown\n      ? getNewEntriesForAddNote()\n      : addEntryAction.entryKind === EntryKind.Document\n      ? getNewEntriesForAddDocument()\n      : getNewEntriesForAddLink();\n\n  // Compute active entry idx for new entry\n  let newActiveEntryIdx = newEntries.findIndex((entry) => entry === newEntry) as number | undefined;\n  if (newActiveEntryIdx === -1) {\n    // Should be unreachable.\n    console.log(\"Logic error: New entry has disappeared.\");\n    newActiveEntryIdx = undefined;\n  }\n\n  // Write new link DB\n  entry_utils.stageLinkDBUpdate(newLinkEntries, newAllFileMapsEdit);\n\n  return [newFileEntries, newLinkEntries, newEntries, newActiveEntryIdx];\n}\n\n// Stage helpers\n\nfunction stageNoteContent(entry: EntryNote, allFileMapsEdit: MultiRepoFileMap) {\n  let repo = entry.content.repo;\n  let path = path_utils.getPath(entry);\n  allFileMapsEdit.get(repo)?.data.setContent(path, entry.content.text);\n}\n\nfunction stageDocumentContent(entry: EntryDoc, allFileMapsEdit: MultiRepoFileMap) {\n  let repo = entry.content.repo;\n  let path = path_utils.getPath(entry);\n  if (entry.content.stagedData != null) {\n    allFileMapsEdit.get(repo)?.data.setContent(path, entry.content.stagedData);\n  }\n}\n\nfunction stageContent(entry: EntryFile, allFileMapsEdit: MultiRepoFileMap) {\n  if (entry_utils.isNote(entry)) {\n    stageNoteContent(entry, allFileMapsEdit);\n  } else if (entry_utils.isDoc(entry)) {\n    stageDocumentContent(entry, allFileMapsEdit);\n  }\n}\n\nfunction stageMeta(entry: EntryFile, allFileMapsEdit: MultiRepoFileMap) {\n  let metaData = entry_utils.extractMetaData(entry);\n  let metaDataContent = io.serializeMetaData(metaData);\n\n  let repo = entry.content.repo;\n  let path = path_utils.getPaths(entry).metaPath;\n  allFileMapsEdit.get(repo)?.data.setContent(path, metaDataContent);\n}\n\n// ----------------------------------------------------------------------------\n// Main state reducer\n// ----------------------------------------------------------------------------\n\nfunction reducer(state: State, action: Action): State {\n  switch (action.kind) {\n    case ActionKind.SwitchToPage: {\n      return { ...state, page: action.page };\n    }\n    case ActionKind.SwitchToEntryViewOnIdx: {\n      return { ...state, page: Page.EntryView, activeEntryIdx: action.idx };\n    }\n    case ActionKind.StartReloading: {\n      return { ...state, isReloading: true };\n    }\n    case ActionKind.ReloadingDone: {\n      // Note that a reload discards existing stagedGitOps due to the reset semantics.\n      return {\n        ...state,\n        isReloading: false,\n        entries: action.entries,\n        fileEntries: action.fileEntries,\n        linkEntries: action.linkEntries,\n        labels: action.labels,\n        allFileMapsOrig: action.allFileMapsOrig,\n        allFileMapsEdit: action.allFileMapsEdit,\n        stagedGitOps: action.stagedGitOps,\n      };\n    }\n    case ActionKind.UpdateNoteContent: {\n      if (state.activeEntryIdx == null) {\n        console.log(\"Illegal update: UpdateNoteContent called without an active entry.\");\n        return state;\n      }\n\n      let activeEntry = state.entries[state.activeEntryIdx!];\n      if (!entry_utils.isNote(activeEntry)) {\n        console.log(\"Illegal update: UpdateNoteContent called when active entry wasn't a note.\");\n        return state;\n      }\n\n      if (action.content !== activeEntry.content.text) {\n        let [html, links] = markdown_utils.processMarkdownText(action.content);\n\n        // TODO: It would be nice if we would only update the \"timeUpdate\" in case\n        // the content is different from the original content, i.e., in case of a\n        // revert the timeUpdated gets reverted as well. However that is a bit tricky.\n        // It is not so easy to get the original timestamp. We'd compare the\n        // current note content to the orignal note content. If it is the same\n        // we need the original timestamp. We'd probably have to re-parse the\n        // original meta data and extract it from there. Also we have to be\n        // careful about other modifications to meta data. I.e., if the note\n        // content matches to the original note content, but the labels have\n        // changed, we'd need to set `timeUpdated` as well. So the condition\n        // actually need to be more complex than just content comparison.\n        // Perhaps a helper function based on the 4 variables oldFile, newFile,\n        // oldMetaFile, newMetaFile would be good?\n        let activeEntryModified = entry_utils.recomputeKey({\n          ...activeEntry,\n          content: {\n            ...activeEntry.content,\n            text: action.content,\n            html: html,\n            links: links,\n            timeUpdated: date_utils.getDateNow(),\n          },\n        });\n        let result = modifyFileEntry(\n          state.fileEntries,\n          state.linkEntries,\n          activeEntry,\n          activeEntryModified\n        );\n        if (result == null) {\n          return state;\n        }\n        let [newFileEntries, newLinkEntries, newEntries, newActiveEntryIdx] = result;\n\n        // Stage git ops\n        let newAllFileMapsEdit = state.allFileMapsEdit.clone();\n        stageNoteContent(activeEntryModified, newAllFileMapsEdit);\n        stageMeta(activeEntryModified, newAllFileMapsEdit);\n\n        // Write new link DB\n        entry_utils.stageLinkDBUpdate(newLinkEntries, newAllFileMapsEdit);\n\n        // Diff to determine staged git ops\n        let stagedGitOps = git_ops.diffMultiFileMaps(state.allFileMapsOrig, newAllFileMapsEdit);\n\n        return {\n          ...state,\n          activeEntryIdx: newActiveEntryIdx,\n          entries: newEntries,\n          fileEntries: newFileEntries,\n          linkEntries: newLinkEntries,\n          allFileMapsEdit: newAllFileMapsEdit,\n          stagedGitOps: stagedGitOps,\n        };\n      } else {\n        return state;\n      }\n    }\n    case ActionKind.UpdateEntryMeta: {\n      if (state.activeEntryIdx == null) {\n        console.log(\"Illegal update: UpdateEntryMeta called without an active entry.\");\n        return state;\n      }\n\n      let activeEntry = state.entries[state.activeEntryIdx!];\n      if (entry_utils.isNote(activeEntry)) {\n        let oldTitle = activeEntry.title;\n        let newTitle = action.title;\n\n        let oldLabels = activeEntry.labels.slice(0);\n        let newLabels = action.labels;\n\n        let titleChanged = oldTitle !== newTitle;\n        let labelsChanged = !label_utils.isSameLabels(oldLabels, newLabels);\n\n        if (titleChanged || labelsChanged) {\n          let activeEntryModified = entry_utils.recomputeKey({\n            ...activeEntry,\n            title: newTitle,\n            labels: action.labels,\n          });\n          let result = modifyFileEntry(\n            state.fileEntries,\n            state.linkEntries,\n            activeEntry,\n            activeEntryModified\n          );\n          if (result == null) {\n            return state;\n          }\n          let [newFileEntries, newLinkEntries, newEntries, newActiveEntryIdx] = result;\n\n          // Stage git ops\n          // Note: Currently we don't care about titleChanged/labelsChanged values\n          // and just delete + re-add the files unconditionally for simplicity.\n          let newAllFileMapsEdit = state.allFileMapsEdit.clone();\n\n          let repo = activeEntryModified.content.repo;\n          let oldPaths = path_utils.getPaths(activeEntry);\n          let newPaths = path_utils.getPaths(activeEntryModified);\n          let metaData = entry_utils.extractMetaData(activeEntryModified);\n          let entryContent = activeEntryModified.content.text;\n          let metaDataContent = io.serializeMetaData(metaData);\n          newAllFileMapsEdit.get(repo)?.data.delete(oldPaths.path);\n          newAllFileMapsEdit.get(repo)?.data.delete(oldPaths.metaPath);\n          newAllFileMapsEdit.get(repo)?.data.setContent(newPaths.path, entryContent);\n          newAllFileMapsEdit.get(repo)?.data.setContent(newPaths.metaPath, metaDataContent);\n\n          // Diff to determine staged git ops\n          let stagedGitOps = git_ops.diffMultiFileMaps(state.allFileMapsOrig, newAllFileMapsEdit);\n\n          return {\n            ...state,\n            activeEntryIdx: newActiveEntryIdx,\n            entries: newEntries,\n            fileEntries: newFileEntries,\n            linkEntries: newLinkEntries,\n            allFileMapsEdit: newAllFileMapsEdit,\n            stagedGitOps: stagedGitOps,\n            labels: label_utils.extractLabels(newEntries),\n          };\n        } else {\n          return state;\n        }\n      } else {\n        return state;\n      }\n    }\n    case ActionKind.UpdateLinkEntryMeta: {\n      let activeEntry = state.entries[state.activeEntryIdx!];\n      if (entry_utils.isLink(activeEntry)) {\n        let oldTitle = activeEntry.title;\n        let newTitle = action.title;\n\n        let oldOwnLabels = activeEntry.content.ownLabels.slice(0);\n        let newOwnLabels = action.ownLabels;\n\n        let titleChanged = oldTitle !== newTitle;\n        let labelsChanged = !label_utils.isSameLabels(oldOwnLabels, newOwnLabels);\n\n        if (titleChanged || labelsChanged) {\n          let activeEntryModified = entry_utils.recomputeKey({\n            ...activeEntry,\n            title: newTitle,\n            content: {\n              ...activeEntry.content,\n              ownLabels: newOwnLabels,\n            },\n          });\n          let result = modifyLinkEntry(\n            state.fileEntries,\n            state.linkEntries,\n            activeEntry,\n            activeEntryModified\n          );\n          if (result == null) {\n            return state;\n          }\n          let [newLinkEntries, newEntries, newActiveEntryIdx] = result;\n\n          // Stage git ops\n          let newAllFileMapsEdit = state.allFileMapsEdit.clone();\n\n          // Write new link DB\n          entry_utils.stageLinkDBUpdate(newLinkEntries, newAllFileMapsEdit);\n\n          // Diff to determine staged git ops\n          let stagedGitOps = git_ops.diffMultiFileMaps(state.allFileMapsOrig, newAllFileMapsEdit);\n\n          return {\n            ...state,\n            activeEntryIdx: newActiveEntryIdx,\n            entries: newEntries,\n            linkEntries: newLinkEntries,\n            allFileMapsEdit: newAllFileMapsEdit,\n            stagedGitOps: stagedGitOps,\n            labels: label_utils.extractLabels(newEntries),\n          };\n        } else {\n          return state;\n        }\n      } else {\n        return state;\n      }\n    }\n    case ActionKind.CreateEntry: {\n      let newAllFileMapsEdit = state.allFileMapsEdit.clone();\n\n      let [newFileEntries, newLinkEntries, newEntries, newActiveEntryIdx] = addEntry(\n        state.fileEntries,\n        state.linkEntries,\n        newAllFileMapsEdit,\n        action\n      );\n\n      return {\n        ...state,\n        activeEntryIdx: newActiveEntryIdx,\n        page: Page.EntryView,\n        entries: newEntries,\n        fileEntries: newFileEntries,\n        linkEntries: newLinkEntries,\n        allFileMapsEdit: newAllFileMapsEdit,\n        stagedGitOps: git_ops.diffMultiFileMaps(state.allFileMapsOrig, newAllFileMapsEdit),\n        labels: label_utils.extractLabels(newEntries),\n      };\n    }\n    case ActionKind.SuccessfulCommit: {\n      // Design decision: On a successful commit, we treat the current memory\n      // content of the app as the ground truth of the repo content. This assumes\n      // that the commit indeed has exactly resulted in what the app state is.\n      // Let's see how valid this assumption is...\n      // The alternative would be to re-trigger a reload entries after the commit\n      // succeeded. The problem with that could be that there might be a delay in\n      // the visibility of the changes. I.e., if we refresh too quickly, perhaps\n      // the fetch would not pick up the change even if it succeeded, but still\n      // requires a some time to propagate (eventual consistency...). Delaying the\n      // refresh arbitrarily feels like a hack, and if the assumption is valid, we\n      // can safe unnecessary API requests / time.\n      return {\n        ...state,\n        allFileMapsOrig: state.allFileMapsEdit.clone(),\n        stagedGitOps: new MultiRepoGitOps(),\n      };\n    }\n\n    default: {\n      fn.assertUnreachable(action);\n    }\n  }\n}\n\n// ----------------------------------------------------------------------------\n// App\n// ----------------------------------------------------------------------------\n\nfunction App({ initSettings, session }: { initSettings: Settings; session: StorageSession }) {\n  console.log(\"Rendering: App\");\n\n  useEffectOnce(() => {\n    reloadEntries(initSettings.repos);\n  });\n\n  // *** Settings: Repos state\n\n  const [settings, settingsDispatch] = useReducer(settingsReducer, initSettings);\n\n  // Effect to store repo changes to local storage.\n  // Note that it is slightly awkward that we re-store the repos data\n  // after the initial loading, because it uses setRepos. But on first\n  // glance that shouldn't cause trouble and is better then reloading\n  // the repo data as an argument to useState in every re-render.\n  useDebouncedEffect(\n    () => {\n      // console.log(\"Storing settings:\", settings);\n      // Note that we only store settings in authenticated mode. Otherwise\n      // the demo modes (which use default settings + fixed repo values)\n      // would always overwrite the user's manually configured settings.\n      if (session.isAuthenticated()) {\n        session.storeSettings(settings);\n      }\n    },\n    300,\n    [session, settings]\n  );\n\n  async function reloadEntries(newRepos: Repos) {\n    console.log(\"Reloading entries\");\n\n    dispatch({ kind: ActionKind.StartReloading });\n\n    let newActiveRepos = repo_utils.filterActiveRepos(newRepos);\n    let [newFileEntries, allFileMapsOrig, allFileMapsEdit, allErrors] = await octokit.loadEntries(\n      newActiveRepos,\n      settings.auth\n    );\n\n    if (allErrors.length > 0) {\n      Modal.error({\n        title: \"Reload errors\",\n        content: `There were ${allErrors.length} request errors. Check console log for details.`,\n      });\n    }\n\n    let newLinkEntriesWithoutRefsResoled = entry_utils.extractLinkEntriesFromLinkDB(\n      allFileMapsOrig\n    );\n\n    let [newLinkEntries, newEntries] = entry_utils.recomputeEntries(\n      newFileEntries,\n      newLinkEntriesWithoutRefsResoled\n    );\n\n    // Write new link DB\n    entry_utils.stageLinkDBUpdate(newLinkEntries, allFileMapsEdit);\n\n    // Diff to determine staged git ops\n    let stagedGitOps = git_ops.diffMultiFileMaps(allFileMapsOrig, allFileMapsEdit);\n\n    dispatch({\n      kind: ActionKind.ReloadingDone,\n      entries: newEntries,\n      fileEntries: newFileEntries,\n      linkEntries: newLinkEntries,\n      labels: label_utils.extractLabels(newEntries),\n      allFileMapsOrig: allFileMapsOrig,\n      allFileMapsEdit: allFileMapsEdit,\n      stagedGitOps: stagedGitOps,\n    });\n  }\n\n  // *** Main state\n\n  const [state, dispatch] = useReducer(reducer, {\n    entries: [],\n    fileEntries: [],\n    linkEntries: [],\n    labels: [],\n    isReloading: false,\n    activeEntryIdx: undefined,\n    page: Page.Main,\n    stagedGitOps: new MultiRepoGitOps(),\n    allFileMapsOrig: new MultiRepoFileMap(),\n    allFileMapsEdit: new MultiRepoFileMap(),\n  });\n\n  // *** Derived state\n\n  const getActiveEntry = (): Entry | undefined => {\n    if (state.activeEntryIdx != null) {\n      return state.entries[state.activeEntryIdx];\n    }\n  };\n\n  const activeEntryIsNote = (): boolean => {\n    let activeEntry = getActiveEntry();\n    if (activeEntry == null) {\n      return false;\n    } else {\n      return entry_utils.isNote(activeEntry);\n    }\n  };\n\n  const anyStagedChange = () => {\n    return state.stagedGitOps.map((repo, ops) => ops.length).reduce((a, b) => a + b, 0) > 0;\n  };\n\n  // *** Refs\n\n  let editorRef = useRef<NoteEditorRef>(null);\n  let searchInputRef = useRef<HTMLInputElement>(null);\n\n  // *** State change helper functions\n\n  const updateEntryContent = () => {\n    if (editorRef.current != null) {\n      let newText = editorRef.current.getEditorContent();\n      if (newText != null) {\n        dispatch({ kind: ActionKind.UpdateNoteContent, content: newText });\n      }\n    }\n  };\n\n  const storeNoteViewPosition = () => {\n    let activeEntry = getActiveEntry();\n    if (activeEntry != null) {\n      noteViewPositions[activeEntry.key!] = getScrollPosition();\n    }\n  };\n  const restoreNoteViewPosition = () => {\n    let activeEntry = getActiveEntry();\n    if (activeEntry != null && activeEntry.key! in noteViewPositions) {\n      targetBodyPosition.current = noteViewPositions[activeEntry.key!];\n    }\n  };\n  const storeNoteEditorPosition = () => {\n    // console.log(\"At time of switching editor scroll is:\", editorRef.current?.getScrollPosition())\n    let activeEntry = getActiveEntry();\n    if (activeEntry != null && editorRef.current != null) {\n      let editorScrollPos = editorRef.current.getScrollPosition();\n      let editorCursorPos = editorRef.current.getCursorPosition();\n      noteEditorPositions[activeEntry.key!] = {\n        scroll: editorScrollPos,\n        cursor: editorCursorPos,\n      };\n    }\n  };\n  const restoreNoteEditorPosition = () => {\n    // Since the editor isn't mounted yet (editorRef.current == null) at the time\n    // of restoring, we need to postpone it. However we cannot use useLayoutEffect\n    // like in the case of normal DOM updates, because the editor will no be available\n    // immediately. The actual restoring has to be postponed until the onEditorDidMount\n    // callback\n    let activeEntry = getActiveEntry();\n    if (activeEntry != null && activeEntry.key! in noteEditorPositions) {\n      targetEditorPosition.current = noteEditorPositions[activeEntry.key!];\n    }\n  };\n\n  // *** Keyboard handlers\n\n  const prepareSwitchFrom = (pageFrom: Page) => {\n    switch (pageFrom) {\n      case Page.EntryView:\n        storeNoteViewPosition();\n        restoreNoteEditorPosition(); // TODO: Shouldn't the restore go into a separate postprocessSwitchTo?\n        break;\n      case Page.NoteEditor:\n        storeNoteEditorPosition();\n        restoreNoteViewPosition(); // TODO: Shouldn't the restore go into a separate postprocessSwitchTo?\n        updateEntryContent();\n        break;\n      default: {\n        break;\n      }\n    }\n  };\n\n  keyboardHandlers.handleSwitchEdit = () => {\n    if (state.page === Page.EntryView && activeEntryIsNote()) {\n      prepareSwitchFrom(state.page);\n      dispatch({ kind: ActionKind.SwitchToPage, page: Page.NoteEditor });\n    } else if (state.page === Page.NoteEditor && activeEntryIsNote()) {\n      prepareSwitchFrom(state.page);\n      dispatch({ kind: ActionKind.SwitchToPage, page: Page.EntryView });\n    } else {\n      console.log(\"Switching not possible\");\n    }\n  };\n  keyboardHandlers.handleSearch = () => {\n    if (state.page !== Page.Main) {\n      // setPage(Page.Main);\n      dispatch({ kind: ActionKind.SwitchToPage, page: Page.Main });\n    } else if (searchInputRef.current != null) {\n      searchInputRef.current.focus();\n    }\n  };\n\n  // Probably not much sense to useCallback here, because it has too many dependencies?\n  const onClickMenu = (menuInfo: MenuInfo) => {\n    // Should the prepareSwitchFrom(page) run before anything unconditionally,\n    // so that even a reloadEntries gives the editor a chance to save its\n    // content?\n\n    let clickedPage = menuInfo.key as Page;\n    switch (clickedPage) {\n      case Page.Reload: {\n        if (!state.isReloading) {\n          if (anyStagedChange() === false) {\n            reloadEntries(settings.repos);\n          } else {\n            Modal.confirm({\n              title: \"Do you want to reload entries?\",\n              icon: <ExclamationCircleOutlined />,\n              content:\n                \"You have uncommitted changes. Reloading the repository content will discard local changes.\",\n              onOk() {\n                reloadEntries(settings.repos);\n              },\n            });\n          }\n        }\n        break;\n      }\n      default: {\n        prepareSwitchFrom(state.page);\n        dispatch({ kind: ActionKind.SwitchToPage, page: clickedPage });\n      }\n    }\n  };\n\n  // *** Layout effects\n\n  const targetBodyPosition = useRef<number | null>(null);\n  const targetEditorPosition = useRef<EditorPosition | null>(null);\n\n  useLayoutEffect(() => {\n    // console.log(\"[layout effect] scrolling to:\", targetScrollPosition.current)\n    if (targetBodyPosition.current != null) {\n      setScrollPosition(targetBodyPosition.current);\n      targetBodyPosition.current = null;\n    }\n  });\n\n  // TODO: requires useCallback?\n  const onEditorDidMount = () => {\n    if (targetEditorPosition.current != null) {\n      if (targetEditorPosition.current.scroll != null) {\n        editorRef.current?.setScrollPosition(targetEditorPosition.current.scroll);\n      }\n      if (targetEditorPosition.current.cursor != null) {\n        editorRef.current?.setCursorPosition(targetEditorPosition.current.cursor);\n      }\n      targetEditorPosition.current = null;\n    }\n    // https://github.com/suren-atoyan/monaco-react/issues/141\n    window.requestAnimationFrame(() => {\n      editorRef.current?.focus();\n    });\n  };\n\n  // *** Render helpers\n  const renderCenter = () => {\n    switch (state.page) {\n      case Page.Main: {\n        return (\n          <List\n            ref={searchInputRef}\n            entries={state.entries}\n            labels={state.labels}\n            onEnterEntry={(i) => {\n              dispatch({ kind: ActionKind.SwitchToEntryViewOnIdx, idx: i });\n            }}\n          />\n        );\n      }\n      case Page.EntryView: {\n        return (\n          <EntryView\n            entry={getActiveEntry()}\n            onUpdateNoteData={(title, labels) => {\n              dispatch({ kind: ActionKind.UpdateEntryMeta, title: title, labels: labels });\n            }}\n            onUpdateLinkData={(title, ownLabels) => {\n              dispatch({\n                kind: ActionKind.UpdateLinkEntryMeta,\n                title: title,\n                ownLabels: ownLabels,\n              });\n            }}\n            onOpenDocument={async (entry: EntryDoc) => {\n              let contentBase64 = await octokit.downloadDocument(entry, settings.auth, false);\n              if (contentBase64.isOk()) {\n                let filename = path_utils.getBasename(entry);\n                let extension = entry.content.extension;\n                web_utils.downloadFromMemory(filename, extension, contentBase64.value);\n              }\n            }}\n          />\n        );\n      }\n      case Page.NoteEditor: {\n        return (\n          <NoteEditor\n            entry={getActiveEntry()}\n            settings={settings.editor}\n            ref={editorRef}\n            onEditorDidMount={onEditorDidMount}\n          />\n        );\n      }\n      case Page.Commit: {\n        return (\n          <PrepareCommit\n            auth={settings.auth}\n            ops={state.stagedGitOps}\n            onSuccessfulCommit={() => {\n              dispatch({ kind: ActionKind.SuccessfulCommit });\n            }}\n          />\n        );\n      }\n      case Page.Add: {\n        return (\n          <AddEntry\n            repos={repo_utils.filterActiveRepos(settings.repos)}\n            onAdded={({ entryKind, repo, title, labels, content, location, extension }) => {\n              dispatch({\n                kind: ActionKind.CreateEntry,\n                entryKind,\n                repo,\n                title,\n                labels,\n                content,\n                location,\n                extension,\n              });\n            }}\n          />\n        );\n      }\n      case Page.Settings: {\n        return (\n          <SettingsView\n            settings={settings}\n            dispatch={settingsDispatch}\n            isAuthenticatedSession={session.isAuthenticated()}\n          />\n        );\n      }\n    }\n  };\n\n  return (\n    <Layout style={{ height: \"100%\" }}>\n      {/* According to Antd style guide the menu should be wrapped in <Header> but I prefer the smaller sized menu. */}\n      <UiRow\n        center={\n          <Menu theme=\"dark\" mode=\"horizontal\" selectedKeys={[state.page]} onClick={onClickMenu}>\n            <Menu.Item\n              key={Page.Main}\n              icon={<FileSearchOutlined style={{ fontSize: 16 }} />}\n              title=\"Overview\"\n            />\n            <Menu.Item\n              key={Page.EntryView}\n              icon={<ReadOutlined style={{ fontSize: 16 }} />}\n              title=\"Entry Viewer\"\n              disabled={state.activeEntryIdx == null}\n            />\n            <Menu.Item\n              key={Page.NoteEditor}\n              icon={<EditOutlined style={{ fontSize: 16 }} />}\n              title=\"Editor\"\n              disabled={!activeEntryIsNote()}\n            />\n            <Menu.Item\n              key={Page.Add}\n              icon={<PlusOutlined style={{ fontSize: 16 }} />}\n              title=\"Add new entry\"\n            />\n            <Menu.Item\n              key={Page.Commit}\n              icon={<UploadOutlinedWithStatus status={anyStagedChange() === true} />}\n              title=\"Commit staged changes\"\n            />\n            <Menu.Item\n              key={Page.Reload}\n              icon={\n                !state.isReloading ? (\n                  <ReloadOutlined style={{ fontSize: 16 }} />\n                ) : (\n                  <LoadingOutlined style={{ fontSize: 16 }} />\n                )\n              }\n              title=\"Reload entries\"\n            />\n            <Menu.Item\n              key={Page.Settings}\n              icon={<SettingOutlined style={{ fontSize: 16 }} />}\n              title=\"Settings\"\n            />\n          </Menu>\n        }\n        style={{ background: \"#001529\" }}\n      />\n      <ContentStyled>{renderCenter()}</ContentStyled>\n    </Layout>\n  );\n}\n\nexport default App;\n","import React, { useState } from \"react\";\n\nimport { Form, Input, Button, Checkbox, Modal, Alert, Divider } from \"antd\";\nimport { LockOutlined } from \"@ant-design/icons\";\n\nimport { Settings, StorageSession, generateKeyFromStoredSalt } from \"./settings\";\n\nfunction LoginForm({\n  anyAuthStored,\n  onLogin,\n}: {\n  anyAuthStored: boolean;\n  onLogin: (settings: Settings, session: StorageSession) => void;\n}) {\n  let [loading, setLoading] = useState(false);\n\n  const onFinish = async (values: any) => {\n    setLoading(true);\n    try {\n      let key = await generateKeyFromStoredSalt(values[\"password\"]);\n      let reset = values[\"reset\"] as boolean;\n\n      let session = new StorageSession(key);\n      let settingsLoadResult = await session.loadSettings(reset);\n\n      if (anyAuthStored && settingsLoadResult.status.loadAuthFailed) {\n        Modal.error({\n          title: \"Failure\",\n          content: \"Failed to decrypt local data. Password mismatch?\",\n        });\n      } else {\n        // Call to onLogin must be asynchronous, because otherwise setLoading\n        // would try to do a state update to an already unmounted component.\n        setTimeout(() => {\n          onLogin(settingsLoadResult.settings, session);\n        }, 0);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Modal\n      visible={true}\n      title={\n        <span style={{ fontSize: 20 }}>\n          <img src=\"./favicon.ico\" alt=\"logo\" style={{ height: \"32px\", marginRight: \"8px\" }} />\n          notemarks\n        </span>\n      }\n      closable={false}\n      footer={null}\n    >\n      <Alert\n        message=\"Welcome to notemarks!\"\n        description={\n          <span>\n            <p>\n              Notemarks is a git based labeling app to manage notes, documents, and bookmarks. If\n              you are new to notemarks you may want to:\n            </p>\n            <ul style={{ marginBottom: 0 }}>\n              <li>\n                <p style={{ marginBottom: \"0.5em\" }}>\n                  Try the{\" \"}\n                  <a\n                    href=\"https://notemarks.app/#demo-tutorial\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    tutorial.\n                  </a>\n                </p>\n              </li>\n              <li>\n                Visit the{\" \"}\n                <a\n                  href=\"https://github.com/notemarks/notemarks\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  project page\n                </a>{\" \"}\n                for more information.\n              </li>\n            </ul>\n          </span>\n        }\n        type=\"info\"\n      />\n\n      <Divider />\n      <Form initialValues={{ reset: !anyAuthStored, password: \"\" }} onFinish={onFinish}>\n        <Form.Item\n          name=\"password\"\n          validateTrigger=\"onBlur\"\n          rules={[\n            () => ({\n              validator(rule, value) {\n                if (value != null && value.length >= 4) {\n                  return Promise.resolve();\n                } else {\n                  return Promise.reject(\n                    \"Local encryption password should have at least 4 characters.\"\n                  );\n                }\n              },\n            }),\n          ]}\n        >\n          <Input.Password\n            prefix={<LockOutlined />}\n            type=\"password\"\n            placeholder=\"Local encryption password\"\n            autoFocus\n          />\n        </Form.Item>\n        <Form.Item name=\"reset\" valuePropName=\"checked\">\n          <Checkbox>Reset local encryption password</Checkbox>\n        </Form.Item>\n        <Form.Item style={{ marginBottom: 0 }}>\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\n            Start\n          </Button>\n        </Form.Item>\n      </Form>\n\n      <Divider />\n      <div style={{ fontSize: 12, marginTop: \"8px\", color: \"#666\" }}>\n        <p>What is the purpose of the local encryption password?</p>\n        To enhance security, notemarks stores data in the browser cache with encryption. The\n        password does not refer to any account, i.e., no sign-up is required. You can choose and\n        reset the password at will. Losing or resetting the password will only mean that you'll have\n        to reconfigure the GitHub authentication setting of the app on this particular client. For\n        more information check the{\" \"}\n        <a\n          href=\"https://github.com/notemarks/notemarks#GitHubAuthentication\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          GitHub authentication\n        </a>{\" \"}\n        section in the readme.\n      </div>\n    </Modal>\n  );\n}\n\nexport default LoginForm;\n","import React, { useState } from \"react\";\n\nimport App from \"./App\";\nimport LoginForm from \"./LoginForm\";\n\nimport { useEffectOnce } from \"./utils/react_utils\";\n\nimport { Settings, StorageSession, isAnyAuthStored, getDefaultSettings } from \"./settings\";\nimport { createSimpleRepo } from \"./repo\";\n\nimport * as web_utils from \"./utils/web_utils\";\n\ntype StateNone = {\n  mode: \"none\";\n};\n\ntype StateLogin = {\n  mode: \"login\";\n  anyAuthStored: boolean;\n};\n\ntype StateApp = {\n  mode: \"app\";\n  initialSettings: Settings;\n  session: StorageSession;\n};\n\ntype State = StateNone | StateLogin | StateApp;\n\nfunction AppLifecycle() {\n  let [state, setState] = useState({ mode: \"none\" } as State);\n\n  const onLogin = (settings: Settings, session: StorageSession) => {\n    setState({\n      mode: \"app\",\n      initialSettings: settings,\n      session: session,\n    });\n  };\n\n  useEffectOnce(() => {\n    async function load() {\n      console.log(\"Initial load\");\n\n      let locInfo = parseWindowLocation();\n\n      if (locInfo.skipLogin === false) {\n        let anyAuthStored = await isAnyAuthStored();\n        web_utils.gtagLoginEvent();\n        setState({\n          mode: \"login\",\n          anyAuthStored: anyAuthStored,\n        });\n      } else {\n        let session = new StorageSession();\n        web_utils.gtagDemoEvent();\n        setState({\n          mode: \"app\",\n          initialSettings: locInfo.settings,\n          session: session,\n        });\n      }\n    }\n    load();\n  });\n\n  switch (state.mode) {\n    case \"none\":\n      return null;\n    case \"login\":\n      return <LoginForm anyAuthStored={state.anyAuthStored} onLogin={onLogin} />;\n    case \"app\":\n      return <App initSettings={state.initialSettings} session={state.session} />;\n  }\n}\n\ntype WindowLocationInfo =\n  | {\n      skipLogin: false;\n    }\n  | {\n      skipLogin: true;\n      settings: Settings;\n    };\n\nfunction parseWindowLocation(): WindowLocationInfo {\n  let hash = window.location.hash;\n  hash = hash.replace(/^#+/g, \"\");\n  console.log(hash);\n  if (hash === \"demo-awesome\" || hash === \"demo-tutorial\") {\n    let settings = getDefaultSettings();\n    settings.repos = [createSimpleRepo(\"Awesome\", \"notemarks\", hash)];\n    return {\n      skipLogin: true,\n      settings,\n    };\n  } else {\n    return {\n      skipLogin: false,\n    };\n  }\n}\n\nexport default AppLifecycle;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\n\nimport AppLifecycle from \"./app/AppLifecycle\";\n\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppLifecycle />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}